{***********************************************
Drum Lab 1.2
Options Page
Author: Native Instruments
Written by: Thanos Kazakos
Modified: June 11th, 2014
*************************************************}

on init
{general variables & Constants}
	message("")
	declare $init_LOADED := 1
	
	make_perfview
	{set_control_par_str($INST_WALLPAPER_ID,$CONTROL_PAR_PICTURE,"bg_HYBRID_drummer")}
	set_ui_height_px(540)
	set_skin_offset(1266)
	set_script_title("Options")

	declare polyphonic $played_key
	set_key_pressed_support(1)

	declare const $LISTENER_RESOL := 2		{in times per beat}	
	set_listener($NI_SIGNAL_TIMER_BEAT, $LISTENER_RESOL)
	
	declare const $KNOB_ADJUSTMENT_TOLERANCE := 150000
	declare $last_callback_id
	
	declare const $AT_THRESHOLD := 127
	
	declare const $FONT_1_ID := 15
	declare const $FONT_2_ID := 14 	{light}

	declare const $GROUP_NUM := 372

	declare const $MIDI_PTTRN_LOW	:= 12
	declare const $MIDI_PTTRN_HIGH	:= 24
	declare const $IS_KEYSWITCH		:= 12
	set_keyrange($MIDI_PTTRN_LOW, $MIDI_PTTRN_HIGH, "Groove Pattern Select")

	declare const $NUM_TILES					:= 19
	declare const $NUM_INSTRUMENTS				:= 20
	declare const $NUM_CONTROLS_SOURCE			:= 15
	declare const $NUM_CONTROLS_FX				:= 13
	declare const $NUM_CONTROLS_ONOFF			:= 4
	declare const $NUM_CONTROLS_MASTER_FX		:= 14
	declare const $NUM_CONTROLS_MASTER_FX_ONOFF	:= 4
	declare const $NUM_CONTROLS_REVERB			:= 2
	declare const $MAX_NUM_TOTAL_ART			:= 126
	declare const $MAX_NUM_GROUPS				:= 372

	declare @ART_MENU_ALIGNMENT_HELPER
	@ART_MENU_ALIGNMENT_HELPER := "          "
	
	{helpers}
	declare $a
	declare $b
	declare $c
	declare $d
	declare $x
	declare $y
	declare $z
	declare $tile_count
	declare $tile_count_2
	declare $mic_count
	declare $cur_instrument
	declare $last_instrument
	declare $inst_count
	declare $mic_group_offset
	declare $elec_grp_offset

	declare $init_flag := 1
	declare $count
	declare $count_1
	declare $count_2
	declare $count_3
	declare $count_4
	declare $key_count
	declare $key_counter
	declare $playing_flag
	declare $group_count
	declare $new_vel
	declare $temp_1
	declare $text_change_flag
	declare $note_id
	declare $cur_note
	declare $last_note
	{/helpers}
	
	{async command IDs}
	declare $load_user_mapping_data_id := -1
	declare $save_user_mapping_data_id := -1
	declare $load_user_mapping_names_id := -1
	declare $save_user_mapping_names_id := -1
	declare $load_num_user_presets_id := -1
	declare $save_num_user_presets_id := -1
	declare %load_check_id[04] := (-1)

	{/async command IDs}
	{/general variables}

{shared across Options, Kit & Voice Control scripts}

	declare const $AC_NUM_GROUPS := 252
	declare const $EL_NUM_GROUPS := 120
	
	declare const $KICK_ID := 0
	declare const $SNARE_ID := 1
	declare const $HH_ID := 2
	declare const $TOM1_ID := 3
	declare const $TOM2_ID := 4
	declare const $TOM3_ID := 5
	declare const $TOM4_ID := 6
	declare const $TOM5_ID := 7
	declare const $CYMB1_ID := 8
	declare const $CYMB2_ID := 9
	declare const $CYMB3_ID := 10
	declare const $CYMB4_ID := 11
	declare const $CYMB5_ID := 12
	declare const $CYMB6_ID := 13
	declare const $CYMB7_ID := 14
	declare const $PERC1_ID := 15
	declare const $PERC2_ID := 16
	declare const $PERC3_ID := 17
	declare const $PERC4_ID := 18
	declare const $PERC5_ID := 19
	declare const $END_ID := 20
	
	declare !INSTRUMENT_NAMES[20]
	!INSTRUMENT_NAMES[$KICK_ID]  := "KICK"
	!INSTRUMENT_NAMES[$SNARE_ID] := "SNARE"
	!INSTRUMENT_NAMES[$HH_ID]    := "HIHAT"
	!INSTRUMENT_NAMES[$TOM1_ID]  := "TOM A"
	!INSTRUMENT_NAMES[$TOM2_ID]  := "TOM B"
	!INSTRUMENT_NAMES[$TOM3_ID]  := "TOM C"
	!INSTRUMENT_NAMES[$TOM4_ID]  := ""
	!INSTRUMENT_NAMES[$TOM5_ID]  := ""
	!INSTRUMENT_NAMES[$CYMB1_ID] := "CRASH LO"
	!INSTRUMENT_NAMES[$CYMB2_ID] := "CRASH HI"
	!INSTRUMENT_NAMES[$CYMB3_ID] := "RIDE"
	!INSTRUMENT_NAMES[$CYMB4_ID] := ""
	!INSTRUMENT_NAMES[$CYMB5_ID] := ""
	!INSTRUMENT_NAMES[$CYMB6_ID] := ""
	!INSTRUMENT_NAMES[$CYMB7_ID] := ""
	!INSTRUMENT_NAMES[$PERC1_ID] := "PERC A"
	!INSTRUMENT_NAMES[$PERC2_ID] := "PERC B"
	!INSTRUMENT_NAMES[$PERC3_ID] := "PERC C"
	!INSTRUMENT_NAMES[$PERC4_ID] := "PERC D"
	!INSTRUMENT_NAMES[$PERC5_ID] := "PERC E"

	declare !inst_visual_names[20]
	!inst_visual_names[$KICK_ID]  := "Kick"
	!inst_visual_names[$SNARE_ID] := "Snare"
	!inst_visual_names[$HH_ID]    := "Hihat"
	!inst_visual_names[$TOM1_ID]  := "Tom A"
	!inst_visual_names[$TOM2_ID]  := "Tom B"
	!inst_visual_names[$TOM3_ID]  := "Tom C"
	!inst_visual_names[$TOM4_ID]  := ""
	!inst_visual_names[$TOM5_ID]  := ""
	!inst_visual_names[$CYMB1_ID] := "Crash LO"
	!inst_visual_names[$CYMB2_ID] := "Crash HI"
	!inst_visual_names[$CYMB3_ID] := "Ride"
	!inst_visual_names[$CYMB4_ID] := ""
	!inst_visual_names[$CYMB5_ID] := ""
	!inst_visual_names[$CYMB6_ID] := ""
	!inst_visual_names[$CYMB7_ID] := ""
	!inst_visual_names[$PERC1_ID] := "Perc A"
	!inst_visual_names[$PERC2_ID] := "Perc B"
	!inst_visual_names[$PERC3_ID] := "Perc C"
	!inst_visual_names[$PERC4_ID] := "Perc D"
	!inst_visual_names[$PERC5_ID] := "Perc E"
	
	{constants that are to be set per kit}
	declare %KEY_USED[128] := (1)	{which notes are used for this kit: 0 -> note is NOT used
																		1 -> note IS used}	
	{Kick}																    
	%KEY_USED[2] := 0
	%KEY_USED[3] := 0
	{Snares}
	%KEY_USED[5] := 0
	%KEY_USED[6] := 0
	%KEY_USED[8] := 0
	%KEY_USED[9] := 0
	%KEY_USED[15] := 0
	%KEY_USED[16] := 0
	%KEY_USED[17] := 0
	%KEY_USED[18] := 0
	%KEY_USED[19] := 0
	{HiHat}
	%KEY_USED[21] := 0
	%KEY_USED[22] := 0
	%KEY_USED[24] := 0
	%KEY_USED[25] := 0
	%KEY_USED[27] := 0
	%KEY_USED[28] := 0
	%KEY_USED[32] := 0
	%KEY_USED[34] := 0
	%KEY_USED[36] := 0
	%KEY_USED[37] := 0
	%KEY_USED[38] := 0
	%KEY_USED[39] := 0
	{Tom1}
	%KEY_USED[41] := 0
	%KEY_USED[42] := 0
	%KEY_USED[43] := 0
	%KEY_USED[44] := 0
	%KEY_USED[45] := 0
	%KEY_USED[46] := 0
	{Tom2}
	%KEY_USED[48] := 0
	%KEY_USED[49] := 0
	%KEY_USED[50] := 0
	%KEY_USED[51] := 0
	%KEY_USED[52] := 0
	%KEY_USED[53] := 0
	{Tom3}
	%KEY_USED[55] := 0
	%KEY_USED[56] := 0
	%KEY_USED[57] := 0
	%KEY_USED[58] := 0
	%KEY_USED[59] := 0
	%KEY_USED[60] := 0
	{Tom 4-5}
	%KEY_USED[61] := 0
	%KEY_USED[62] := 0
	%KEY_USED[63] := 0
	%KEY_USED[64] := 0
	%KEY_USED[65] := 0
	%KEY_USED[66] := 0
	%KEY_USED[67] := 0
	%KEY_USED[68] := 0
	%KEY_USED[69] := 0
	%KEY_USED[70] := 0
	%KEY_USED[71] := 0
	%KEY_USED[72] := 0
	%KEY_USED[73] := 0
	%KEY_USED[74] := 0
	{Cymbal 1}
	%KEY_USED[77] := 0
	%KEY_USED[78] := 0
	%KEY_USED[79] := 0
	{Cymbal 2}
	%KEY_USED[82] := 0
	%KEY_USED[83] := 0
	%KEY_USED[84] := 0
	{Cymbal 3}
	%KEY_USED[87] := 0
	%KEY_USED[88] := 0
	%KEY_USED[89] := 0
	%KEY_USED[90] := 0
	{Cymbal 4-7}
	%KEY_USED[91] := 0
	%KEY_USED[92] := 0
	%KEY_USED[93] := 0
	%KEY_USED[94] := 0
	%KEY_USED[95] := 0
	%KEY_USED[96] := 0
	%KEY_USED[97] := 0
	%KEY_USED[98] := 0
	%KEY_USED[99] := 0
	%KEY_USED[100] := 0
	%KEY_USED[101] := 0
	%KEY_USED[102] := 0
	%KEY_USED[103] := 0
	%KEY_USED[104] := 0
	%KEY_USED[105] := 0
	%KEY_USED[106] := 0
	{PERC}
	%KEY_USED[109] := 0
	%KEY_USED[110] := 0
	%KEY_USED[113] := 0
	%KEY_USED[114] := 0
	%KEY_USED[117] := 0
	%KEY_USED[119] := 0
	%KEY_USED[120] := 0

	%KEY_USED[123] := 0
	%KEY_USED[124] := 0
	%KEY_USED[125] := 0
	%KEY_USED[126] := 0
	%KEY_USED[127] := 0
	    
	declare %NUM_DIR_MICS[$NUM_INSTRUMENTS]
	%NUM_DIR_MICS[$KICK_ID]  :=  3				{3}
	%NUM_DIR_MICS[$SNARE_ID] :=  2				{2}
	%NUM_DIR_MICS[$HH_ID]    :=  1				{1}
	%NUM_DIR_MICS[$TOM1_ID]  :=  1				{1}
	%NUM_DIR_MICS[$TOM2_ID]  :=  1				{1}
	%NUM_DIR_MICS[$TOM3_ID]  :=  1				{1}
	%NUM_DIR_MICS[$TOM4_ID]  := -1				{1}
	%NUM_DIR_MICS[$TOM5_ID]  := -1				{1}
	%NUM_DIR_MICS[$CYMB1_ID] :=  1				{0}
	%NUM_DIR_MICS[$CYMB2_ID] :=  1				{0}
	%NUM_DIR_MICS[$CYMB3_ID] :=  1				{0}
	%NUM_DIR_MICS[$CYMB4_ID] := -1				{0}
	%NUM_DIR_MICS[$CYMB5_ID] := -1				{0}
	%NUM_DIR_MICS[$CYMB6_ID] := -1				{0}
	%NUM_DIR_MICS[$CYMB7_ID] := -1				{0}
	%NUM_DIR_MICS[$PERC1_ID] :=  1				{1}
	%NUM_DIR_MICS[$PERC2_ID] :=  1				{1}
	%NUM_DIR_MICS[$PERC3_ID] :=  1				{1}
	%NUM_DIR_MICS[$PERC4_ID] :=  1				{1}
	%NUM_DIR_MICS[$PERC5_ID] :=  1				{1}
	
	declare %NUM_ART[$NUM_INSTRUMENTS]
	%NUM_ART[$KICK_ID]  := 3					{4}
	%NUM_ART[$SNARE_ID] := 16					{15}
	%NUM_ART[$HH_ID]    := 20					{17}
	%NUM_ART[$TOM1_ID]  := 7					{6}
	%NUM_ART[$TOM2_ID]  := 7					{6}
	%NUM_ART[$TOM3_ID]  := 7					{6}
	%NUM_ART[$TOM4_ID]  := 0					{6}
	%NUM_ART[$TOM5_ID]  := 0					{6}
	%NUM_ART[$CYMB1_ID] := 5					{4}
	%NUM_ART[$CYMB2_ID] := 5					{4}
	%NUM_ART[$CYMB3_ID] := 6					{4}
	%NUM_ART[$CYMB4_ID] := 0					{4}
	%NUM_ART[$CYMB5_ID] := 0					{4}
	%NUM_ART[$CYMB6_ID] := 0					{4}
	%NUM_ART[$CYMB7_ID] := 0					{4}
	%NUM_ART[$PERC1_ID] := 2					{3}
	%NUM_ART[$PERC2_ID] := 2					{3}
	%NUM_ART[$PERC3_ID] := 2					{3}
	%NUM_ART[$PERC4_ID] := 2					{3}		{}
	%NUM_ART[$PERC5_ID] := 2					{3}
	{/constants that are to be set per kit}
	
	{the MIDI note the first articulation each one of the instruments is mapped to - according to the technical mapping}
	declare %AC_INSTRUMENT_OFFSET[$NUM_INSTRUMENTS + 1] := (-1)
	%AC_INSTRUMENT_OFFSET[$KICK_ID]  := 0
	%AC_INSTRUMENT_OFFSET[$SNARE_ID] := 4
	%AC_INSTRUMENT_OFFSET[$HH_ID]    := 20
	%AC_INSTRUMENT_OFFSET[$TOM1_ID]  := 40
	%AC_INSTRUMENT_OFFSET[$TOM2_ID]  := 47
	%AC_INSTRUMENT_OFFSET[$TOM3_ID]  := 54
	%AC_INSTRUMENT_OFFSET[$TOM4_ID]  := 61
	%AC_INSTRUMENT_OFFSET[$TOM5_ID]  := 68
	%AC_INSTRUMENT_OFFSET[$CYMB1_ID] := 75
	%AC_INSTRUMENT_OFFSET[$CYMB2_ID] := 80
	%AC_INSTRUMENT_OFFSET[$CYMB3_ID] := 85
	%AC_INSTRUMENT_OFFSET[$CYMB4_ID] := 91
	%AC_INSTRUMENT_OFFSET[$CYMB5_ID] := 95
	%AC_INSTRUMENT_OFFSET[$CYMB6_ID] := 99
	%AC_INSTRUMENT_OFFSET[$CYMB7_ID] := 103
	%AC_INSTRUMENT_OFFSET[$PERC1_ID] := 107
	%AC_INSTRUMENT_OFFSET[$PERC2_ID] := 111
	%AC_INSTRUMENT_OFFSET[$PERC3_ID] := 115
	%AC_INSTRUMENT_OFFSET[$PERC4_ID] := 118
	%AC_INSTRUMENT_OFFSET[$PERC5_ID] := 121
	%AC_INSTRUMENT_OFFSET[$END_ID]   := 127
	{/constants that are to be set per kit}
	
	{Group Lists per Articulation
	-----------------------------
	The number of the row is the note number the articulation is assigned to (refer to the technical mapping document).
	
	meaning of columns:
	#1: Group index of the 1st Direct mic of the articulation
	#2: Group index of the 2nd Direct mic of the articulation
	#3: Group index of the 3rd Direct mic of the articulation
	#4: Group index of the Snare Bleed of the articulation
	#5: Group index of the 1st Kit mic of the articulation
	#6: Group index of the 2nd Kit mic of the articulation
	#7: Group index of the 3rd Kit mic of the articulation
	#8: Group index of the 4th Kit mic of the articulation	
	
	Note: 	If a certain mic type is not available (eg, Snare Bleed for the snare hits), 
			-1 is going	to be used in the respective column.}

	declare %AC_GROUP_DATA[$MAX_NUM_TOTAL_ART * 8] := (...
			{KICK}		{0}	    0, 40, 59, -1,  78, 136, 194, -1,...
						{1}	    0, 40, 59, -1,  78, 136, 194, -1,...
						{2}	   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{3}	   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
			{SNARE 1}	{4}		9, 49, 68, -1,  87, 145, 203, -1,...
						{5}		9, 49, 68, -1,  87, 145, 203, -1,...
						{6}		9, 49, 68, -1,  87, 145, 203, -1,...
						{7}		9, 49, 68, -1,  87, 145, 203, -1,...
						{8}		9, 49, 68, -1,  87, 145, 203, -1,...
						{9}		9, 49, 68, -1,  87, 145, 203, -1,...
						{10}	9, 49, 68, -1,  87, 145, 203, -1,...
						{11}	9, 49, 68, -1,  87, 145, 203, -1,...
						{12}	9, 49, 68, -1,  87, 145, 203, -1,...
						{13}	9, 49, 68, -1,  87, 145, 203, -1,...
						{14}	9, 49, 68, -1,  87, 145, 203, -1,...
						{15}	9, 49, 68, -1,  87, 145, 203, -1,...
						{16}    9, 49, 68, -1,  87, 145, 203, -1,...
						{17}    9, 49, 68, -1,  87, 145, 203, -1,...
						{18}    9, 49, 68, -1,  87, 145, 203, -1,...
						{19}	9, 49, 68, -1,  87, 145, 203, -1,...
			{HI-HAT}	{20}   19, -1, -1, -1,  97, 155, 213, -1,...
						{21}   19, -1, -1, -1,  97, 155, 213, -1,...
						{22}   19, -1, -1, -1,  97, 155, 213, -1,...
						{23}   19, -1, -1, -1,  97, 155, 213, -1,...
						{24}   19, -1, -1, -1,  97, 155, 213, -1,...
						{25}   19, -1, -1, -1,  97, 155, 213, -1,...
						{26}   19, -1, -1, -1,  97, 155, 213, -1,...
						{17}   19, -1, -1, -1,  97, 155, 213, -1,...
						{28}   19, -1, -1, -1,  97, 155, 213, -1,...
						{29}   19, -1, -1, -1,  97, 155, 213, -1,...
						{30}   19, -1, -1, -1,  97, 155, 213, -1,...
						{31}   19, -1, -1, -1,  97, 155, 213, -1,...
						{32}   19, -1, -1, -1,  97, 155, 213, -1,...
						{33}   19, -1, -1, -1,  97, 155, 213, -1,...
						{34}   19, -1, -1, -1,  97, 155, 213, -1,...
						{35}   19, -1, -1, -1,  97, 155, 213, -1,...
						{36}   19, -1, -1, -1,  97, 155, 213, -1,...
						{37}   19, -1, -1, -1,  97, 155, 213, -1,...
						{38}   19, -1, -1, -1,  97, 155, 213, -1,...
						{39}   19, -1, -1, -1,  97, 155, 213, -1,...
			{TOM 1}		{40}   26, -1, -1, -1, 104, 162, 220, -1,...
						{41}   26, -1, -1, -1, 104, 162, 220, -1,...
						{42}   26, -1, -1, -1, 104, 162, 220, -1,...
						{43}   26, -1, -1, -1, 104, 162, 220, -1,...
						{44}   26, -1, -1, -1, 104, 162, 220, -1,...
						{45}   26, -1, -1, -1, 104, 162, 220, -1,...
						{46}   26, -1, -1, -1, 104, 162, 220, -1,...
			{TOM 2}		{47}   28, -1, -1, -1, 106, 164, 222, -1,...
						{48}   28, -1, -1, -1, 106, 164, 222, -1,...
						{49}   28, -1, -1, -1, 106, 164, 222, -1,...
						{50}   28, -1, -1, -1, 106, 164, 222, -1,...
						{51}   28, -1, -1, -1, 106, 164, 222, -1,...
						{52}   28, -1, -1, -1, 106, 164, 222, -1,...
						{53}   28, -1, -1, -1, 106, 164, 222, -1,...
			{TOM 3}		{54}   30, -1, -1, -1, 108, 166, 224, -1,...
						{55}   30, -1, -1, -1, 108, 166, 224, -1,...
						{56}   30, -1, -1, -1, 108, 166, 224, -1,...
						{57}   30, -1, -1, -1, 108, 166, 224, -1,...
						{58}   30, -1, -1, -1, 108, 166, 224, -1,...
						{59}   30, -1, -1, -1, 108, 166, 224, -1,...
						{60}   30, -1, -1, -1, 108, 166, 224, -1,...
			{TOM 4}		{61}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{62}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{63}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{64}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{65}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{66}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{67}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
			{TOM 5}		{68}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{69}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{70}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{71}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{72}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{73}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{74}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
			{CYMBAL 1}	{75}   -1, -1, -1, -1, 110, 168, 226, -1,...
						{76}   -1, -1, -1, -1, 110, 168, 226, -1,...
						{77}   -1, -1, -1, -1, 110, 168, 226, -1,...
						{78}   -1, -1, -1, -1, 110, 168, 226, -1,...
						{79}   -1, -1, -1, -1, 110, 168, 226, -1,...
			{CYMBAL 2}	{80}   -1, -1, -1, -1, 112, 170, 228, -1,...
						{81}   -1, -1, -1, -1, 112, 170, 228, -1,...
						{82}   -1, -1, -1, -1, 112, 170, 228, -1,...
						{83}   -1, -1, -1, -1, 112, 170, 228, -1,...
						{84}   -1, -1, -1, -1, 112, 170, 228, -1,...
			{CYMBAL 3}	{85}   -1, -1, -1, -1, 114, 172, 228, -1,...
						{86}   -1, -1, -1, -1, 114, 172, 228, -1,...
						{87}   -1, -1, -1, -1, 114, 172, 228, -1,...
						{88}   -1, -1, -1, -1, 114, 172, 228, -1,...
						{89}   -1, -1, -1, -1, 114, 172, 228, -1,...
						{90}   -1, -1, -1, -1, 114, 172, 228, -1,...
			{CYMBAL 4}	{91}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{92}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{93}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{94}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
			{CYMBAL 5}	{95}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{96}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{97}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{98}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
			{CYMBAL 6}	{99}   -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{100}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{101}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{102}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
			{CYMBAL 7}	{103}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{104}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{105}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{106}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
			{PERC A}	{107}  -1, -1, -1, -1, 116, 174, 232, -1,...
						{108}  -1, -1, -1, -1, 116, 174, 232, -1,...
						{109}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{110}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
			{PERC B}	{111}  32, -1, -1, -1, 120, 178, 236, -1,...
						{112}  32, -1, -1, -1, 120, 178, 236, -1,...
						{113}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{114}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
			{PERC C}	{115}  36, -1, -1, -1, 124, 182, 240, -1,...
						{116}  36, -1, -1, -1, 124, 182, 240, -1,...
						{117}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
			{PERC D}	{118}  -1, -1, -1, -1, 128, 186, 244, -1,...
						{119}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{120}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
			{PERC E}	{121}  -1, -1, -1, -1, 132, 190, 248, -1,...
						{122}  -1, -1, -1, -1, 132, 190, 248, -1,...
						{123}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{124}  -1, -1, -1, -1,  -1,  -1,  -1, -1,...
						{125}  -1, -1, -1, -1,  -1,  -1,  -1, -1)

 	declare %EL_GROUP_DATA[7]
	%EL_GROUP_DATA[$KICK_ID]  := 252
	%EL_GROUP_DATA[$SNARE_ID] := 272
	%EL_GROUP_DATA[$HH_ID]	  := 292
	%EL_GROUP_DATA[$TOM1_ID]  := 312
	%EL_GROUP_DATA[$TOM2_ID]  := 332
	%EL_GROUP_DATA[$TOM3_ID]  := 352
	%EL_GROUP_DATA[$TOM4_ID]  := 372

	declare %actual_inst_index[$NUM_INSTRUMENTS]
	%actual_inst_index[$KICK_ID]  := 0
	%actual_inst_index[$SNARE_ID] := 1
	%actual_inst_index[$HH_ID]    := 2
	%actual_inst_index[$TOM1_ID]  := 3
	%actual_inst_index[$TOM2_ID]  := 4
	%actual_inst_index[$TOM3_ID]  := 5
	%actual_inst_index[$TOM4_ID]  := 5
	%actual_inst_index[$TOM5_ID]  := 5
	%actual_inst_index[$CYMB1_ID] := 6
	%actual_inst_index[$CYMB2_ID] := 7
	%actual_inst_index[$CYMB3_ID] := 8
	%actual_inst_index[$CYMB4_ID] := 8
	%actual_inst_index[$CYMB5_ID] := 8
	%actual_inst_index[$CYMB6_ID] := 8
	%actual_inst_index[$CYMB7_ID] := 8
	%actual_inst_index[$PERC1_ID] := 9
	%actual_inst_index[$PERC2_ID] := 10
	%actual_inst_index[$PERC3_ID] := 11
	%actual_inst_index[$PERC4_ID] := 12
	%actual_inst_index[$PERC5_ID] := 13

	declare %Ac_Group_PURGE_State[$AC_NUM_GROUPS]
	make_persistent(%Ac_Group_PURGE_State)
	read_persistent_var(%Ac_Group_PURGE_State)
	
	declare %El_Group_PURGE_State[$EL_NUM_GROUPS]
	make_persistent(%El_Group_PURGE_State)
	read_persistent_var(%El_Group_PURGE_State)
	
	{CHOKE KEYS - if these notes are played, all events of their associated group will be faded}
	declare const $CYMB1_CHOKE := 78
	declare const $CYMB2_CHOKE := 83
	declare const $CYMB3_CHOKE := 88
	declare const $CYMB4_CHOKE := 86
	declare const $CYMB5_CHOKE := 90
	declare const $CYMB6_CHOKE := 94
	declare const $CYMB7_CHOKE := 98
	
	{Instruments per note}
	declare %which_key_to_which_inst[128] := (-1) {which key belongs to which instrument}
	$count_1 := 0
	$count_2 := 0
	while ($count_1 < %AC_INSTRUMENT_OFFSET[$END_ID])
		if ($count_1 >= %AC_INSTRUMENT_OFFSET[$count_2 + 1])
			inc($count_2)
		end if
		%which_key_to_which_inst[$count_1] := $count_2
		inc($count_1)
	end while
	{/shared across Options, Kit & Voice Control scripts}

{Instrument PICTURES}
	declare !INSTRUMENT_PICS[20]
	!INSTRUMENT_PICS[$KICK_ID] := "settings-menu"
	!INSTRUMENT_PICS[$SNARE_ID] := "settings-menu"
	!INSTRUMENT_PICS[$HH_ID] := "settings-menu"
	!INSTRUMENT_PICS[$TOM1_ID] := "settings-menu"
	!INSTRUMENT_PICS[$TOM2_ID] := "settings-menu"
	!INSTRUMENT_PICS[$TOM3_ID] := "settings-menu"
	!INSTRUMENT_PICS[$TOM4_ID] := "settings-menu"
	!INSTRUMENT_PICS[$TOM5_ID] := "settings-menu"
	!INSTRUMENT_PICS[$CYMB1_ID] := "settings-menu" 	
	!INSTRUMENT_PICS[$CYMB2_ID] := "settings-menu" 	
	!INSTRUMENT_PICS[$CYMB3_ID] := "settings-menu" 		
	!INSTRUMENT_PICS[$CYMB4_ID] := "settings-menu" 	
	!INSTRUMENT_PICS[$CYMB5_ID] := "settings-menu" 	
	!INSTRUMENT_PICS[$CYMB6_ID] := "settings-menu 6"	
	!INSTRUMENT_PICS[$CYMB7_ID] := "settings-menu 7"	
	!INSTRUMENT_PICS[$PERC1_ID] := "settings-menu"	
	!INSTRUMENT_PICS[$PERC2_ID] := "settings-menu"		
	!INSTRUMENT_PICS[$PERC3_ID] := "settings-menu"
	!INSTRUMENT_PICS[$PERC4_ID] := "settings-menu"	
	!INSTRUMENT_PICS[$PERC5_ID] := "settings-menu"	
	{/Instrument PICTURES}

{Control Group "SOUND PRESET"}
	
	{/Control Group "SOUND PRESET"}

{Control Group "Groove}
	pgs_create_key(PLAY_BUTTON, 1)

	{declarations}
	declare ui_button $play
	declare ui_label $groove_display (1, 1)
	declare ui_button $prev_groove
	declare ui_button $next_groove
	{/declarations}
	
	{ui_ids}
	declare %ui_id[5]
	%ui_id[1] := get_ui_id($play)
	%ui_id[2] := get_ui_id($groove_display)
	%ui_id[3] := get_ui_id($prev_groove)
	%ui_id[4] := get_ui_id($next_groove)
	{/ui_ids}
	
	{Pictures}
	set_control_par_str(%ui_id[1],$CONTROL_PAR_PICTURE,"header-play-btn")
	set_control_par_str(%ui_id[2],$CONTROL_PAR_PICTURE,"header-mididrag-label")
	set_control_par_str(%ui_id[3],$CONTROL_PAR_PICTURE,"header-preset-left-btn")
	set_control_par_str(%ui_id[4],$CONTROL_PAR_PICTURE,"header-preset-right-btn")
	{/Pictures}
	
	{Font IDs & Text Position}
	set_control_par(%ui_id[2], $CONTROL_PAR_FONT_TYPE, $FONT_1_ID)
	set_control_par(%ui_id[2], $CONTROL_PAR_TEXTPOS_Y,8)
	{/Font IDs & Text Position}

	{Position}
	set_control_par(%ui_id[1],$CONTROL_PAR_POS_X,566)
	set_control_par(%ui_id[1],$CONTROL_PAR_POS_Y,12)
	
	set_control_par(%ui_id[2],$CONTROL_PAR_POS_X,431)
	set_control_par(%ui_id[2],$CONTROL_PAR_POS_Y,43)
	
	set_control_par(%ui_id[3],$CONTROL_PAR_POS_X,587)
	set_control_par(%ui_id[3],$CONTROL_PAR_POS_Y,41)
	
	set_control_par(%ui_id[4],$CONTROL_PAR_POS_X,603)
	set_control_par(%ui_id[4],$CONTROL_PAR_POS_Y,41)
	{/Position}
	
	{Size}		
	set_control_par(%ui_id[1],$CONTROL_PAR_WIDTH,54)
	set_control_par(%ui_id[1],$CONTROL_PAR_HEIGHT,29)
	
	set_control_par(%ui_id[2],$CONTROL_PAR_WIDTH,154)
	set_control_par(%ui_id[2],$CONTROL_PAR_HEIGHT,18)
	
	set_control_par(%ui_id[3],$CONTROL_PAR_WIDTH,18)
	set_control_par(%ui_id[3],$CONTROL_PAR_HEIGHT,24)
	
	set_control_par(%ui_id[4],$CONTROL_PAR_WIDTH,18)
	set_control_par(%ui_id[4],$CONTROL_PAR_HEIGHT,24)
	{/Size}
	
	{Text}
	set_control_par_str(%ui_id[1],$CONTROL_PAR_TEXT,"")
	set_control_par_str(%ui_id[3],$CONTROL_PAR_TEXT,"")
	set_control_par_str(%ui_id[4],$CONTROL_PAR_TEXT,"")
	{/Text}
	
	{Help Text}
	set_control_par_str(%ui_id[1],$CONTROL_PAR_HELP,"Play: Use this control to start or stop playback. Playback is always following host song position if available.")
	set_control_par_str(%ui_id[2],$CONTROL_PAR_HELP,"Active Groove: This is the area where the active groove or fill is displayed at any time. This is also the area from which you can drag the groove to your host project.")
	set_control_par_str(%ui_id[3],$CONTROL_PAR_HELP,"Previous Groove: Use this control to skip to the previous variation of the active groove or fill.")
	set_control_par_str(%ui_id[4],$CONTROL_PAR_HELP,"Next Groove: Use this control to skip to the next variation of the active groove or fill.")
	{/Help Text}
	
	{Other}
	set_control_par(%ui_id[2],$CONTROL_PAR_DND_BEHAVIOUR,1) 
	{/Other}
	{/Control Group "Groove"}

{Control Group "Velocity"}
	{Declarations}
	declare ui_slider $min_velocity_sld (1,127)
	declare ui_slider $max_velocity_sld (1,127)
	declare ui_button $linear_velocity_btn
	declare ui_button $exp_1_velocity_btn
	declare ui_button $exp_2_velocity_btn
	declare ui_button $fix_velocity_btn
	declare ui_button $min_vel_up_btn
	declare ui_button $max_vel_up_btn
	declare ui_button $min_vel_dn_btn
	declare ui_button $max_vel_dn_btn
	declare %min_velocity_key[128] := (1)
	declare %max_velocity_key[128] := (127)
	make_persistent(%min_velocity_key)
	make_persistent(%max_velocity_key)
	{/Declarations}

	{snapshot isolation}
	make_instr_persistent($min_velocity_sld)
	make_instr_persistent($max_velocity_sld)
	make_instr_persistent($linear_velocity_btn)
	make_instr_persistent($exp_1_velocity_btn)
	make_instr_persistent($exp_2_velocity_btn)
	make_instr_persistent($fix_velocity_btn)
	make_instr_persistent($min_vel_up_btn)
	make_instr_persistent($max_vel_up_btn)
	make_instr_persistent($min_vel_dn_btn)
	make_instr_persistent($max_vel_dn_btn)
	make_instr_persistent(%min_velocity_key)
	make_instr_persistent(%max_velocity_key)
	
	{ui_ids}
	declare %velocity_id[10]
	%velocity_id[0] := get_ui_id($min_velocity_sld)
	%velocity_id[1] := get_ui_id($max_velocity_sld)
	%velocity_id[2] := get_ui_id($linear_velocity_btn)
	%velocity_id[3] := get_ui_id($exp_1_velocity_btn)
	%velocity_id[4] := get_ui_id($exp_2_velocity_btn)
	%velocity_id[5] := get_ui_id($fix_velocity_btn)
	%velocity_id[6] := get_ui_id($min_vel_up_btn)
	%velocity_id[7] := get_ui_id($max_vel_up_btn)
	%velocity_id[8] := get_ui_id($min_vel_dn_btn)
	%velocity_id[9] := get_ui_id($max_vel_dn_btn)
	{/ui_ids}
	
	{Position}
	set_control_par(%velocity_id[0],$CONTROL_PAR_POS_X,386)
	set_control_par(%velocity_id[0],$CONTROL_PAR_POS_Y,213)
	set_control_par(%velocity_id[1],$CONTROL_PAR_POS_X,500)
	set_control_par(%velocity_id[1],$CONTROL_PAR_POS_Y,213)
	
	set_control_par(%velocity_id[2],$CONTROL_PAR_POS_X,385)
	set_control_par(%velocity_id[2],$CONTROL_PAR_POS_Y,163)
	set_control_par(%velocity_id[3],$CONTROL_PAR_POS_X,get_control_par(%velocity_id[2],$CONTROL_PAR_POS_X) +52)
	set_control_par(%velocity_id[3],$CONTROL_PAR_POS_Y,get_control_par(%velocity_id[2],$CONTROL_PAR_POS_Y))
	set_control_par(%velocity_id[4],$CONTROL_PAR_POS_X,get_control_par(%velocity_id[2],$CONTROL_PAR_POS_X) +52*2)
	set_control_par(%velocity_id[4],$CONTROL_PAR_POS_Y,get_control_par(%velocity_id[2],$CONTROL_PAR_POS_Y))
	set_control_par(%velocity_id[5],$CONTROL_PAR_POS_X,get_control_par(%velocity_id[2],$CONTROL_PAR_POS_X) +52*3)
	set_control_par(%velocity_id[5],$CONTROL_PAR_POS_Y,get_control_par(%velocity_id[2],$CONTROL_PAR_POS_Y))

	set_control_par(%velocity_id[6],$CONTROL_PAR_POS_X,466)
	set_control_par(%velocity_id[6],$CONTROL_PAR_POS_Y,211)
	set_control_par(%velocity_id[7],$CONTROL_PAR_POS_X,579)
	set_control_par(%velocity_id[7],$CONTROL_PAR_POS_Y,211)
	set_control_par(%velocity_id[8],$CONTROL_PAR_POS_X,466)
	set_control_par(%velocity_id[8],$CONTROL_PAR_POS_Y,224)
	set_control_par(%velocity_id[9],$CONTROL_PAR_POS_X,579)
	set_control_par(%velocity_id[9],$CONTROL_PAR_POS_Y,224)
	{/Position}
	
	{Size}
	set_control_par(%velocity_id[2],$CONTROL_PAR_WIDTH,55)
	set_control_par(%velocity_id[2],$CONTROL_PAR_HEIGHT,29)
	set_control_par(%velocity_id[3],$CONTROL_PAR_WIDTH,55)
	set_control_par(%velocity_id[3],$CONTROL_PAR_HEIGHT,29)
	set_control_par(%velocity_id[4],$CONTROL_PAR_WIDTH,55)
	set_control_par(%velocity_id[4],$CONTROL_PAR_HEIGHT,29)
	set_control_par(%velocity_id[5],$CONTROL_PAR_WIDTH,55)
	set_control_par(%velocity_id[5],$CONTROL_PAR_HEIGHT,29)

	set_control_par(%velocity_id[6],$CONTROL_PAR_WIDTH,17)
	set_control_par(%velocity_id[6],$CONTROL_PAR_HEIGHT,15)
	set_control_par(%velocity_id[7],$CONTROL_PAR_WIDTH,17)
	set_control_par(%velocity_id[7],$CONTROL_PAR_HEIGHT,15)
	set_control_par(%velocity_id[8],$CONTROL_PAR_WIDTH,17)
	set_control_par(%velocity_id[8],$CONTROL_PAR_HEIGHT,15)
	set_control_par(%velocity_id[9],$CONTROL_PAR_WIDTH,17)
	set_control_par(%velocity_id[9],$CONTROL_PAR_HEIGHT,15)
	{/Size}

	{Pictures}
	set_control_par_str(%velocity_id[0], $CONTROL_PAR_PICTURE, "settings-numbers")
	set_control_par_str(%velocity_id[1], $CONTROL_PAR_PICTURE, "settings-numbers")
	
	set_control_par_str(%velocity_id[2], $CONTROL_PAR_PICTURE, "settings-curve1-btn")
	set_control_par_str(%velocity_id[3], $CONTROL_PAR_PICTURE, "settings-curve2-btn")
	set_control_par_str(%velocity_id[4], $CONTROL_PAR_PICTURE, "settings-curve3-btn")
	set_control_par_str(%velocity_id[5], $CONTROL_PAR_PICTURE, "settings-curve4-btn")
	
	set_control_par_str(%velocity_id[6], $CONTROL_PAR_PICTURE, "settings-up-btn")
	set_control_par_str(%velocity_id[7], $CONTROL_PAR_PICTURE, "settings-up-btn")
	set_control_par_str(%velocity_id[8], $CONTROL_PAR_PICTURE, "settings-down-btn")
	set_control_par_str(%velocity_id[9], $CONTROL_PAR_PICTURE, "settings-down-btn")
	{/Pictures}
	
	{Mouse Behaviour}
	set_control_par(%velocity_id[0], $CONTROL_PAR_MOUSE_BEHAVIOUR, -500)
	set_control_par(%velocity_id[1], $CONTROL_PAR_MOUSE_BEHAVIOUR, -500)
	{/Mouse Behaviour}
	
	{Text}
	$count_1 := 2
	while ($count_1 < 10)
		set_control_par_str(%velocity_id[$count_1], $CONTROL_PAR_TEXT, "")
		inc($count_1)
	end while
	{/Text}
	
	{Persistency}
	make_persistent ($min_velocity_sld)
	make_persistent ($max_velocity_sld)
	make_persistent ($linear_velocity_btn)
	make_persistent ($exp_1_velocity_btn)
	make_persistent ($exp_2_velocity_btn)
	make_persistent ($fix_velocity_btn)
	{/Persistency}

	{Help Text}
	set_control_help($min_velocity_sld,"Min: Sets the minimum velocity value. Played velocities below this limit will be set to that value.")
	set_control_help($min_vel_up_btn,"Min: Sets the minimum velocity value. Played velocities below this limit will be set to that value.")
	set_control_help($min_vel_dn_btn,"Min: Sets the minimum velocity value. Played velocities below this limit will be set to that value.")
	set_control_help($max_velocity_sld,"Max: Sets the maximum velocity value. Played velocities above this limit will be set to that value. When the <Fixed Velocity Curve> is selected, this value determines the played velocity.")
	set_control_help($max_vel_up_btn,"Max: Sets the maximum velocity value. Played velocities above this limit will be set to that value. When the <Fixed Velocity Curve> is selected, this value determines the played velocity.")
	set_control_help($max_vel_dn_btn,"Max: Sets the maximum velocity value. Played velocities above this limit will be set to that value. When the <Fixed Velocity Curve> is selected, this value determines the played velocity.")
	set_control_help ($linear_velocity_btn,"Velocity Curve: Sets the velocity behaviour to a linear response.")
	set_control_help ($exp_1_velocity_btn,"Exponential Velocity Curve +: Sets the velocity behaviour to a positive exponential response.")
	set_control_help ($exp_2_velocity_btn,"Exponential Velocity Curve -: Sets the velocity behaviour to a negative exponential response.")
	set_control_help ($fix_velocity_btn,"Fixed Velocity: Sets all played velocities to the value specified with the <Max> control.")
	{/Help Text}
	
	{Automation}
	set_control_par(%velocity_id[0], $CONTROL_PAR_ALLOW_AUTOMATION, 0)
	set_control_par(%velocity_id[1], $CONTROL_PAR_ALLOW_AUTOMATION, 0)
	{/Automation}
	
	{Init & Default Values}
	$min_velocity_sld := 1
	$max_velocity_sld := 127
	$linear_velocity_btn := 1
	$exp_1_velocity_btn := 0
	$exp_2_velocity_btn := 0
	$fix_velocity_btn := 0
	
	set_control_par(%velocity_id[0], $CONTROL_PAR_DEFAULT_VALUE, 1)
	set_control_par(%velocity_id[1], $CONTROL_PAR_DEFAULT_VALUE, 127)
	{/Init & Default Values}
	
	{Other}		
	declare $mode_velocity {the button states of the four velocity curves}
	make_persistent ($mode_velocity)

	declare %mode_velocity_key[128]
	make_persistent(%mode_velocity_key)

	make_instr_persistent(%mode_velocity_key)
	
	declare const $EXP_SHAPE := 20
	
	declare %table[128 * 128]
	
	declare $CShow
	make_persistent ($CShow)
	
	declare $curve
	make_persistent ($curve)
	$curve := 0
	
	declare const $Shape := 35
	
	declare $helper
	declare %helper_2[128]
	declare $helper_3
	declare $helper_4
	declare $knob_helper
	
	$count_3 := 0
	while ($count_3 < 128)
		$count_1 := 1
		while ($count_1 < 128)
			%table[$count_3 * 128 + $count_1] := $count_1
			inc ($count_1)
		end while
		inc($count_3)
	end while
	
	make_persistent (%table)
	make_persistent ($curve)

	make_instr_persistent(%table)
	make_instr_persistent($curve)
	
	declare %shape_form[128]
	declare %curve_form[128]
	declare %comp_form[128]
	$count_1 := 0
	while($count_1 < 128)
		%shape_form[$count_1] := $count_1*100
		%curve_form[$count_1] := $count_1*100
		%comp_form[$count_1] := $count_1
		inc($count_1)
	end while
	make_persistent(%curve_form)
	make_persistent(%shape_form)
	make_persistent(%comp_form)
	declare %curve_table_helper[128]
	declare %curve_deriv[128]
	declare $curve_hight
	
	$knob_helper := ($Shape *(-1) + 1000)
	$count_1 := 0
	$helper := 1000
	$curve_hight := 0
	while($count_1 < 64)
		$helper := ($helper * $knob_helper)/1000
		%curve_deriv[$count_1] := $helper
		%curve_deriv[127-$count_1] := $helper
		$curve_hight := $curve_hight + (%curve_deriv[$count_1]*2)
		inc($count_1)
	end while
	$count_1 := 1
	%curve_table_helper[0] := 0
	while ($count_1 <128)
		%curve_table_helper[$count_1] := ((%curve_table_helper[$count_1-1]+%curve_deriv[$count_1]))
		inc($count_1)
	end while
	$count_1 := 0
	while ($count_1 <128)
		%shape_form[$count_1] := ((%curve_table_helper[$count_1]*128)/(($curve_hight)/100))
		inc($count_1)
	end while
	$count_1 := 0
	while ($count_1 <128)
		%shape_form[$count_1] := (%shape_form[$count_1]*12700)/%shape_form[127]
		inc($count_1)
	end while
	{/Other}
	{/Control Group "Velocity"}

{Control Group "Mapping"}
	declare const $NUM_FACTORY_PRESETS := 11
	declare const $MAX_NUM_USER_PRESETS := 100

	declare %FACTORY_MAPPING[$NUM_FACTORY_PRESETS * 128] := (-1)
	declare %DL_user_mapping_data[$MAX_NUM_USER_PRESETS * 128 + 1] := (-1)
	declare !DL_user_mapping_names[$MAX_NUM_USER_PRESETS]
	declare %DL_num_user_presets[1] := (0)
	declare %current_mapping_data[128] := (-1)
	declare %inverse_mapping_data[128] := (-1)
	
	{Default Mapping}
		$count_1 := 0					    {Note# -> # Technical Mapping}
		%FACTORY_MAPPING[$count_1 * 128 + 22] := 78		{CHOKE 1-5}
		%FACTORY_MAPPING[$count_1 * 128 + 23] := 88
		%FACTORY_MAPPING[$count_1 * 128 + 24] := 83
		%FACTORY_MAPPING[$count_1 * 128 + 25] := 78
		
		%FACTORY_MAPPING[$count_1 * 128 + 35] := 1 		{kick}
		%FACTORY_MAPPING[$count_1 * 128 + 36] := 1 		{kick}
		%FACTORY_MAPPING[$count_1 * 128 + 37] := 0 		{kick}
		%FACTORY_MAPPING[$count_1 * 128 + 38] := 4 		{snare center}
		%FACTORY_MAPPING[$count_1 * 128 + 39] := 11 	{snare sidestick}
		%FACTORY_MAPPING[$count_1 * 128 + 40] := 7 		{snare halway}
		%FACTORY_MAPPING[$count_1 * 128 + 41] := 10 	{snare rimshot}
		%FACTORY_MAPPING[$count_1 * 128 + 42] := 23 	{hihat}
		%FACTORY_MAPPING[$count_1 * 128 + 43] := 54 	{TOM 3}
		%FACTORY_MAPPING[$count_1 * 128 + 44] := 29 	{hihat}
		%FACTORY_MAPPING[$count_1 * 128 + 45] := 47 	{TOM 2}
		%FACTORY_MAPPING[$count_1 * 128 + 46] := 31 	{hihat controller}
		%FACTORY_MAPPING[$count_1 * 128 + 47] := 40 	{TOM 1}
		%FACTORY_MAPPING[$count_1 * 128 + 48] := 76 	{Crash 1 - High EDGE}
		%FACTORY_MAPPING[$count_1 * 128 + 49] := 75 	{Crash 1 - High TIP}
		%FACTORY_MAPPING[$count_1 * 128 + 50] := 81 	{Crash 2 - Low EDGE}
		%FACTORY_MAPPING[$count_1 * 128 + 51] := 80 	{Crash 2 - Low TIP}
		%FACTORY_MAPPING[$count_1 * 128 + 52] := 85 	{Crash 3 RIDE BELL}
		%FACTORY_MAPPING[$count_1 * 128 + 53] := 86 	{Crash 3 RIDE TIP}
		%FACTORY_MAPPING[$count_1 * 128 + 54] := 23 	{hihat}
		%FACTORY_MAPPING[$count_1 * 128 + 55] := 33 	{hihat}
		%FACTORY_MAPPING[$count_1 * 128 + 56] := 26 	{hihat}
		%FACTORY_MAPPING[$count_1 * 128 + 57] := 35 	{hihat}
		%FACTORY_MAPPING[$count_1 * 128 + 58] := 30 	{hihat}
		%FACTORY_MAPPING[$count_1 * 128 + 59] := 0 		{kick}
		%FACTORY_MAPPING[$count_1 * 128 + 60] := 0 		{kick}
		%FACTORY_MAPPING[$count_1 * 128 + 61] := 1 		{kick}
		%FACTORY_MAPPING[$count_1 * 128 + 62] := 12 	{snare Kang}
		%FACTORY_MAPPING[$count_1 * 128 + 63] := 13 	{snare SHOT}
		%FACTORY_MAPPING[$count_1 * 128 + 64] := 14 	{Snare MUTED}
		%FACTORY_MAPPING[$count_1 * 128 + 65] := 107 	{* Perc A}
		%FACTORY_MAPPING[$count_1 * 128 + 66] := 108 	{* Perc A}
		%FACTORY_MAPPING[$count_1 * 128 + 67] := 111 	{* Perc B}
		%FACTORY_MAPPING[$count_1 * 128 + 68] := 112 	{* Perc B}
		%FACTORY_MAPPING[$count_1 * 128 + 69] := 115 	{* Perc C}
		%FACTORY_MAPPING[$count_1 * 128 + 70] := 116 	{* Perc C}
		%FACTORY_MAPPING[$count_1 * 128 + 71] := 118 	{* Perc D}
		%FACTORY_MAPPING[$count_1 * 128 + 72] := 121 	{* Perc E}
		%FACTORY_MAPPING[$count_1 * 128 + 73] := 122 	{* Perc E}

	{GM Mapping}
		$count_1 := 1
		%FACTORY_MAPPING[$count_1 * 128 + 	2	] := 	126
		%FACTORY_MAPPING[$count_1 * 128 + 	3	] := 	125
		%FACTORY_MAPPING[$count_1 * 128 + 	4	] := 	123
		%FACTORY_MAPPING[$count_1 * 128 + 	5	] := 	122
		%FACTORY_MAPPING[$count_1 * 128 + 	6	] := 	115
		%FACTORY_MAPPING[$count_1 * 128 + 	7	] := 	114
		%FACTORY_MAPPING[$count_1 * 128 + 	8	] := 	113
		%FACTORY_MAPPING[$count_1 * 128 + 	9	] := 	112
		%FACTORY_MAPPING[$count_1 * 128 + 	10	] := 	120
		%FACTORY_MAPPING[$count_1 * 128 + 	11	] := 	117
		%FACTORY_MAPPING[$count_1 * 128 + 	12	] := 	78
		%FACTORY_MAPPING[$count_1 * 128 + 	13	] := 	83
		%FACTORY_MAPPING[$count_1 * 128 + 	14	] := 	88
		%FACTORY_MAPPING[$count_1 * 128 + 	15	] := 	94
		%FACTORY_MAPPING[$count_1 * 128 + 	16	] := 	19
		%FACTORY_MAPPING[$count_1 * 128 + 	17	] := 	102
		%FACTORY_MAPPING[$count_1 * 128 + 	18	] := 	106
		%FACTORY_MAPPING[$count_1 * 128 + 	19	] := 	8
		%FACTORY_MAPPING[$count_1 * 128 + 	20	] := 	18
		%FACTORY_MAPPING[$count_1 * 128 + 	21	] := 	9
		%FACTORY_MAPPING[$count_1 * 128 + 	22	] := 	17
		%FACTORY_MAPPING[$count_1 * 128 + 	23	] := 	5
		%FACTORY_MAPPING[$count_1 * 128 + 	24	] := 	6
		%FACTORY_MAPPING[$count_1 * 128 + 	25	] := 	15
		%FACTORY_MAPPING[$count_1 * 128 + 	26	] := 	7
		%FACTORY_MAPPING[$count_1 * 128 + 	27	] := 	13
		%FACTORY_MAPPING[$count_1 * 128 + 	28	] := 	12
		%FACTORY_MAPPING[$count_1 * 128 + 	29	] := 	14
		%FACTORY_MAPPING[$count_1 * 128 + 	30	] := 	16
		%FACTORY_MAPPING[$count_1 * 128 + 	31	] := 	107
		%FACTORY_MAPPING[$count_1 * 128 + 	32	] := 	108
		%FACTORY_MAPPING[$count_1 * 128 + 	33	] := 	3
		%FACTORY_MAPPING[$count_1 * 128 + 	34	] := 	1
		%FACTORY_MAPPING[$count_1 * 128 + 	35	] := 	2
		%FACTORY_MAPPING[$count_1 * 128 + 	36	] := 	0
		%FACTORY_MAPPING[$count_1 * 128 + 	37	] := 	11
		%FACTORY_MAPPING[$count_1 * 128 + 	38	] := 	4
		%FACTORY_MAPPING[$count_1 * 128 + 	39	] := 	109
		%FACTORY_MAPPING[$count_1 * 128 + 	40	] := 	10
		%FACTORY_MAPPING[$count_1 * 128 + 	41	] := 	61
		%FACTORY_MAPPING[$count_1 * 128 + 	42	] := 	23
		%FACTORY_MAPPING[$count_1 * 128 + 	43	] := 	54
		%FACTORY_MAPPING[$count_1 * 128 + 	44	] := 	29
		%FACTORY_MAPPING[$count_1 * 128 + 	45	] := 	47
		%FACTORY_MAPPING[$count_1 * 128 + 	46	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	47	] := 	50
		%FACTORY_MAPPING[$count_1 * 128 + 	48	] := 	40
		%FACTORY_MAPPING[$count_1 * 128 + 	49	] := 	75
		%FACTORY_MAPPING[$count_1 * 128 + 	50	] := 	43
		%FACTORY_MAPPING[$count_1 * 128 + 	51	] := 	86
		%FACTORY_MAPPING[$count_1 * 128 + 	52	] := 	37
		%FACTORY_MAPPING[$count_1 * 128 + 	53	] := 	87
		%FACTORY_MAPPING[$count_1 * 128 + 	54	] := 	110
		%FACTORY_MAPPING[$count_1 * 128 + 	55	] := 	38
		%FACTORY_MAPPING[$count_1 * 128 + 	56	] := 	116
		%FACTORY_MAPPING[$count_1 * 128 + 	57	] := 	80
		%FACTORY_MAPPING[$count_1 * 128 + 	58	] := 	119
		%FACTORY_MAPPING[$count_1 * 128 + 	59	] := 	76
		%FACTORY_MAPPING[$count_1 * 128 + 	60	] := 	77
		%FACTORY_MAPPING[$count_1 * 128 + 	61	] := 	85
		%FACTORY_MAPPING[$count_1 * 128 + 	62	] := 	82
		%FACTORY_MAPPING[$count_1 * 128 + 	63	] := 	81
		%FACTORY_MAPPING[$count_1 * 128 + 	64	] := 	39
		%FACTORY_MAPPING[$count_1 * 128 + 	65	] := 	64
		%FACTORY_MAPPING[$count_1 * 128 + 	66	] := 	20
		%FACTORY_MAPPING[$count_1 * 128 + 	67	] := 	57
		%FACTORY_MAPPING[$count_1 * 128 + 	68	] := 	26
		%FACTORY_MAPPING[$count_1 * 128 + 	69	] := 	32
		%FACTORY_MAPPING[$count_1 * 128 + 	70	] := 	30
		%FACTORY_MAPPING[$count_1 * 128 + 	71	] := 	33
		%FACTORY_MAPPING[$count_1 * 128 + 	72	] := 	34
		%FACTORY_MAPPING[$count_1 * 128 + 	73	] := 	35
		%FACTORY_MAPPING[$count_1 * 128 + 	74	] := 	36
		%FACTORY_MAPPING[$count_1 * 128 + 	75	] := 	62
		%FACTORY_MAPPING[$count_1 * 128 + 	76	] := 	63
		%FACTORY_MAPPING[$count_1 * 128 + 	77	] := 	55
		%FACTORY_MAPPING[$count_1 * 128 + 	78	] := 	56
		%FACTORY_MAPPING[$count_1 * 128 + 	79	] := 	48
		%FACTORY_MAPPING[$count_1 * 128 + 	80	] := 	49
		%FACTORY_MAPPING[$count_1 * 128 + 	81	] := 	41
		%FACTORY_MAPPING[$count_1 * 128 + 	82	] := 	42
		%FACTORY_MAPPING[$count_1 * 128 + 	83	] := 	111
		%FACTORY_MAPPING[$count_1 * 128 + 	84	] := 	65
		%FACTORY_MAPPING[$count_1 * 128 + 	85	] := 	58
		%FACTORY_MAPPING[$count_1 * 128 + 	86	] := 	51
		%FACTORY_MAPPING[$count_1 * 128 + 	87	] := 	44
		%FACTORY_MAPPING[$count_1 * 128 + 	88	] := 	66
		%FACTORY_MAPPING[$count_1 * 128 + 	89	] := 	67
		%FACTORY_MAPPING[$count_1 * 128 + 	90	] := 	59
		%FACTORY_MAPPING[$count_1 * 128 + 	91	] := 	60
		%FACTORY_MAPPING[$count_1 * 128 + 	92	] := 	52
		%FACTORY_MAPPING[$count_1 * 128 + 	93	] := 	53
		%FACTORY_MAPPING[$count_1 * 128 + 	94	] := 	45
		%FACTORY_MAPPING[$count_1 * 128 + 	95	] := 	46
		%FACTORY_MAPPING[$count_1 * 128 + 	96	] := 	68
		%FACTORY_MAPPING[$count_1 * 128 + 	97	] := 	71
		%FACTORY_MAPPING[$count_1 * 128 + 	98	] := 	69
		%FACTORY_MAPPING[$count_1 * 128 + 	99	] := 	70
		%FACTORY_MAPPING[$count_1 * 128 + 	100	] := 	72
		%FACTORY_MAPPING[$count_1 * 128 + 	101	] := 	73
		%FACTORY_MAPPING[$count_1 * 128 + 	102	] := 	74
		%FACTORY_MAPPING[$count_1 * 128 + 	103	] := 	22
		%FACTORY_MAPPING[$count_1 * 128 + 	104	] := 	21
		%FACTORY_MAPPING[$count_1 * 128 + 	105	] := 	25
		%FACTORY_MAPPING[$count_1 * 128 + 	106	] := 	24
		%FACTORY_MAPPING[$count_1 * 128 + 	107	] := 	28
		%FACTORY_MAPPING[$count_1 * 128 + 	108	] := 	27
		%FACTORY_MAPPING[$count_1 * 128 + 	109	] := 	79
		%FACTORY_MAPPING[$count_1 * 128 + 	110	] := 	84
		%FACTORY_MAPPING[$count_1 * 128 + 	111	] := 	97
		%FACTORY_MAPPING[$count_1 * 128 + 	112	] := 	99
		%FACTORY_MAPPING[$count_1 * 128 + 	113	] := 	89
		%FACTORY_MAPPING[$count_1 * 128 + 	114	] := 	90
		%FACTORY_MAPPING[$count_1 * 128 + 	115	] := 	103
		%FACTORY_MAPPING[$count_1 * 128 + 	116	] := 	104
		%FACTORY_MAPPING[$count_1 * 128 + 	117	] := 	105
		%FACTORY_MAPPING[$count_1 * 128 + 	118	] := 	118
		%FACTORY_MAPPING[$count_1 * 128 + 	119	] := 	121
		%FACTORY_MAPPING[$count_1 * 128 + 	120	] := 	124

	{V-Drums 1 Mapping}
		$count_1 := 2
		%FACTORY_MAPPING[$count_1 * 128 + 	0	] := 	78
		%FACTORY_MAPPING[$count_1 * 128 + 	1	] := 	83
		%FACTORY_MAPPING[$count_1 * 128 + 	2	] := 	88
		%FACTORY_MAPPING[$count_1 * 128 + 	3	] := 	94
		%FACTORY_MAPPING[$count_1 * 128 + 	4	] := 	98
		%FACTORY_MAPPING[$count_1 * 128 + 	5	] := 	102
		%FACTORY_MAPPING[$count_1 * 128 + 	6	] := 	106
		%FACTORY_MAPPING[$count_1 * 128 + 	7	] := 	113
		%FACTORY_MAPPING[$count_1 * 128 + 	8	] := 	112
		%FACTORY_MAPPING[$count_1 * 128 + 	11	] := 	126
		%FACTORY_MAPPING[$count_1 * 128 + 	12	] := 	125
		%FACTORY_MAPPING[$count_1 * 128 + 	13	] := 	119
		%FACTORY_MAPPING[$count_1 * 128 + 	14	] := 	19
		%FACTORY_MAPPING[$count_1 * 128 + 	15	] := 	116
		%FACTORY_MAPPING[$count_1 * 128 + 	16	] := 	117
		%FACTORY_MAPPING[$count_1 * 128 + 	17	] := 	110
		%FACTORY_MAPPING[$count_1 * 128 + 	18	] := 	111
		%FACTORY_MAPPING[$count_1 * 128 + 	19	] := 	108
		%FACTORY_MAPPING[$count_1 * 128 + 	20	] := 	109
		%FACTORY_MAPPING[$count_1 * 128 + 	21	] := 	107
		%FACTORY_MAPPING[$count_1 * 128 + 	22	] := 	26
		%FACTORY_MAPPING[$count_1 * 128 + 	23	] := 	18
		%FACTORY_MAPPING[$count_1 * 128 + 	24	] := 	17
		%FACTORY_MAPPING[$count_1 * 128 + 	25	] := 	85
		%FACTORY_MAPPING[$count_1 * 128 + 	26	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	27	] := 	16
		%FACTORY_MAPPING[$count_1 * 128 + 	28	] := 	15
		%FACTORY_MAPPING[$count_1 * 128 + 	29	] := 	14
		%FACTORY_MAPPING[$count_1 * 128 + 	30	] := 	12
		%FACTORY_MAPPING[$count_1 * 128 + 	31	] := 	7
		%FACTORY_MAPPING[$count_1 * 128 + 	32	] := 	13
		%FACTORY_MAPPING[$count_1 * 128 + 	33	] := 	3
		%FACTORY_MAPPING[$count_1 * 128 + 	34	] := 	1
		%FACTORY_MAPPING[$count_1 * 128 + 	34	] := 	1
		%FACTORY_MAPPING[$count_1 * 128 + 	35	] := 	2
		%FACTORY_MAPPING[$count_1 * 128 + 	35	] := 	2
		%FACTORY_MAPPING[$count_1 * 128 + 	36	] := 	0
		%FACTORY_MAPPING[$count_1 * 128 + 	36	] := 	0
		%FACTORY_MAPPING[$count_1 * 128 + 	37	] := 	11
		%FACTORY_MAPPING[$count_1 * 128 + 	38	] := 	4
		%FACTORY_MAPPING[$count_1 * 128 + 	39	] := 	64
		%FACTORY_MAPPING[$count_1 * 128 + 	40	] := 	10
		%FACTORY_MAPPING[$count_1 * 128 + 	41	] := 	61
		%FACTORY_MAPPING[$count_1 * 128 + 	42	] := 	23
		%FACTORY_MAPPING[$count_1 * 128 + 	43	] := 	54
		%FACTORY_MAPPING[$count_1 * 128 + 	44	] := 	29
		%FACTORY_MAPPING[$count_1 * 128 + 	45	] := 	47
		%FACTORY_MAPPING[$count_1 * 128 + 	46	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	47	] := 	50
		%FACTORY_MAPPING[$count_1 * 128 + 	48	] := 	40
		%FACTORY_MAPPING[$count_1 * 128 + 	49	] := 	75
		%FACTORY_MAPPING[$count_1 * 128 + 	50	] := 	43
		%FACTORY_MAPPING[$count_1 * 128 + 	51	] := 	86
		%FACTORY_MAPPING[$count_1 * 128 + 	52	] := 	80
		%FACTORY_MAPPING[$count_1 * 128 + 	53	] := 	87
		%FACTORY_MAPPING[$count_1 * 128 + 	54	] := 	91
		%FACTORY_MAPPING[$count_1 * 128 + 	55	] := 	75
		%FACTORY_MAPPING[$count_1 * 128 + 	56	] := 	95
		%FACTORY_MAPPING[$count_1 * 128 + 	57	] := 	80
		%FACTORY_MAPPING[$count_1 * 128 + 	58	] := 	57
		%FACTORY_MAPPING[$count_1 * 128 + 	59	] := 	85
		%FACTORY_MAPPING[$count_1 * 128 + 	60	] := 	76
		%FACTORY_MAPPING[$count_1 * 128 + 	61	] := 	77
		%FACTORY_MAPPING[$count_1 * 128 + 	62	] := 	81
		%FACTORY_MAPPING[$count_1 * 128 + 	63	] := 	82
		%FACTORY_MAPPING[$count_1 * 128 + 	64	] := 	92
		%FACTORY_MAPPING[$count_1 * 128 + 	65	] := 	93
		%FACTORY_MAPPING[$count_1 * 128 + 	66	] := 	96
		%FACTORY_MAPPING[$count_1 * 128 + 	67	] := 	97
		%FACTORY_MAPPING[$count_1 * 128 + 	68	] := 	20
		%FACTORY_MAPPING[$count_1 * 128 + 	69	] := 	21
		%FACTORY_MAPPING[$count_1 * 128 + 	70	] := 	22
		%FACTORY_MAPPING[$count_1 * 128 + 	71	] := 	24
		%FACTORY_MAPPING[$count_1 * 128 + 	72	] := 	25
		%FACTORY_MAPPING[$count_1 * 128 + 	73	] := 	27
		%FACTORY_MAPPING[$count_1 * 128 + 	74	] := 	28
		%FACTORY_MAPPING[$count_1 * 128 + 	75	] := 	30
		%FACTORY_MAPPING[$count_1 * 128 + 	76	] := 	32
		%FACTORY_MAPPING[$count_1 * 128 + 	77	] := 	33
		%FACTORY_MAPPING[$count_1 * 128 + 	78	] := 	34
		%FACTORY_MAPPING[$count_1 * 128 + 	79	] := 	35
		%FACTORY_MAPPING[$count_1 * 128 + 	80	] := 	36
		%FACTORY_MAPPING[$count_1 * 128 + 	81	] := 	5
		%FACTORY_MAPPING[$count_1 * 128 + 	82	] := 	6
		%FACTORY_MAPPING[$count_1 * 128 + 	83	] := 	8
		%FACTORY_MAPPING[$count_1 * 128 + 	84	] := 	9
		%FACTORY_MAPPING[$count_1 * 128 + 	85	] := 	41
		%FACTORY_MAPPING[$count_1 * 128 + 	86	] := 	42
		%FACTORY_MAPPING[$count_1 * 128 + 	87	] := 	48
		%FACTORY_MAPPING[$count_1 * 128 + 	88	] := 	49
		%FACTORY_MAPPING[$count_1 * 128 + 	89	] := 	55
		%FACTORY_MAPPING[$count_1 * 128 + 	90	] := 	56
		%FACTORY_MAPPING[$count_1 * 128 + 	91	] := 	62
		%FACTORY_MAPPING[$count_1 * 128 + 	92	] := 	63
		%FACTORY_MAPPING[$count_1 * 128 + 	93	] := 	44
		%FACTORY_MAPPING[$count_1 * 128 + 	94	] := 	51
		%FACTORY_MAPPING[$count_1 * 128 + 	95	] := 	58
		%FACTORY_MAPPING[$count_1 * 128 + 	96	] := 	65
		%FACTORY_MAPPING[$count_1 * 128 + 	97	] := 	45
		%FACTORY_MAPPING[$count_1 * 128 + 	98	] := 	52
		%FACTORY_MAPPING[$count_1 * 128 + 	99	] := 	59
		%FACTORY_MAPPING[$count_1 * 128 + 	100	] := 	66
		%FACTORY_MAPPING[$count_1 * 128 + 	101	] := 	46
		%FACTORY_MAPPING[$count_1 * 128 + 	102	] := 	53
		%FACTORY_MAPPING[$count_1 * 128 + 	103	] := 	60
		%FACTORY_MAPPING[$count_1 * 128 + 	104	] := 	67
		%FACTORY_MAPPING[$count_1 * 128 + 	105	] := 	68
		%FACTORY_MAPPING[$count_1 * 128 + 	106	] := 	37
		%FACTORY_MAPPING[$count_1 * 128 + 	107	] := 	38
		%FACTORY_MAPPING[$count_1 * 128 + 	108	] := 	39
		%FACTORY_MAPPING[$count_1 * 128 + 	109	] := 	79
		%FACTORY_MAPPING[$count_1 * 128 + 	110	] := 	84
		%FACTORY_MAPPING[$count_1 * 128 + 	111	] := 	89
		%FACTORY_MAPPING[$count_1 * 128 + 	112	] := 	90
		%FACTORY_MAPPING[$count_1 * 128 + 	113	] := 	100
		%FACTORY_MAPPING[$count_1 * 128 + 	114	] := 	101
		%FACTORY_MAPPING[$count_1 * 128 + 	115	] := 	103
		%FACTORY_MAPPING[$count_1 * 128 + 	116	] := 	104
		%FACTORY_MAPPING[$count_1 * 128 + 	117	] := 	105
		%FACTORY_MAPPING[$count_1 * 128 + 	118	] := 	114
		%FACTORY_MAPPING[$count_1 * 128 + 	119	] := 	115
		%FACTORY_MAPPING[$count_1 * 128 + 	120	] := 	122
		%FACTORY_MAPPING[$count_1 * 128 + 	122	] := 	123
		%FACTORY_MAPPING[$count_1 * 128 + 	124	] := 	121
		%FACTORY_MAPPING[$count_1 * 128 + 	125	] := 	124

	{V-Drums 2 Mapping}
		$count_1 := 3
		%FACTORY_MAPPING[$count_1 * 128 + 	0	] := 	78
		%FACTORY_MAPPING[$count_1 * 128 + 	1	] := 	83
		%FACTORY_MAPPING[$count_1 * 128 + 	2	] := 	88
		%FACTORY_MAPPING[$count_1 * 128 + 	3	] := 	94
		%FACTORY_MAPPING[$count_1 * 128 + 	4	] := 	98
		%FACTORY_MAPPING[$count_1 * 128 + 	5	] := 	102
		%FACTORY_MAPPING[$count_1 * 128 + 	6	] := 	106
		%FACTORY_MAPPING[$count_1 * 128 + 	7	] := 	113
		%FACTORY_MAPPING[$count_1 * 128 + 	8	] := 	112
		%FACTORY_MAPPING[$count_1 * 128 + 	11	] := 	126
		%FACTORY_MAPPING[$count_1 * 128 + 	12	] := 	125
		%FACTORY_MAPPING[$count_1 * 128 + 	13	] := 	119
		%FACTORY_MAPPING[$count_1 * 128 + 	14	] := 	120
		%FACTORY_MAPPING[$count_1 * 128 + 	15	] := 	116
		%FACTORY_MAPPING[$count_1 * 128 + 	16	] := 	117
		%FACTORY_MAPPING[$count_1 * 128 + 	17	] := 	110
		%FACTORY_MAPPING[$count_1 * 128 + 	18	] := 	111
		%FACTORY_MAPPING[$count_1 * 128 + 	19	] := 	108
		%FACTORY_MAPPING[$count_1 * 128 + 	20	] := 	109
		%FACTORY_MAPPING[$count_1 * 128 + 	21	] := 	107
		%FACTORY_MAPPING[$count_1 * 128 + 	22	] := 	26
		%FACTORY_MAPPING[$count_1 * 128 + 	23	] := 	18
		%FACTORY_MAPPING[$count_1 * 128 + 	24	] := 	17
		%FACTORY_MAPPING[$count_1 * 128 + 	25	] := 	85
		%FACTORY_MAPPING[$count_1 * 128 + 	26	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	27	] := 	16
		%FACTORY_MAPPING[$count_1 * 128 + 	28	] := 	15
		%FACTORY_MAPPING[$count_1 * 128 + 	29	] := 	14
		%FACTORY_MAPPING[$count_1 * 128 + 	30	] := 	12
		%FACTORY_MAPPING[$count_1 * 128 + 	31	] := 	61
		%FACTORY_MAPPING[$count_1 * 128 + 	32	] := 	13
		%FACTORY_MAPPING[$count_1 * 128 + 	33	] := 	3
		%FACTORY_MAPPING[$count_1 * 128 + 	34	] := 	1
		%FACTORY_MAPPING[$count_1 * 128 + 	35	] := 	2
		%FACTORY_MAPPING[$count_1 * 128 + 	36	] := 	0
		%FACTORY_MAPPING[$count_1 * 128 + 	37	] := 	11
		%FACTORY_MAPPING[$count_1 * 128 + 	38	] := 	4
		%FACTORY_MAPPING[$count_1 * 128 + 	39	] := 	64
		%FACTORY_MAPPING[$count_1 * 128 + 	40	] := 	10
		%FACTORY_MAPPING[$count_1 * 128 + 	41	] := 	54
		%FACTORY_MAPPING[$count_1 * 128 + 	42	] := 	23
		%FACTORY_MAPPING[$count_1 * 128 + 	43	] := 	57
		%FACTORY_MAPPING[$count_1 * 128 + 	44	] := 	29
		%FACTORY_MAPPING[$count_1 * 128 + 	45	] := 	47
		%FACTORY_MAPPING[$count_1 * 128 + 	46	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	47	] := 	50
		%FACTORY_MAPPING[$count_1 * 128 + 	48	] := 	40
		%FACTORY_MAPPING[$count_1 * 128 + 	49	] := 	76
		%FACTORY_MAPPING[$count_1 * 128 + 	50	] := 	43
		%FACTORY_MAPPING[$count_1 * 128 + 	51	] := 	86
		%FACTORY_MAPPING[$count_1 * 128 + 	52	] := 	80
		%FACTORY_MAPPING[$count_1 * 128 + 	53	] := 	85
		%FACTORY_MAPPING[$count_1 * 128 + 	54	] := 	91
		%FACTORY_MAPPING[$count_1 * 128 + 	55	] := 	75
		%FACTORY_MAPPING[$count_1 * 128 + 	56	] := 	95
		%FACTORY_MAPPING[$count_1 * 128 + 	57	] := 	81
		%FACTORY_MAPPING[$count_1 * 128 + 	58	] := 	7
		%FACTORY_MAPPING[$count_1 * 128 + 	59	] := 	87
		%FACTORY_MAPPING[$count_1 * 128 + 	60	] := 	127
		%FACTORY_MAPPING[$count_1 * 128 + 	61	] := 	77
		%FACTORY_MAPPING[$count_1 * 128 + 	63	] := 	82
		%FACTORY_MAPPING[$count_1 * 128 + 	64	] := 	92
		%FACTORY_MAPPING[$count_1 * 128 + 	65	] := 	93
		%FACTORY_MAPPING[$count_1 * 128 + 	66	] := 	96
		%FACTORY_MAPPING[$count_1 * 128 + 	67	] := 	97
		%FACTORY_MAPPING[$count_1 * 128 + 	68	] := 	20
		%FACTORY_MAPPING[$count_1 * 128 + 	69	] := 	21
		%FACTORY_MAPPING[$count_1 * 128 + 	70	] := 	22
		%FACTORY_MAPPING[$count_1 * 128 + 	71	] := 	24
		%FACTORY_MAPPING[$count_1 * 128 + 	72	] := 	25
		%FACTORY_MAPPING[$count_1 * 128 + 	73	] := 	27
		%FACTORY_MAPPING[$count_1 * 128 + 	74	] := 	28
		%FACTORY_MAPPING[$count_1 * 128 + 	75	] := 	30
		%FACTORY_MAPPING[$count_1 * 128 + 	76	] := 	32
		%FACTORY_MAPPING[$count_1 * 128 + 	77	] := 	33
		%FACTORY_MAPPING[$count_1 * 128 + 	78	] := 	34
		%FACTORY_MAPPING[$count_1 * 128 + 	79	] := 	35
		%FACTORY_MAPPING[$count_1 * 128 + 	80	] := 	36
		%FACTORY_MAPPING[$count_1 * 128 + 	81	] := 	5
		%FACTORY_MAPPING[$count_1 * 128 + 	82	] := 	6
		%FACTORY_MAPPING[$count_1 * 128 + 	83	] := 	8
		%FACTORY_MAPPING[$count_1 * 128 + 	84	] := 	9
		%FACTORY_MAPPING[$count_1 * 128 + 	85	] := 	41
		%FACTORY_MAPPING[$count_1 * 128 + 	86	] := 	42
		%FACTORY_MAPPING[$count_1 * 128 + 	87	] := 	48
		%FACTORY_MAPPING[$count_1 * 128 + 	88	] := 	49
		%FACTORY_MAPPING[$count_1 * 128 + 	89	] := 	55
		%FACTORY_MAPPING[$count_1 * 128 + 	90	] := 	56
		%FACTORY_MAPPING[$count_1 * 128 + 	91	] := 	62
		%FACTORY_MAPPING[$count_1 * 128 + 	92	] := 	63
		%FACTORY_MAPPING[$count_1 * 128 + 	93	] := 	44
		%FACTORY_MAPPING[$count_1 * 128 + 	94	] := 	51
		%FACTORY_MAPPING[$count_1 * 128 + 	95	] := 	58
		%FACTORY_MAPPING[$count_1 * 128 + 	96	] := 	65
		%FACTORY_MAPPING[$count_1 * 128 + 	97	] := 	45
		%FACTORY_MAPPING[$count_1 * 128 + 	98	] := 	52
		%FACTORY_MAPPING[$count_1 * 128 + 	99	] := 	59
		%FACTORY_MAPPING[$count_1 * 128 + 	100	] := 	66
		%FACTORY_MAPPING[$count_1 * 128 + 	101	] := 	46
		%FACTORY_MAPPING[$count_1 * 128 + 	102	] := 	53
		%FACTORY_MAPPING[$count_1 * 128 + 	103	] := 	60
		%FACTORY_MAPPING[$count_1 * 128 + 	104	] := 	67
		%FACTORY_MAPPING[$count_1 * 128 + 	105	] := 	19
		%FACTORY_MAPPING[$count_1 * 128 + 	106	] := 	37
		%FACTORY_MAPPING[$count_1 * 128 + 	107	] := 	38
		%FACTORY_MAPPING[$count_1 * 128 + 	108	] := 	39
		%FACTORY_MAPPING[$count_1 * 128 + 	109	] := 	79
		%FACTORY_MAPPING[$count_1 * 128 + 	110	] := 	84
		%FACTORY_MAPPING[$count_1 * 128 + 	111	] := 	89
		%FACTORY_MAPPING[$count_1 * 128 + 	112	] := 	90
		%FACTORY_MAPPING[$count_1 * 128 + 	113	] := 	100
		%FACTORY_MAPPING[$count_1 * 128 + 	114	] := 	101
		%FACTORY_MAPPING[$count_1 * 128 + 	115	] := 	103
		%FACTORY_MAPPING[$count_1 * 128 + 	116	] := 	104
		%FACTORY_MAPPING[$count_1 * 128 + 	117	] := 	105
		%FACTORY_MAPPING[$count_1 * 128 + 	118	] := 	114
		%FACTORY_MAPPING[$count_1 * 128 + 	119	] := 	115
		%FACTORY_MAPPING[$count_1 * 128 + 	120	] := 	122
		%FACTORY_MAPPING[$count_1 * 128 + 	122	] := 	123
		%FACTORY_MAPPING[$count_1 * 128 + 	124	] := 	121
		%FACTORY_MAPPING[$count_1 * 128 + 	125	] := 	124

	{DrumIt Five Mapping}
		$count_1 := 4
		%FACTORY_MAPPING[$count_1 * 128 + 	1	] := 	101
		%FACTORY_MAPPING[$count_1 * 128 + 	2	] := 	102
		%FACTORY_MAPPING[$count_1 * 128 + 	3	] := 	125
		%FACTORY_MAPPING[$count_1 * 128 + 	4	] := 	126
		%FACTORY_MAPPING[$count_1 * 128 + 	5	] := 	127
		%FACTORY_MAPPING[$count_1 * 128 + 	12	] := 	118
		%FACTORY_MAPPING[$count_1 * 128 + 	13	] := 	123
		%FACTORY_MAPPING[$count_1 * 128 + 	14	] := 	124
		%FACTORY_MAPPING[$count_1 * 128 + 	15	] := 	114
		%FACTORY_MAPPING[$count_1 * 128 + 	16	] := 	115
		%FACTORY_MAPPING[$count_1 * 128 + 	17	] := 	121
		%FACTORY_MAPPING[$count_1 * 128 + 	18	] := 	122
		%FACTORY_MAPPING[$count_1 * 128 + 	19	] := 	112
		%FACTORY_MAPPING[$count_1 * 128 + 	20	] := 	113
		%FACTORY_MAPPING[$count_1 * 128 + 	21	] := 	119
		%FACTORY_MAPPING[$count_1 * 128 + 	22	] := 	120
		%FACTORY_MAPPING[$count_1 * 128 + 	23	] := 	116
		%FACTORY_MAPPING[$count_1 * 128 + 	24	] := 	117
		%FACTORY_MAPPING[$count_1 * 128 + 	25	] := 	110
		%FACTORY_MAPPING[$count_1 * 128 + 	26	] := 	111
		%FACTORY_MAPPING[$count_1 * 128 + 	27	] := 	108
		%FACTORY_MAPPING[$count_1 * 128 + 	28	] := 	109
		%FACTORY_MAPPING[$count_1 * 128 + 	29	] := 	107
		%FACTORY_MAPPING[$count_1 * 128 + 	30	] := 	18
		%FACTORY_MAPPING[$count_1 * 128 + 	31	] := 	17
		%FACTORY_MAPPING[$count_1 * 128 + 	32	] := 	16
		%FACTORY_MAPPING[$count_1 * 128 + 	33	] := 	3
		%FACTORY_MAPPING[$count_1 * 128 + 	34	] := 	1
		%FACTORY_MAPPING[$count_1 * 128 + 	35	] := 	2
		%FACTORY_MAPPING[$count_1 * 128 + 	36	] := 	0
		%FACTORY_MAPPING[$count_1 * 128 + 	37	] := 	11
		%FACTORY_MAPPING[$count_1 * 128 + 	38	] := 	7
		%FACTORY_MAPPING[$count_1 * 128 + 	39	] := 	12
		%FACTORY_MAPPING[$count_1 * 128 + 	40	] := 	15
		%FACTORY_MAPPING[$count_1 * 128 + 	41	] := 	4
		%FACTORY_MAPPING[$count_1 * 128 + 	42	] := 	10
		%FACTORY_MAPPING[$count_1 * 128 + 	43	] := 	13
		%FACTORY_MAPPING[$count_1 * 128 + 	44	] := 	14
		%FACTORY_MAPPING[$count_1 * 128 + 	45	] := 	23
		%FACTORY_MAPPING[$count_1 * 128 + 	46	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	47	] := 	29
		%FACTORY_MAPPING[$count_1 * 128 + 	48	] := 	20
		%FACTORY_MAPPING[$count_1 * 128 + 	49	] := 	26
		%FACTORY_MAPPING[$count_1 * 128 + 	50	] := 	40
		%FACTORY_MAPPING[$count_1 * 128 + 	51	] := 	43
		%FACTORY_MAPPING[$count_1 * 128 + 	52	] := 	44
		%FACTORY_MAPPING[$count_1 * 128 + 	53	] := 	47
		%FACTORY_MAPPING[$count_1 * 128 + 	54	] := 	50
		%FACTORY_MAPPING[$count_1 * 128 + 	55	] := 	51
		%FACTORY_MAPPING[$count_1 * 128 + 	56	] := 	99
		%FACTORY_MAPPING[$count_1 * 128 + 	57	] := 	54
		%FACTORY_MAPPING[$count_1 * 128 + 	58	] := 	57
		%FACTORY_MAPPING[$count_1 * 128 + 	59	] := 	58
		%FACTORY_MAPPING[$count_1 * 128 + 	60	] := 	61
		%FACTORY_MAPPING[$count_1 * 128 + 	61	] := 	64
		%FACTORY_MAPPING[$count_1 * 128 + 	62	] := 	65
		%FACTORY_MAPPING[$count_1 * 128 + 	63	] := 	100
		%FACTORY_MAPPING[$count_1 * 128 + 	64	] := 	77
		%FACTORY_MAPPING[$count_1 * 128 + 	65	] := 	76
		%FACTORY_MAPPING[$count_1 * 128 + 	66	] := 	75
		%FACTORY_MAPPING[$count_1 * 128 + 	67	] := 	78
		%FACTORY_MAPPING[$count_1 * 128 + 	68	] := 	92
		%FACTORY_MAPPING[$count_1 * 128 + 	69	] := 	91
		%FACTORY_MAPPING[$count_1 * 128 + 	70	] := 	94
		%FACTORY_MAPPING[$count_1 * 128 + 	71	] := 	87
		%FACTORY_MAPPING[$count_1 * 128 + 	72	] := 	86
		%FACTORY_MAPPING[$count_1 * 128 + 	73	] := 	85
		%FACTORY_MAPPING[$count_1 * 128 + 	74	] := 	88
		%FACTORY_MAPPING[$count_1 * 128 + 	75	] := 	95
		%FACTORY_MAPPING[$count_1 * 128 + 	76	] := 	98
		%FACTORY_MAPPING[$count_1 * 128 + 	77	] := 	82
		%FACTORY_MAPPING[$count_1 * 128 + 	78	] := 	81
		%FACTORY_MAPPING[$count_1 * 128 + 	79	] := 	80
		%FACTORY_MAPPING[$count_1 * 128 + 	80	] := 	83
		%FACTORY_MAPPING[$count_1 * 128 + 	81	] := 	30
		%FACTORY_MAPPING[$count_1 * 128 + 	82	] := 	32
		%FACTORY_MAPPING[$count_1 * 128 + 	83	] := 	33
		%FACTORY_MAPPING[$count_1 * 128 + 	84	] := 	34
		%FACTORY_MAPPING[$count_1 * 128 + 	85	] := 	35
		%FACTORY_MAPPING[$count_1 * 128 + 	86	] := 	36
		%FACTORY_MAPPING[$count_1 * 128 + 	87	] := 	45
		%FACTORY_MAPPING[$count_1 * 128 + 	88	] := 	46
		%FACTORY_MAPPING[$count_1 * 128 + 	89	] := 	52
		%FACTORY_MAPPING[$count_1 * 128 + 	90	] := 	53
		%FACTORY_MAPPING[$count_1 * 128 + 	91	] := 	59
		%FACTORY_MAPPING[$count_1 * 128 + 	92	] := 	60
		%FACTORY_MAPPING[$count_1 * 128 + 	93	] := 	66
		%FACTORY_MAPPING[$count_1 * 128 + 	94	] := 	67
		%FACTORY_MAPPING[$count_1 * 128 + 	95	] := 	5
		%FACTORY_MAPPING[$count_1 * 128 + 	96	] := 	6
		%FACTORY_MAPPING[$count_1 * 128 + 	97	] := 	8
		%FACTORY_MAPPING[$count_1 * 128 + 	98	] := 	9
		%FACTORY_MAPPING[$count_1 * 128 + 	99	] := 	21
		%FACTORY_MAPPING[$count_1 * 128 + 	100	] := 	22
		%FACTORY_MAPPING[$count_1 * 128 + 	101	] := 	24
		%FACTORY_MAPPING[$count_1 * 128 + 	102	] := 	25
		%FACTORY_MAPPING[$count_1 * 128 + 	103	] := 	27
		%FACTORY_MAPPING[$count_1 * 128 + 	104	] := 	28
		%FACTORY_MAPPING[$count_1 * 128 + 	105	] := 	41
		%FACTORY_MAPPING[$count_1 * 128 + 	106	] := 	42
		%FACTORY_MAPPING[$count_1 * 128 + 	107	] := 	48
		%FACTORY_MAPPING[$count_1 * 128 + 	108	] := 	49
		%FACTORY_MAPPING[$count_1 * 128 + 	109	] := 	55
		%FACTORY_MAPPING[$count_1 * 128 + 	110	] := 	56
		%FACTORY_MAPPING[$count_1 * 128 + 	111	] := 	62
		%FACTORY_MAPPING[$count_1 * 128 + 	112	] := 	63
		%FACTORY_MAPPING[$count_1 * 128 + 	113	] := 	19
		%FACTORY_MAPPING[$count_1 * 128 + 	114	] := 	37
		%FACTORY_MAPPING[$count_1 * 128 + 	115	] := 	38
		%FACTORY_MAPPING[$count_1 * 128 + 	116	] := 	39
		%FACTORY_MAPPING[$count_1 * 128 + 	117	] := 	79
		%FACTORY_MAPPING[$count_1 * 128 + 	118	] := 	84
		%FACTORY_MAPPING[$count_1 * 128 + 	119	] := 	89
		%FACTORY_MAPPING[$count_1 * 128 + 	120	] := 	90
		%FACTORY_MAPPING[$count_1 * 128 + 	121	] := 	96
		%FACTORY_MAPPING[$count_1 * 128 + 	122	] := 	97
		%FACTORY_MAPPING[$count_1 * 128 + 	123	] := 	103
		%FACTORY_MAPPING[$count_1 * 128 + 	124	] := 	104
		%FACTORY_MAPPING[$count_1 * 128 + 	125	] := 	105
		%FACTORY_MAPPING[$count_1 * 128 + 	126	] := 	106

	{EZDrummer Mapping}
		$count_1 := 5
		%FACTORY_MAPPING[$count_1 * 128 + 	0	] := 	7
		%FACTORY_MAPPING[$count_1 * 128 + 	1	] := 	21
		%FACTORY_MAPPING[$count_1 * 128 + 	2	] := 	22
		%FACTORY_MAPPING[$count_1 * 128 + 	3	] := 	119
		%FACTORY_MAPPING[$count_1 * 128 + 	4	] := 	120
		%FACTORY_MAPPING[$count_1 * 128 + 	5	] := 	110
		%FACTORY_MAPPING[$count_1 * 128 + 	6	] := 	111
		%FACTORY_MAPPING[$count_1 * 128 + 	7	] := 	108
		%FACTORY_MAPPING[$count_1 * 128 + 	8	] := 	109
		%FACTORY_MAPPING[$count_1 * 128 + 	9	] := 	107
		%FACTORY_MAPPING[$count_1 * 128 + 	10	] := 	29
		%FACTORY_MAPPING[$count_1 * 128 + 	12	] := 	32
		%FACTORY_MAPPING[$count_1 * 128 + 	13	] := 	33
		%FACTORY_MAPPING[$count_1 * 128 + 	14	] := 	34
		%FACTORY_MAPPING[$count_1 * 128 + 	15	] := 	35
		%FACTORY_MAPPING[$count_1 * 128 + 	16	] := 	36
		%FACTORY_MAPPING[$count_1 * 128 + 	17	] := 	36
		%FACTORY_MAPPING[$count_1 * 128 + 	18	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	19	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	20	] := 	3
		%FACTORY_MAPPING[$count_1 * 128 + 	21	] := 	29
		%FACTORY_MAPPING[$count_1 * 128 + 	22	] := 	26
		%FACTORY_MAPPING[$count_1 * 128 + 	24	] := 	32
		%FACTORY_MAPPING[$count_1 * 128 + 	25	] := 	33
		%FACTORY_MAPPING[$count_1 * 128 + 	26	] := 	30
		%FACTORY_MAPPING[$count_1 * 128 + 	26	] := 	34
		%FACTORY_MAPPING[$count_1 * 128 + 	27	] := 	75
		%FACTORY_MAPPING[$count_1 * 128 + 	28	] := 	80
		%FACTORY_MAPPING[$count_1 * 128 + 	29	] := 	85
		%FACTORY_MAPPING[$count_1 * 128 + 	30	] := 	91
		%FACTORY_MAPPING[$count_1 * 128 + 	31	] := 	95
		%FACTORY_MAPPING[$count_1 * 128 + 	32	] := 	99
		%FACTORY_MAPPING[$count_1 * 128 + 	33	] := 	5
		%FACTORY_MAPPING[$count_1 * 128 + 	34	] := 	1
		%FACTORY_MAPPING[$count_1 * 128 + 	35	] := 	2
		%FACTORY_MAPPING[$count_1 * 128 + 	36	] := 	0
		%FACTORY_MAPPING[$count_1 * 128 + 	37	] := 	11
		%FACTORY_MAPPING[$count_1 * 128 + 	38	] := 	4
		%FACTORY_MAPPING[$count_1 * 128 + 	39	] := 	6
		%FACTORY_MAPPING[$count_1 * 128 + 	39	] := 	13
		%FACTORY_MAPPING[$count_1 * 128 + 	40	] := 	10
		%FACTORY_MAPPING[$count_1 * 128 + 	41	] := 	56
		%FACTORY_MAPPING[$count_1 * 128 + 	42	] := 	23
		%FACTORY_MAPPING[$count_1 * 128 + 	43	] := 	54
		%FACTORY_MAPPING[$count_1 * 128 + 	44	] := 	29
		%FACTORY_MAPPING[$count_1 * 128 + 	45	] := 	49
		%FACTORY_MAPPING[$count_1 * 128 + 	46	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	47	] := 	47
		%FACTORY_MAPPING[$count_1 * 128 + 	48	] := 	42
		%FACTORY_MAPPING[$count_1 * 128 + 	49	] := 	75
		%FACTORY_MAPPING[$count_1 * 128 + 	50	] := 	40
		%FACTORY_MAPPING[$count_1 * 128 + 	51	] := 	86
		%FACTORY_MAPPING[$count_1 * 128 + 	52	] := 	80
		%FACTORY_MAPPING[$count_1 * 128 + 	52	] := 	91
		%FACTORY_MAPPING[$count_1 * 128 + 	53	] := 	87
		%FACTORY_MAPPING[$count_1 * 128 + 	54	] := 	78
		%FACTORY_MAPPING[$count_1 * 128 + 	55	] := 	75
		%FACTORY_MAPPING[$count_1 * 128 + 	55	] := 	95
		%FACTORY_MAPPING[$count_1 * 128 + 	56	] := 	116
		%FACTORY_MAPPING[$count_1 * 128 + 	57	] := 	80
		%FACTORY_MAPPING[$count_1 * 128 + 	58	] := 	83
		%FACTORY_MAPPING[$count_1 * 128 + 	59	] := 	85
		%FACTORY_MAPPING[$count_1 * 128 + 	60	] := 	36
		%FACTORY_MAPPING[$count_1 * 128 + 	61	] := 	25
		%FACTORY_MAPPING[$count_1 * 128 + 	62	] := 	28
		%FACTORY_MAPPING[$count_1 * 128 + 	63	] := 	20
		%FACTORY_MAPPING[$count_1 * 128 + 	64	] := 	27
		%FACTORY_MAPPING[$count_1 * 128 + 	65	] := 	24
		%FACTORY_MAPPING[$count_1 * 128 + 	66	] := 	14
		%FACTORY_MAPPING[$count_1 * 128 + 	67	] := 	17
		%FACTORY_MAPPING[$count_1 * 128 + 	68	] := 	16
		%FACTORY_MAPPING[$count_1 * 128 + 	69	] := 	12
		%FACTORY_MAPPING[$count_1 * 128 + 	70	] := 	13
		%FACTORY_MAPPING[$count_1 * 128 + 	71	] := 	15
		%FACTORY_MAPPING[$count_1 * 128 + 	72	] := 	65
		%FACTORY_MAPPING[$count_1 * 128 + 	73	] := 	64
		%FACTORY_MAPPING[$count_1 * 128 + 	74	] := 	58
		%FACTORY_MAPPING[$count_1 * 128 + 	75	] := 	57
		%FACTORY_MAPPING[$count_1 * 128 + 	76	] := 	117
		%FACTORY_MAPPING[$count_1 * 128 + 	77	] := 	61
		%FACTORY_MAPPING[$count_1 * 128 + 	78	] := 	63
		%FACTORY_MAPPING[$count_1 * 128 + 	79	] := 	51
		%FACTORY_MAPPING[$count_1 * 128 + 	80	] := 	50
		%FACTORY_MAPPING[$count_1 * 128 + 	81	] := 	44
		%FACTORY_MAPPING[$count_1 * 128 + 	82	] := 	43
		%FACTORY_MAPPING[$count_1 * 128 + 	83	] := 	94
		%FACTORY_MAPPING[$count_1 * 128 + 	84	] := 	76
		%FACTORY_MAPPING[$count_1 * 128 + 	85	] := 	77
		%FACTORY_MAPPING[$count_1 * 128 + 	86	] := 	81
		%FACTORY_MAPPING[$count_1 * 128 + 	87	] := 	82
		%FACTORY_MAPPING[$count_1 * 128 + 	88	] := 	92
		%FACTORY_MAPPING[$count_1 * 128 + 	89	] := 	96
		%FACTORY_MAPPING[$count_1 * 128 + 	90	] := 	97
		%FACTORY_MAPPING[$count_1 * 128 + 	91	] := 	99
		%FACTORY_MAPPING[$count_1 * 128 + 	92	] := 	103
		%FACTORY_MAPPING[$count_1 * 128 + 	93	] := 	100
		%FACTORY_MAPPING[$count_1 * 128 + 	94	] := 	88
		%FACTORY_MAPPING[$count_1 * 128 + 	94	] := 	102
		%FACTORY_MAPPING[$count_1 * 128 + 	95	] := 	98
		%FACTORY_MAPPING[$count_1 * 128 + 	95	] := 	106
		%FACTORY_MAPPING[$count_1 * 128 + 	96	] := 	104
		%FACTORY_MAPPING[$count_1 * 128 + 	97	] := 	93
		%FACTORY_MAPPING[$count_1 * 128 + 	98	] := 	101
		%FACTORY_MAPPING[$count_1 * 128 + 	99	] := 	105
		%FACTORY_MAPPING[$count_1 * 128 + 	100	] := 	18
		%FACTORY_MAPPING[$count_1 * 128 + 	101	] := 	45
		%FACTORY_MAPPING[$count_1 * 128 + 	102	] := 	46
		%FACTORY_MAPPING[$count_1 * 128 + 	103	] := 	52
		%FACTORY_MAPPING[$count_1 * 128 + 	104	] := 	53
		%FACTORY_MAPPING[$count_1 * 128 + 	105	] := 	59
		%FACTORY_MAPPING[$count_1 * 128 + 	106	] := 	60
		%FACTORY_MAPPING[$count_1 * 128 + 	107	] := 	66
		%FACTORY_MAPPING[$count_1 * 128 + 	108	] := 	67
		%FACTORY_MAPPING[$count_1 * 128 + 	109	] := 	19
		%FACTORY_MAPPING[$count_1 * 128 + 	110	] := 	37
		%FACTORY_MAPPING[$count_1 * 128 + 	111	] := 	38
		%FACTORY_MAPPING[$count_1 * 128 + 	112	] := 	39
		%FACTORY_MAPPING[$count_1 * 128 + 	113	] := 	79
		%FACTORY_MAPPING[$count_1 * 128 + 	114	] := 	84
		%FACTORY_MAPPING[$count_1 * 128 + 	115	] := 	89
		%FACTORY_MAPPING[$count_1 * 128 + 	116	] := 	5
		%FACTORY_MAPPING[$count_1 * 128 + 	117	] := 	6
		%FACTORY_MAPPING[$count_1 * 128 + 	118	] := 	8
		%FACTORY_MAPPING[$count_1 * 128 + 	119	] := 	9
		%FACTORY_MAPPING[$count_1 * 128 + 	120	] := 	125
		%FACTORY_MAPPING[$count_1 * 128 + 	121	] := 	126
		%FACTORY_MAPPING[$count_1 * 128 + 	122	] := 	112
		%FACTORY_MAPPING[$count_1 * 128 + 	123	] := 	90
		%FACTORY_MAPPING[$count_1 * 128 + 	124	] := 	121
		%FACTORY_MAPPING[$count_1 * 128 + 	125	] := 	122

	{Superior Drummer Mapping}
		$count_1 := 6
		%FACTORY_MAPPING[$count_1 * 128 + 	1	] := 	21
		%FACTORY_MAPPING[$count_1 * 128 + 	2	] := 	22
		%FACTORY_MAPPING[$count_1 * 128 + 	3	] := 	119
		%FACTORY_MAPPING[$count_1 * 128 + 	4	] := 	120
		%FACTORY_MAPPING[$count_1 * 128 + 	5	] := 	110
		%FACTORY_MAPPING[$count_1 * 128 + 	6	] := 	111
		%FACTORY_MAPPING[$count_1 * 128 + 	7	] := 	108
		%FACTORY_MAPPING[$count_1 * 128 + 	8	] := 	109
		%FACTORY_MAPPING[$count_1 * 128 + 	9	] := 	107
		%FACTORY_MAPPING[$count_1 * 128 + 	10	] := 	29
		%FACTORY_MAPPING[$count_1 * 128 + 	12	] := 	32
		%FACTORY_MAPPING[$count_1 * 128 + 	13	] := 	33
		%FACTORY_MAPPING[$count_1 * 128 + 	14	] := 	34
		%FACTORY_MAPPING[$count_1 * 128 + 	15	] := 	35
		%FACTORY_MAPPING[$count_1 * 128 + 	16	] := 	36
		%FACTORY_MAPPING[$count_1 * 128 + 	17	] := 	36
		%FACTORY_MAPPING[$count_1 * 128 + 	18	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	19	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	20	] := 	3
		%FACTORY_MAPPING[$count_1 * 128 + 	21	] := 	29
		%FACTORY_MAPPING[$count_1 * 128 + 	22	] := 	26
		%FACTORY_MAPPING[$count_1 * 128 + 	24	] := 	32
		%FACTORY_MAPPING[$count_1 * 128 + 	25	] := 	33
		%FACTORY_MAPPING[$count_1 * 128 + 	26	] := 	30
		%FACTORY_MAPPING[$count_1 * 128 + 	26	] := 	34
		%FACTORY_MAPPING[$count_1 * 128 + 	27	] := 	75
		%FACTORY_MAPPING[$count_1 * 128 + 	28	] := 	80
		%FACTORY_MAPPING[$count_1 * 128 + 	29	] := 	85
		%FACTORY_MAPPING[$count_1 * 128 + 	30	] := 	91
		%FACTORY_MAPPING[$count_1 * 128 + 	31	] := 	95
		%FACTORY_MAPPING[$count_1 * 128 + 	32	] := 	99
		%FACTORY_MAPPING[$count_1 * 128 + 	33	] := 	7
		%FACTORY_MAPPING[$count_1 * 128 + 	34	] := 	1
		%FACTORY_MAPPING[$count_1 * 128 + 	35	] := 	2
		%FACTORY_MAPPING[$count_1 * 128 + 	36	] := 	0
		%FACTORY_MAPPING[$count_1 * 128 + 	37	] := 	11
		%FACTORY_MAPPING[$count_1 * 128 + 	38	] := 	4
		%FACTORY_MAPPING[$count_1 * 128 + 	39	] := 	13
		%FACTORY_MAPPING[$count_1 * 128 + 	40	] := 	10
		%FACTORY_MAPPING[$count_1 * 128 + 	41	] := 	61
		%FACTORY_MAPPING[$count_1 * 128 + 	42	] := 	23
		%FACTORY_MAPPING[$count_1 * 128 + 	43	] := 	54
		%FACTORY_MAPPING[$count_1 * 128 + 	44	] := 	29
		%FACTORY_MAPPING[$count_1 * 128 + 	45	] := 	49
		%FACTORY_MAPPING[$count_1 * 128 + 	46	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	47	] := 	47
		%FACTORY_MAPPING[$count_1 * 128 + 	48	] := 	42
		%FACTORY_MAPPING[$count_1 * 128 + 	49	] := 	75
		%FACTORY_MAPPING[$count_1 * 128 + 	50	] := 	40
		%FACTORY_MAPPING[$count_1 * 128 + 	51	] := 	86
		%FACTORY_MAPPING[$count_1 * 128 + 	52	] := 	91
		%FACTORY_MAPPING[$count_1 * 128 + 	53	] := 	87
		%FACTORY_MAPPING[$count_1 * 128 + 	54	] := 	78
		%FACTORY_MAPPING[$count_1 * 128 + 	55	] := 	95
		%FACTORY_MAPPING[$count_1 * 128 + 	56	] := 	116
		%FACTORY_MAPPING[$count_1 * 128 + 	57	] := 	80
		%FACTORY_MAPPING[$count_1 * 128 + 	58	] := 	83
		%FACTORY_MAPPING[$count_1 * 128 + 	59	] := 	85
		%FACTORY_MAPPING[$count_1 * 128 + 	60	] := 	36
		%FACTORY_MAPPING[$count_1 * 128 + 	61	] := 	25
		%FACTORY_MAPPING[$count_1 * 128 + 	62	] := 	28
		%FACTORY_MAPPING[$count_1 * 128 + 	63	] := 	20
		%FACTORY_MAPPING[$count_1 * 128 + 	64	] := 	27
		%FACTORY_MAPPING[$count_1 * 128 + 	65	] := 	24
		%FACTORY_MAPPING[$count_1 * 128 + 	66	] := 	14
		%FACTORY_MAPPING[$count_1 * 128 + 	67	] := 	17
		%FACTORY_MAPPING[$count_1 * 128 + 	68	] := 	16
		%FACTORY_MAPPING[$count_1 * 128 + 	69	] := 	12
		%FACTORY_MAPPING[$count_1 * 128 + 	70	] := 	13
		%FACTORY_MAPPING[$count_1 * 128 + 	71	] := 	15
		%FACTORY_MAPPING[$count_1 * 128 + 	72	] := 	65
		%FACTORY_MAPPING[$count_1 * 128 + 	73	] := 	64
		%FACTORY_MAPPING[$count_1 * 128 + 	74	] := 	58
		%FACTORY_MAPPING[$count_1 * 128 + 	75	] := 	57
		%FACTORY_MAPPING[$count_1 * 128 + 	76	] := 	117
		%FACTORY_MAPPING[$count_1 * 128 + 	77	] := 	63
		%FACTORY_MAPPING[$count_1 * 128 + 	78	] := 	56
		%FACTORY_MAPPING[$count_1 * 128 + 	79	] := 	51
		%FACTORY_MAPPING[$count_1 * 128 + 	80	] := 	50
		%FACTORY_MAPPING[$count_1 * 128 + 	81	] := 	44
		%FACTORY_MAPPING[$count_1 * 128 + 	82	] := 	43
		%FACTORY_MAPPING[$count_1 * 128 + 	83	] := 	94
		%FACTORY_MAPPING[$count_1 * 128 + 	84	] := 	76
		%FACTORY_MAPPING[$count_1 * 128 + 	85	] := 	77
		%FACTORY_MAPPING[$count_1 * 128 + 	86	] := 	81
		%FACTORY_MAPPING[$count_1 * 128 + 	87	] := 	82
		%FACTORY_MAPPING[$count_1 * 128 + 	88	] := 	92
		%FACTORY_MAPPING[$count_1 * 128 + 	89	] := 	96
		%FACTORY_MAPPING[$count_1 * 128 + 	90	] := 	97
		%FACTORY_MAPPING[$count_1 * 128 + 	91	] := 	99
		%FACTORY_MAPPING[$count_1 * 128 + 	92	] := 	103
		%FACTORY_MAPPING[$count_1 * 128 + 	93	] := 	100
		%FACTORY_MAPPING[$count_1 * 128 + 	94	] := 	88
		%FACTORY_MAPPING[$count_1 * 128 + 	94	] := 	102
		%FACTORY_MAPPING[$count_1 * 128 + 	95	] := 	98
		%FACTORY_MAPPING[$count_1 * 128 + 	95	] := 	106
		%FACTORY_MAPPING[$count_1 * 128 + 	96	] := 	104
		%FACTORY_MAPPING[$count_1 * 128 + 	97	] := 	93
		%FACTORY_MAPPING[$count_1 * 128 + 	98	] := 	101
		%FACTORY_MAPPING[$count_1 * 128 + 	99	] := 	105
		%FACTORY_MAPPING[$count_1 * 128 + 	100	] := 	18
		%FACTORY_MAPPING[$count_1 * 128 + 	101	] := 	45
		%FACTORY_MAPPING[$count_1 * 128 + 	102	] := 	46
		%FACTORY_MAPPING[$count_1 * 128 + 	103	] := 	52
		%FACTORY_MAPPING[$count_1 * 128 + 	104	] := 	53
		%FACTORY_MAPPING[$count_1 * 128 + 	105	] := 	59
		%FACTORY_MAPPING[$count_1 * 128 + 	106	] := 	60
		%FACTORY_MAPPING[$count_1 * 128 + 	107	] := 	66
		%FACTORY_MAPPING[$count_1 * 128 + 	108	] := 	19
		%FACTORY_MAPPING[$count_1 * 128 + 	109	] := 	37
		%FACTORY_MAPPING[$count_1 * 128 + 	110	] := 	38
		%FACTORY_MAPPING[$count_1 * 128 + 	111	] := 	39
		%FACTORY_MAPPING[$count_1 * 128 + 	112	] := 	79
		%FACTORY_MAPPING[$count_1 * 128 + 	113	] := 	84
		%FACTORY_MAPPING[$count_1 * 128 + 	114	] := 	89
		%FACTORY_MAPPING[$count_1 * 128 + 	115	] := 	90
		%FACTORY_MAPPING[$count_1 * 128 + 	116	] := 	5
		%FACTORY_MAPPING[$count_1 * 128 + 	117	] := 	6
		%FACTORY_MAPPING[$count_1 * 128 + 	118	] := 	8
		%FACTORY_MAPPING[$count_1 * 128 + 	119	] := 	9
		%FACTORY_MAPPING[$count_1 * 128 + 	120	] := 	125
		%FACTORY_MAPPING[$count_1 * 128 + 	121	] := 	126
		%FACTORY_MAPPING[$count_1 * 128 + 	122	] := 	112
		%FACTORY_MAPPING[$count_1 * 128 + 	123	] := 	113
		%FACTORY_MAPPING[$count_1 * 128 + 	124	] := 	121
		%FACTORY_MAPPING[$count_1 * 128 + 	125	] := 	122

	{BFD Mapping}
		$count_1 := 7
		%FACTORY_MAPPING[$count_1 * 128 + 	0	] := 	123
		%FACTORY_MAPPING[$count_1 * 128 + 	1	] := 	124
		%FACTORY_MAPPING[$count_1 * 128 + 	2	] := 	121
		%FACTORY_MAPPING[$count_1 * 128 + 	3	] := 	122
		%FACTORY_MAPPING[$count_1 * 128 + 	4	] := 	118
		%FACTORY_MAPPING[$count_1 * 128 + 	5	] := 	114
		%FACTORY_MAPPING[$count_1 * 128 + 	6	] := 	115
		%FACTORY_MAPPING[$count_1 * 128 + 	9	] := 	125
		%FACTORY_MAPPING[$count_1 * 128 + 	10	] := 	126
		%FACTORY_MAPPING[$count_1 * 128 + 	11	] := 	119
		%FACTORY_MAPPING[$count_1 * 128 + 	12	] := 	120
		%FACTORY_MAPPING[$count_1 * 128 + 	13	] := 	116
		%FACTORY_MAPPING[$count_1 * 128 + 	14	] := 	117
		%FACTORY_MAPPING[$count_1 * 128 + 	15	] := 	112
		%FACTORY_MAPPING[$count_1 * 128 + 	16	] := 	113
		%FACTORY_MAPPING[$count_1 * 128 + 	17	] := 	110
		%FACTORY_MAPPING[$count_1 * 128 + 	18	] := 	111
		%FACTORY_MAPPING[$count_1 * 128 + 	19	] := 	108
		%FACTORY_MAPPING[$count_1 * 128 + 	20	] := 	109
		%FACTORY_MAPPING[$count_1 * 128 + 	21	] := 	107
		%FACTORY_MAPPING[$count_1 * 128 + 	22	] := 	3
		%FACTORY_MAPPING[$count_1 * 128 + 	23	] := 	1
		%FACTORY_MAPPING[$count_1 * 128 + 	24	] := 	21
		%FACTORY_MAPPING[$count_1 * 128 + 	25	] := 	22
		%FACTORY_MAPPING[$count_1 * 128 + 	26	] := 	24
		%FACTORY_MAPPING[$count_1 * 128 + 	27	] := 	27
		%FACTORY_MAPPING[$count_1 * 128 + 	28	] := 	28
		%FACTORY_MAPPING[$count_1 * 128 + 	29	] := 	30
		%FACTORY_MAPPING[$count_1 * 128 + 	30	] := 	32
		%FACTORY_MAPPING[$count_1 * 128 + 	31	] := 	25
		%FACTORY_MAPPING[$count_1 * 128 + 	32	] := 	36
		%FACTORY_MAPPING[$count_1 * 128 + 	33	] := 	35
		%FACTORY_MAPPING[$count_1 * 128 + 	34	] := 	20
		%FACTORY_MAPPING[$count_1 * 128 + 	35	] := 	2
		%FACTORY_MAPPING[$count_1 * 128 + 	36	] := 	0
		%FACTORY_MAPPING[$count_1 * 128 + 	37	] := 	11
		%FACTORY_MAPPING[$count_1 * 128 + 	38	] := 	4
		%FACTORY_MAPPING[$count_1 * 128 + 	39	] := 	13
		%FACTORY_MAPPING[$count_1 * 128 + 	40	] := 	10
		%FACTORY_MAPPING[$count_1 * 128 + 	41	] := 	12
		%FACTORY_MAPPING[$count_1 * 128 + 	42	] := 	23
		%FACTORY_MAPPING[$count_1 * 128 + 	43	] := 	54
		%FACTORY_MAPPING[$count_1 * 128 + 	44	] := 	29
		%FACTORY_MAPPING[$count_1 * 128 + 	45	] := 	47
		%FACTORY_MAPPING[$count_1 * 128 + 	46	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	47	] := 	40
		%FACTORY_MAPPING[$count_1 * 128 + 	48	] := 	26
		%FACTORY_MAPPING[$count_1 * 128 + 	49	] := 	75
		%FACTORY_MAPPING[$count_1 * 128 + 	50	] := 	33
		%FACTORY_MAPPING[$count_1 * 128 + 	51	] := 	86
		%FACTORY_MAPPING[$count_1 * 128 + 	52	] := 	34
		%FACTORY_MAPPING[$count_1 * 128 + 	53	] := 	87
		%FACTORY_MAPPING[$count_1 * 128 + 	54	] := 	77
		%FACTORY_MAPPING[$count_1 * 128 + 	55	] := 	80
		%FACTORY_MAPPING[$count_1 * 128 + 	56	] := 	82
		%FACTORY_MAPPING[$count_1 * 128 + 	57	] := 	78
		%FACTORY_MAPPING[$count_1 * 128 + 	58	] := 	83
		%FACTORY_MAPPING[$count_1 * 128 + 	59	] := 	88
		%FACTORY_MAPPING[$count_1 * 128 + 	60	] := 	85
		%FACTORY_MAPPING[$count_1 * 128 + 	61	] := 	91
		%FACTORY_MAPPING[$count_1 * 128 + 	62	] := 	95
		%FACTORY_MAPPING[$count_1 * 128 + 	63	] := 	76
		%FACTORY_MAPPING[$count_1 * 128 + 	64	] := 	81
		%FACTORY_MAPPING[$count_1 * 128 + 	65	] := 	92
		%FACTORY_MAPPING[$count_1 * 128 + 	66	] := 	94
		%FACTORY_MAPPING[$count_1 * 128 + 	67	] := 	98
		%FACTORY_MAPPING[$count_1 * 128 + 	69	] := 	7
		%FACTORY_MAPPING[$count_1 * 128 + 	69	] := 	14
		%FACTORY_MAPPING[$count_1 * 128 + 	70	] := 	15
		%FACTORY_MAPPING[$count_1 * 128 + 	71	] := 	61
		%FACTORY_MAPPING[$count_1 * 128 + 	72	] := 	64
		%FACTORY_MAPPING[$count_1 * 128 + 	73	] := 	65
		%FACTORY_MAPPING[$count_1 * 128 + 	74	] := 	57
		%FACTORY_MAPPING[$count_1 * 128 + 	75	] := 	58
		%FACTORY_MAPPING[$count_1 * 128 + 	76	] := 	50
		%FACTORY_MAPPING[$count_1 * 128 + 	77	] := 	51
		%FACTORY_MAPPING[$count_1 * 128 + 	78	] := 	43
		%FACTORY_MAPPING[$count_1 * 128 + 	79	] := 	44
		%FACTORY_MAPPING[$count_1 * 128 + 	80	] := 	16
		%FACTORY_MAPPING[$count_1 * 128 + 	81	] := 	17
		%FACTORY_MAPPING[$count_1 * 128 + 	82	] := 	18
		%FACTORY_MAPPING[$count_1 * 128 + 	83	] := 	45
		%FACTORY_MAPPING[$count_1 * 128 + 	84	] := 	46
		%FACTORY_MAPPING[$count_1 * 128 + 	85	] := 	52
		%FACTORY_MAPPING[$count_1 * 128 + 	86	] := 	53
		%FACTORY_MAPPING[$count_1 * 128 + 	87	] := 	59
		%FACTORY_MAPPING[$count_1 * 128 + 	88	] := 	60
		%FACTORY_MAPPING[$count_1 * 128 + 	89	] := 	66
		%FACTORY_MAPPING[$count_1 * 128 + 	90	] := 	67
		%FACTORY_MAPPING[$count_1 * 128 + 	91	] := 	5
		%FACTORY_MAPPING[$count_1 * 128 + 	92	] := 	6
		%FACTORY_MAPPING[$count_1 * 128 + 	93	] := 	8
		%FACTORY_MAPPING[$count_1 * 128 + 	94	] := 	9
		%FACTORY_MAPPING[$count_1 * 128 + 	95	] := 	62
		%FACTORY_MAPPING[$count_1 * 128 + 	96	] := 	63
		%FACTORY_MAPPING[$count_1 * 128 + 	97	] := 	55
		%FACTORY_MAPPING[$count_1 * 128 + 	98	] := 	56
		%FACTORY_MAPPING[$count_1 * 128 + 	99	] := 	48
		%FACTORY_MAPPING[$count_1 * 128 + 	100	] := 	49
		%FACTORY_MAPPING[$count_1 * 128 + 	101	] := 	41
		%FACTORY_MAPPING[$count_1 * 128 + 	102	] := 	42
		%FACTORY_MAPPING[$count_1 * 128 + 	103	] := 	68
		%FACTORY_MAPPING[$count_1 * 128 + 	104	] := 	71
		%FACTORY_MAPPING[$count_1 * 128 + 	105	] := 	72
		%FACTORY_MAPPING[$count_1 * 128 + 	106	] := 	73
		%FACTORY_MAPPING[$count_1 * 128 + 	107	] := 	74
		%FACTORY_MAPPING[$count_1 * 128 + 	108	] := 	69
		%FACTORY_MAPPING[$count_1 * 128 + 	109	] := 	70
		%FACTORY_MAPPING[$count_1 * 128 + 	110	] := 	93
		%FACTORY_MAPPING[$count_1 * 128 + 	111	] := 	96
		%FACTORY_MAPPING[$count_1 * 128 + 	112	] := 	97
		%FACTORY_MAPPING[$count_1 * 128 + 	113	] := 	19
		%FACTORY_MAPPING[$count_1 * 128 + 	114	] := 	37
		%FACTORY_MAPPING[$count_1 * 128 + 	115	] := 	38
		%FACTORY_MAPPING[$count_1 * 128 + 	116	] := 	39
		%FACTORY_MAPPING[$count_1 * 128 + 	117	] := 	79
		%FACTORY_MAPPING[$count_1 * 128 + 	118	] := 	84
		%FACTORY_MAPPING[$count_1 * 128 + 	119	] := 	89
		%FACTORY_MAPPING[$count_1 * 128 + 	120	] := 	90
		%FACTORY_MAPPING[$count_1 * 128 + 	121	] := 	127

	{iMap Mapping}
		$count_1 := 8
		%FACTORY_MAPPING[$count_1 * 128 + 	0	] := 	125
		%FACTORY_MAPPING[$count_1 * 128 + 	1	] := 	126
		%FACTORY_MAPPING[$count_1 * 128 + 	2	] := 	119
		%FACTORY_MAPPING[$count_1 * 128 + 	3	] := 	120
		%FACTORY_MAPPING[$count_1 * 128 + 	4	] := 	116
		%FACTORY_MAPPING[$count_1 * 128 + 	5	] := 	117
		%FACTORY_MAPPING[$count_1 * 128 + 	6	] := 	110
		%FACTORY_MAPPING[$count_1 * 128 + 	7	] := 	111
		%FACTORY_MAPPING[$count_1 * 128 + 	8	] := 	108
		%FACTORY_MAPPING[$count_1 * 128 + 	9	] := 	109
		%FACTORY_MAPPING[$count_1 * 128 + 	10	] := 	107
		%FACTORY_MAPPING[$count_1 * 128 + 	11	] := 	68
		%FACTORY_MAPPING[$count_1 * 128 + 	12	] := 	69
		%FACTORY_MAPPING[$count_1 * 128 + 	13	] := 	70
		%FACTORY_MAPPING[$count_1 * 128 + 	14	] := 	71
		%FACTORY_MAPPING[$count_1 * 128 + 	15	] := 	72
		%FACTORY_MAPPING[$count_1 * 128 + 	16	] := 	73
		%FACTORY_MAPPING[$count_1 * 128 + 	17	] := 	74
		%FACTORY_MAPPING[$count_1 * 128 + 	18	] := 	45
		%FACTORY_MAPPING[$count_1 * 128 + 	19	] := 	46
		%FACTORY_MAPPING[$count_1 * 128 + 	20	] := 	52
		%FACTORY_MAPPING[$count_1 * 128 + 	21	] := 	53
		%FACTORY_MAPPING[$count_1 * 128 + 	22	] := 	59
		%FACTORY_MAPPING[$count_1 * 128 + 	23	] := 	60
		%FACTORY_MAPPING[$count_1 * 128 + 	24	] := 	66
		%FACTORY_MAPPING[$count_1 * 128 + 	25	] := 	67
		%FACTORY_MAPPING[$count_1 * 128 + 	26	] := 	62
		%FACTORY_MAPPING[$count_1 * 128 + 	27	] := 	63
		%FACTORY_MAPPING[$count_1 * 128 + 	28	] := 	40
		%FACTORY_MAPPING[$count_1 * 128 + 	29	] := 	44
		%FACTORY_MAPPING[$count_1 * 128 + 	30	] := 	61
		%FACTORY_MAPPING[$count_1 * 128 + 	31	] := 	47
		%FACTORY_MAPPING[$count_1 * 128 + 	32	] := 	64
		%FACTORY_MAPPING[$count_1 * 128 + 	33	] := 	51
		%FACTORY_MAPPING[$count_1 * 128 + 	34	] := 	65
		%FACTORY_MAPPING[$count_1 * 128 + 	35	] := 	54
		%FACTORY_MAPPING[$count_1 * 128 + 	36	] := 	58
		%FACTORY_MAPPING[$count_1 * 128 + 	37	] := 	35
		%FACTORY_MAPPING[$count_1 * 128 + 	38	] := 	5
		%FACTORY_MAPPING[$count_1 * 128 + 	39	] := 	34
		%FACTORY_MAPPING[$count_1 * 128 + 	40	] := 	8
		%FACTORY_MAPPING[$count_1 * 128 + 	41	] := 	30
		%FACTORY_MAPPING[$count_1 * 128 + 	42	] := 	12
		%FACTORY_MAPPING[$count_1 * 128 + 	43	] := 	3
		%FACTORY_MAPPING[$count_1 * 128 + 	44	] := 	13
		%FACTORY_MAPPING[$count_1 * 128 + 	45	] := 	1
		%FACTORY_MAPPING[$count_1 * 128 + 	46	] := 	6
		%FACTORY_MAPPING[$count_1 * 128 + 	47	] := 	2
		%FACTORY_MAPPING[$count_1 * 128 + 	48	] := 	0
		%FACTORY_MAPPING[$count_1 * 128 + 	49	] := 	11
		%FACTORY_MAPPING[$count_1 * 128 + 	50	] := 	4
		%FACTORY_MAPPING[$count_1 * 128 + 	51	] := 	10
		%FACTORY_MAPPING[$count_1 * 128 + 	52	] := 	7
		%FACTORY_MAPPING[$count_1 * 128 + 	53	] := 	29
		%FACTORY_MAPPING[$count_1 * 128 + 	54	] := 	23
		%FACTORY_MAPPING[$count_1 * 128 + 	55	] := 	20
		%FACTORY_MAPPING[$count_1 * 128 + 	56	] := 	26
		%FACTORY_MAPPING[$count_1 * 128 + 	57	] := 	32
		%FACTORY_MAPPING[$count_1 * 128 + 	58	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	59	] := 	36
		%FACTORY_MAPPING[$count_1 * 128 + 	60	] := 	75
		%FACTORY_MAPPING[$count_1 * 128 + 	61	] := 	76
		%FACTORY_MAPPING[$count_1 * 128 + 	62	] := 	86
		%FACTORY_MAPPING[$count_1 * 128 + 	63	] := 	87
		%FACTORY_MAPPING[$count_1 * 128 + 	64	] := 	41
		%FACTORY_MAPPING[$count_1 * 128 + 	65	] := 	42
		%FACTORY_MAPPING[$count_1 * 128 + 	66	] := 	43
		%FACTORY_MAPPING[$count_1 * 128 + 	67	] := 	48
		%FACTORY_MAPPING[$count_1 * 128 + 	68	] := 	50
		%FACTORY_MAPPING[$count_1 * 128 + 	69	] := 	49
		%FACTORY_MAPPING[$count_1 * 128 + 	70	] := 	57
		%FACTORY_MAPPING[$count_1 * 128 + 	71	] := 	55
		%FACTORY_MAPPING[$count_1 * 128 + 	72	] := 	56
		%FACTORY_MAPPING[$count_1 * 128 + 	73	] := 	77
		%FACTORY_MAPPING[$count_1 * 128 + 	74	] := 	83
		%FACTORY_MAPPING[$count_1 * 128 + 	75	] := 	82
		%FACTORY_MAPPING[$count_1 * 128 + 	76	] := 	85
		%FACTORY_MAPPING[$count_1 * 128 + 	77	] := 	78
		%FACTORY_MAPPING[$count_1 * 128 + 	78	] := 	95
		%FACTORY_MAPPING[$count_1 * 128 + 	79	] := 	80
		%FACTORY_MAPPING[$count_1 * 128 + 	80	] := 	81
		%FACTORY_MAPPING[$count_1 * 128 + 	81	] := 	91
		%FACTORY_MAPPING[$count_1 * 128 + 	82	] := 	92
		%FACTORY_MAPPING[$count_1 * 128 + 	83	] := 	94
		%FACTORY_MAPPING[$count_1 * 128 + 	84	] := 	88
		%FACTORY_MAPPING[$count_1 * 128 + 	85	] := 	98
		%FACTORY_MAPPING[$count_1 * 128 + 	86	] := 	14
		%FACTORY_MAPPING[$count_1 * 128 + 	87	] := 	15
		%FACTORY_MAPPING[$count_1 * 128 + 	88	] := 	16
		%FACTORY_MAPPING[$count_1 * 128 + 	89	] := 	17
		%FACTORY_MAPPING[$count_1 * 128 + 	90	] := 	18
		%FACTORY_MAPPING[$count_1 * 128 + 	91	] := 	9
		%FACTORY_MAPPING[$count_1 * 128 + 	92	] := 	21
		%FACTORY_MAPPING[$count_1 * 128 + 	93	] := 	22
		%FACTORY_MAPPING[$count_1 * 128 + 	94	] := 	24
		%FACTORY_MAPPING[$count_1 * 128 + 	95	] := 	25
		%FACTORY_MAPPING[$count_1 * 128 + 	96	] := 	27
		%FACTORY_MAPPING[$count_1 * 128 + 	97	] := 	28
		%FACTORY_MAPPING[$count_1 * 128 + 	98	] := 	33
		%FACTORY_MAPPING[$count_1 * 128 + 	99	] := 	93
		%FACTORY_MAPPING[$count_1 * 128 + 	100	] := 	96
		%FACTORY_MAPPING[$count_1 * 128 + 	101	] := 	97
		%FACTORY_MAPPING[$count_1 * 128 + 	102	] := 	19
		%FACTORY_MAPPING[$count_1 * 128 + 	103	] := 	37
		%FACTORY_MAPPING[$count_1 * 128 + 	104	] := 	38
		%FACTORY_MAPPING[$count_1 * 128 + 	105	] := 	39
		%FACTORY_MAPPING[$count_1 * 128 + 	106	] := 	79
		%FACTORY_MAPPING[$count_1 * 128 + 	107	] := 	84
		%FACTORY_MAPPING[$count_1 * 128 + 	108	] := 	89
		%FACTORY_MAPPING[$count_1 * 128 + 	109	] := 	90
		%FACTORY_MAPPING[$count_1 * 128 + 	110	] := 	112
		%FACTORY_MAPPING[$count_1 * 128 + 	111	] := 	113
		%FACTORY_MAPPING[$count_1 * 128 + 	112	] := 	114
		%FACTORY_MAPPING[$count_1 * 128 + 	113	] := 	115
		%FACTORY_MAPPING[$count_1 * 128 + 	114	] := 	118
		%FACTORY_MAPPING[$count_1 * 128 + 	115	] := 	121
		%FACTORY_MAPPING[$count_1 * 128 + 	116	] := 	122
		%FACTORY_MAPPING[$count_1 * 128 + 	117	] := 	123
		%FACTORY_MAPPING[$count_1 * 128 + 	118	] := 	124
		%FACTORY_MAPPING[$count_1 * 128 + 	119	] := 	127
	
	{Addictive Drums}
		$count_1 := 9
		%FACTORY_MAPPING[$count_1 * 128 + 	0	] := 	122
		%FACTORY_MAPPING[$count_1 * 128 + 	1	] := 	123
		%FACTORY_MAPPING[$count_1 * 128 + 	2	] := 	124
		%FACTORY_MAPPING[$count_1 * 128 + 	7	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	8	] := 	31
		%FACTORY_MAPPING[$count_1 * 128 + 	9	] := 	24
		%FACTORY_MAPPING[$count_1 * 128 + 	10	] := 	25
		%FACTORY_MAPPING[$count_1 * 128 + 	11	] := 	27
		%FACTORY_MAPPING[$count_1 * 128 + 	12	] := 	28
		%FACTORY_MAPPING[$count_1 * 128 + 	13	] := 	62
		%FACTORY_MAPPING[$count_1 * 128 + 	14	] := 	63
		%FACTORY_MAPPING[$count_1 * 128 + 	15	] := 	65
		%FACTORY_MAPPING[$count_1 * 128 + 	16	] := 	55
		%FACTORY_MAPPING[$count_1 * 128 + 	17	] := 	56
		%FACTORY_MAPPING[$count_1 * 128 + 	18	] := 	58
		%FACTORY_MAPPING[$count_1 * 128 + 	19	] := 	48
		%FACTORY_MAPPING[$count_1 * 128 + 	20	] := 	49
		%FACTORY_MAPPING[$count_1 * 128 + 	21	] := 	51
		%FACTORY_MAPPING[$count_1 * 128 + 	22	] := 	41
		%FACTORY_MAPPING[$count_1 * 128 + 	23	] := 	42
		%FACTORY_MAPPING[$count_1 * 128 + 	24	] := 	44
		%FACTORY_MAPPING[$count_1 * 128 + 	25	] := 	18
		%FACTORY_MAPPING[$count_1 * 128 + 	26	] := 	4
		%FACTORY_MAPPING[$count_1 * 128 + 	27	] := 	13
		%FACTORY_MAPPING[$count_1 * 128 + 	28	] := 	9
		%FACTORY_MAPPING[$count_1 * 128 + 	29	] := 	12
		%FACTORY_MAPPING[$count_1 * 128 + 	30	] := 	14
		%FACTORY_MAPPING[$count_1 * 128 + 	31	] := 	16
		%FACTORY_MAPPING[$count_1 * 128 + 	32	] := 	17
		%FACTORY_MAPPING[$count_1 * 128 + 	33	] := 	3
		%FACTORY_MAPPING[$count_1 * 128 + 	34	] := 	1
		%FACTORY_MAPPING[$count_1 * 128 + 	35	] := 	2
		%FACTORY_MAPPING[$count_1 * 128 + 	36	] := 	0
		%FACTORY_MAPPING[$count_1 * 128 + 	37	] := 	10
		%FACTORY_MAPPING[$count_1 * 128 + 	38	] := 	5
		%FACTORY_MAPPING[$count_1 * 128 + 	39	] := 	10
		%FACTORY_MAPPING[$count_1 * 128 + 	40	] := 	6
		%FACTORY_MAPPING[$count_1 * 128 + 	41	] := 	8
		%FACTORY_MAPPING[$count_1 * 128 + 	42	] := 	11
		%FACTORY_MAPPING[$count_1 * 128 + 	43	] := 	7
		%FACTORY_MAPPING[$count_1 * 128 + 	44	] := 	15
		%FACTORY_MAPPING[$count_1 * 128 + 	45	] := 	86
		%FACTORY_MAPPING[$count_1 * 128 + 	46	] := 	75
		%FACTORY_MAPPING[$count_1 * 128 + 	47	] := 	116
		%FACTORY_MAPPING[$count_1 * 128 + 	48	] := 	29
		%FACTORY_MAPPING[$count_1 * 128 + 	49	] := 	20
		%FACTORY_MAPPING[$count_1 * 128 + 	50	] := 	26
		%FACTORY_MAPPING[$count_1 * 128 + 	51	] := 	23
		%FACTORY_MAPPING[$count_1 * 128 + 	52	] := 	32
		%FACTORY_MAPPING[$count_1 * 128 + 	53	] := 	22
		%FACTORY_MAPPING[$count_1 * 128 + 	54	] := 	33
		%FACTORY_MAPPING[$count_1 * 128 + 	55	] := 	34
		%FACTORY_MAPPING[$count_1 * 128 + 	56	] := 	35
		%FACTORY_MAPPING[$count_1 * 128 + 	57	] := 	36
		%FACTORY_MAPPING[$count_1 * 128 + 	58	] := 	21
		%FACTORY_MAPPING[$count_1 * 128 + 	59	] := 	30
		%FACTORY_MAPPING[$count_1 * 128 + 	60	] := 	86
		%FACTORY_MAPPING[$count_1 * 128 + 	61	] := 	87
		%FACTORY_MAPPING[$count_1 * 128 + 	62	] := 	85
		%FACTORY_MAPPING[$count_1 * 128 + 	63	] := 	88
		%FACTORY_MAPPING[$count_1 * 128 + 	64	] := 	117
		%FACTORY_MAPPING[$count_1 * 128 + 	65	] := 	61
		%FACTORY_MAPPING[$count_1 * 128 + 	66	] := 	64
		%FACTORY_MAPPING[$count_1 * 128 + 	67	] := 	54
		%FACTORY_MAPPING[$count_1 * 128 + 	68	] := 	57
		%FACTORY_MAPPING[$count_1 * 128 + 	69	] := 	47
		%FACTORY_MAPPING[$count_1 * 128 + 	70	] := 	50
		%FACTORY_MAPPING[$count_1 * 128 + 	71	] := 	40
		%FACTORY_MAPPING[$count_1 * 128 + 	72	] := 	43
		%FACTORY_MAPPING[$count_1 * 128 + 	73	] := 	108
		%FACTORY_MAPPING[$count_1 * 128 + 	74	] := 	109
		%FACTORY_MAPPING[$count_1 * 128 + 	75	] := 	107
		%FACTORY_MAPPING[$count_1 * 128 + 	76	] := 	110
		%FACTORY_MAPPING[$count_1 * 128 + 	77	] := 	75
		%FACTORY_MAPPING[$count_1 * 128 + 	78	] := 	78
		%FACTORY_MAPPING[$count_1 * 128 + 	79	] := 	80
		%FACTORY_MAPPING[$count_1 * 128 + 	80	] := 	83
		%FACTORY_MAPPING[$count_1 * 128 + 	81	] := 	91
		%FACTORY_MAPPING[$count_1 * 128 + 	82	] := 	94
		%FACTORY_MAPPING[$count_1 * 128 + 	83	] := 	95
		%FACTORY_MAPPING[$count_1 * 128 + 	84	] := 	98
		%FACTORY_MAPPING[$count_1 * 128 + 	85	] := 	76
		%FACTORY_MAPPING[$count_1 * 128 + 	86	] := 	77
		%FACTORY_MAPPING[$count_1 * 128 + 	87	] := 	81
		%FACTORY_MAPPING[$count_1 * 128 + 	88	] := 	82
		%FACTORY_MAPPING[$count_1 * 128 + 	89	] := 	92
		%FACTORY_MAPPING[$count_1 * 128 + 	90	] := 	93
		%FACTORY_MAPPING[$count_1 * 128 + 	91	] := 	96
		%FACTORY_MAPPING[$count_1 * 128 + 	92	] := 	97
		%FACTORY_MAPPING[$count_1 * 128 + 	93	] := 	66
		%FACTORY_MAPPING[$count_1 * 128 + 	94	] := 	67
		%FACTORY_MAPPING[$count_1 * 128 + 	95	] := 	59
		%FACTORY_MAPPING[$count_1 * 128 + 	96	] := 	60
		%FACTORY_MAPPING[$count_1 * 128 + 	97	] := 	52
		%FACTORY_MAPPING[$count_1 * 128 + 	98	] := 	53
		%FACTORY_MAPPING[$count_1 * 128 + 	99	] := 	45
		%FACTORY_MAPPING[$count_1 * 128 + 	100	] := 	46
		%FACTORY_MAPPING[$count_1 * 128 + 	101	] := 	111
		%FACTORY_MAPPING[$count_1 * 128 + 	102	] := 	119
		%FACTORY_MAPPING[$count_1 * 128 + 	103	] := 	120
		%FACTORY_MAPPING[$count_1 * 128 + 	104	] := 	125
		%FACTORY_MAPPING[$count_1 * 128 + 	105	] := 	126
		%FACTORY_MAPPING[$count_1 * 128 + 	106	] := 	19
		%FACTORY_MAPPING[$count_1 * 128 + 	107	] := 	37
		%FACTORY_MAPPING[$count_1 * 128 + 	108	] := 	38
		%FACTORY_MAPPING[$count_1 * 128 + 	109	] := 	39
		%FACTORY_MAPPING[$count_1 * 128 + 	110	] := 	79
		%FACTORY_MAPPING[$count_1 * 128 + 	111	] := 	84
		%FACTORY_MAPPING[$count_1 * 128 + 	112	] := 	89
		%FACTORY_MAPPING[$count_1 * 128 + 	113	] := 	90
		%FACTORY_MAPPING[$count_1 * 128 + 	114	] := 	68
		%FACTORY_MAPPING[$count_1 * 128 + 	115	] := 	69
		%FACTORY_MAPPING[$count_1 * 128 + 	116	] := 	70
		%FACTORY_MAPPING[$count_1 * 128 + 	117	] := 	71
		%FACTORY_MAPPING[$count_1 * 128 + 	118	] := 	72
		%FACTORY_MAPPING[$count_1 * 128 + 	119	] := 	73
		%FACTORY_MAPPING[$count_1 * 128 + 	120	] := 	74
		%FACTORY_MAPPING[$count_1 * 128 + 	121	] := 	112
		%FACTORY_MAPPING[$count_1 * 128 + 	122	] := 	113
		%FACTORY_MAPPING[$count_1 * 128 + 	123	] := 	114
		%FACTORY_MAPPING[$count_1 * 128 + 	124	] := 	115
		%FACTORY_MAPPING[$count_1 * 128 + 	125	] := 	121

	{Studio Drummer Mapping}
		$count_1 := 10
		%FACTORY_MAPPING[$count_1 * 128 + 22] := 78		{CHOKE 1-5}
		%FACTORY_MAPPING[$count_1 * 128 + 23] := 88
		%FACTORY_MAPPING[$count_1 * 128 + 24] := 83
		%FACTORY_MAPPING[$count_1 * 128 + 25] := 78
		

		%FACTORY_MAPPING[$count_1 * 128 + 27] := 121 	{* Perc E}
		%FACTORY_MAPPING[$count_1 * 128 + 28] := 122 	{* Perc E}

		%FACTORY_MAPPING[$count_1 * 128 + 29] := 107 	{* Perc A}
		%FACTORY_MAPPING[$count_1 * 128 + 30] := 108 	{* Perc A}

		%FACTORY_MAPPING[$count_1 * 128 + 31] := 111 	{* Perc B}
		%FACTORY_MAPPING[$count_1 * 128 + 32] := 112 	{* Perc B}

		%FACTORY_MAPPING[$count_1 * 128 + 33] := 115 	{* Perc C}
		%FACTORY_MAPPING[$count_1 * 128 + 34] := 116 	{* Perc C}

		%FACTORY_MAPPING[$count_1 * 128 + 35] := 118 	{* Perc D}
		%FACTORY_MAPPING[$count_1 * 128 + 36] := 0 		{kick}
		%FACTORY_MAPPING[$count_1 * 128 + 37] := 11 	{snare sidestick}
		%FACTORY_MAPPING[$count_1 * 128 + 38] := 4 		{snare center}
		%FACTORY_MAPPING[$count_1 * 128 + 39] := 10 	{snare rimshot}
		%FACTORY_MAPPING[$count_1 * 128 + 40] := 7 		{snare halway}
		%FACTORY_MAPPING[$count_1 * 128 + 41] := 54 	{TOM 3}
		%FACTORY_MAPPING[$count_1 * 128 + 42] := 23 	{hihat}
		%FACTORY_MAPPING[$count_1 * 128 + 43] := 54 	{TOM 3}
		%FACTORY_MAPPING[$count_1 * 128 + 44] := 29 	{hihat}
		%FACTORY_MAPPING[$count_1 * 128 + 45] := 47 	{TOM 2}
		%FACTORY_MAPPING[$count_1 * 128 + 46] := 31 	{hihat controller}
		%FACTORY_MAPPING[$count_1 * 128 + 47] := 40 	{TOM 1}
		%FACTORY_MAPPING[$count_1 * 128 + 48] := 75 	{Crash 1 - High TIP}
		%FACTORY_MAPPING[$count_1 * 128 + 49] := 76 	{Crash 1 - High EDGE}
		%FACTORY_MAPPING[$count_1 * 128 + 50] := 75 	{Crash 1 - High TIP}
		%FACTORY_MAPPING[$count_1 * 128 + 51] := 86 	{Crash 3 RIDE TIP}
		%FACTORY_MAPPING[$count_1 * 128 + 52] := 86 	{Crash 3 RIDE TIP}
		%FACTORY_MAPPING[$count_1 * 128 + 53] := 85 	{Crash 3 RIDE BELL}
		%FACTORY_MAPPING[$count_1 * 128 + 54] := 80 	{Crash 2 - Low TIP}
		%FACTORY_MAPPING[$count_1 * 128 + 55] := 81 	{Crash 2 - Low EDGE}
		%FACTORY_MAPPING[$count_1 * 128 + 56] := 80 	{Crash 2 - Low TIP}
		%FACTORY_MAPPING[$count_1 * 128 + 57] := 81 	{Crash 2 - Low EDGE}
		%FACTORY_MAPPING[$count_1 * 128 + 58] := 80 	{Crash 2 - Low TIP}
		%FACTORY_MAPPING[$count_1 * 128 + 59] := 81 	{Crash 2 - Low EDGE}
		%FACTORY_MAPPING[$count_1 * 128 + 60] := 1 		{kick}
		%FACTORY_MAPPING[$count_1 * 128 + 61] := 12 	{snare Kang}
		%FACTORY_MAPPING[$count_1 * 128 + 62] := 13 	{snare SHOT}
		%FACTORY_MAPPING[$count_1 * 128 + 63] := 13 	{snare SHOT}
		%FACTORY_MAPPING[$count_1 * 128 + 64] := 14 	{Snare MUTED}

		%FACTORY_MAPPING[$count_1 * 128 + 66] := 23 	{hihat Closed Tip}
		%FACTORY_MAPPING[$count_1 * 128 + 68] := 26 	{hihat Closed Shank}
		%FACTORY_MAPPING[$count_1 * 128 + 70] := 30 	{hihat Open Pedal}

		%FACTORY_MAPPING[$count_1 * 128 + 76] := 23 	{hihat Closed Tip}
		%FACTORY_MAPPING[$count_1 * 128 + 77] := 26 	{hihat Closed Shank}
		%FACTORY_MAPPING[$count_1 * 128 + 78] := 33 	{hihat Open Half}
		%FACTORY_MAPPING[$count_1 * 128 + 79] := 35 	{hihat Open Full}
		%FACTORY_MAPPING[$count_1 * 128 + 80] := 30 	{hihat Open Pedal}
	
	declare !ARTICULATION_NAMES[126]
		{Kick}
			!ARTICULATION_NAMES[0] := "DAMPENED"
			!ARTICULATION_NAMES[1] := "HALF OPEN"
			!ARTICULATION_NAMES[2] := ""
			!ARTICULATION_NAMES[3] := ""			
		
		{Snare}
			!ARTICULATION_NAMES[4] := "CENTER L/R"
			!ARTICULATION_NAMES[5] := "CENTER L"
			!ARTICULATION_NAMES[6] := "CENTER R"
			!ARTICULATION_NAMES[7] := "HALFWAY L/R"
			!ARTICULATION_NAMES[8] := "HALFWAY L"
			!ARTICULATION_NAMES[9] := "HALFWAY R"
			!ARTICULATION_NAMES[10] := "RIMSHOT"
			!ARTICULATION_NAMES[11] := "SIDESTICK"
			!ARTICULATION_NAMES[12] := "KANG"
			!ARTICULATION_NAMES[13] := "SHOT"
			!ARTICULATION_NAMES[14] := "MUTED"
			!ARTICULATION_NAMES[15] := ""
			!ARTICULATION_NAMES[16] := ""
			!ARTICULATION_NAMES[17] := ""
			!ARTICULATION_NAMES[18] := ""
			!ARTICULATION_NAMES[19] := ""
		
		{Hihat}
			!ARTICULATION_NAMES[20] := ""
			!ARTICULATION_NAMES[21] := ""
			!ARTICULATION_NAMES[22] := ""
			!ARTICULATION_NAMES[23] := "CLOSED TIP L/R"
			!ARTICULATION_NAMES[24] := ""
			!ARTICULATION_NAMES[25] := ""
			!ARTICULATION_NAMES[26] := "CLOSED SHANK L/R"
			!ARTICULATION_NAMES[27] := ""
			!ARTICULATION_NAMES[28] := ""
			!ARTICULATION_NAMES[29] := "CLOSED PEDAL"
			!ARTICULATION_NAMES[30] := "OPEN PEDAL"
			!ARTICULATION_NAMES[31] := "OPEN CONTROL"
			!ARTICULATION_NAMES[32] := ""
			!ARTICULATION_NAMES[33] := "OPEN HALF"
			!ARTICULATION_NAMES[34] := ""
			!ARTICULATION_NAMES[35] := "OPEN FULL"
			!ARTICULATION_NAMES[36] := ""
			!ARTICULATION_NAMES[37] := ""
			!ARTICULATION_NAMES[38] := ""
			!ARTICULATION_NAMES[39] := ""

		{Tom 1}
			!ARTICULATION_NAMES[40] := "CENTER L/R"
			!ARTICULATION_NAMES[41] := ""
			!ARTICULATION_NAMES[42] := ""
			!ARTICULATION_NAMES[43] := ""
			!ARTICULATION_NAMES[44] := ""
			!ARTICULATION_NAMES[45] := ""			
			!ARTICULATION_NAMES[46] := ""			
			
		{Tom 2}
			!ARTICULATION_NAMES[47] := "CENTER L/R"
			!ARTICULATION_NAMES[48] := ""
			!ARTICULATION_NAMES[49] := ""
			!ARTICULATION_NAMES[50] := ""
			!ARTICULATION_NAMES[51] := ""
			!ARTICULATION_NAMES[52] := ""	
			!ARTICULATION_NAMES[53] := ""	
			
		{Tom 3}
			!ARTICULATION_NAMES[54] := "CENTER L/R"
			!ARTICULATION_NAMES[55] := ""
			!ARTICULATION_NAMES[56] := ""
			!ARTICULATION_NAMES[57] := ""
			!ARTICULATION_NAMES[58] := ""
			!ARTICULATION_NAMES[59] := ""			
			!ARTICULATION_NAMES[60] := ""			
			
		{Tom 4}
			!ARTICULATION_NAMES[61] := "CENTER L/R"
			!ARTICULATION_NAMES[62] := "CENTER L"
			!ARTICULATION_NAMES[63] := "CENTER R"
			!ARTICULATION_NAMES[64] := "RIMSHOT"
			!ARTICULATION_NAMES[65] := "RIM ONLY"
			!ARTICULATION_NAMES[66] := "BRUSH TAP"			
			!ARTICULATION_NAMES[67] := "BRUSH DIG"			

		{Tom 5}
			!ARTICULATION_NAMES[68] := "CENTER L/R"
			!ARTICULATION_NAMES[69] := "CENTER L"
			!ARTICULATION_NAMES[70] := "CENTER R"
			!ARTICULATION_NAMES[71] := "RIMSHOT"
			!ARTICULATION_NAMES[72] := "RIM ONLY"
			!ARTICULATION_NAMES[73] := "BRUSH TAP"  	
			!ARTICULATION_NAMES[74] := "BRUSH DIG"  	
			
		{Cymbal 1}
			!ARTICULATION_NAMES[75] := "TIP"
			!ARTICULATION_NAMES[76] := "EDGE"
			!ARTICULATION_NAMES[77] := "BELL"
			!ARTICULATION_NAMES[78] := "CHOKE"
			!ARTICULATION_NAMES[79] := "BRUSH"
			
		{Cymbal 2}
			!ARTICULATION_NAMES[80] := "TIP"
			!ARTICULATION_NAMES[81] := "EDGE"
			!ARTICULATION_NAMES[82] := ""
			!ARTICULATION_NAMES[83] := ""
			!ARTICULATION_NAMES[84] := ""
			
		{Cymbal 3}
			!ARTICULATION_NAMES[85] := "BELL"
			!ARTICULATION_NAMES[86] := "TIP"
			!ARTICULATION_NAMES[87] := ""
			!ARTICULATION_NAMES[88] := ""
			!ARTICULATION_NAMES[89] := ""
			!ARTICULATION_NAMES[90] := ""
			
		{Cymbal 4}
			!ARTICULATION_NAMES[91] := "EDGE"
			!ARTICULATION_NAMES[92] := "TIP"
			!ARTICULATION_NAMES[93] := "BELL"
			!ARTICULATION_NAMES[94] := "CHOKE"
			
		{Cymbal 5}
			!ARTICULATION_NAMES[95] := "EDGE"
			!ARTICULATION_NAMES[96] := "TIP"
			!ARTICULATION_NAMES[97] := "BELL"
			!ARTICULATION_NAMES[98] := "CHOKE"
			
		{Cymbal 6}
			!ARTICULATION_NAMES[99] := "EDGE"
			!ARTICULATION_NAMES[100] := "TIP"
			!ARTICULATION_NAMES[101] := "BELL"
			!ARTICULATION_NAMES[102] := "CHOKE"
			
		{Cymbal 7}
			!ARTICULATION_NAMES[103] := "EDGE"
			!ARTICULATION_NAMES[104] := "TIP"
			!ARTICULATION_NAMES[105] := "BELL"
			!ARTICULATION_NAMES[106] := "CHOKE"
			
		{constants that are to be set per kit}
		{Perc A - }
			!ARTICULATION_NAMES[107] := "HIT 1"
			!ARTICULATION_NAMES[108] := "HIT 2"
			!ARTICULATION_NAMES[109] := ""
			!ARTICULATION_NAMES[110] := ""
		
		{Perc B - }
			!ARTICULATION_NAMES[111] := "HIT 1"
			!ARTICULATION_NAMES[112] := "HIT 2"
			!ARTICULATION_NAMES[113] := ""
			!ARTICULATION_NAMES[114] := ""
			
		{Perc C - }
			!ARTICULATION_NAMES[115] := "HIT 1"	
			!ARTICULATION_NAMES[116] := "HIT 2"
			!ARTICULATION_NAMES[117] := ""

		{Perc D - }	
			!ARTICULATION_NAMES[118] := "HIT 1"
			!ARTICULATION_NAMES[119] := ""
			!ARTICULATION_NAMES[120] := ""
		{Perc 5 - Chopper}
			!ARTICULATION_NAMES[121] := "HIT 1"
			!ARTICULATION_NAMES[122] := "HIT 2"

	declare !artic_visual_name[126]
		{Kick}
			!artic_visual_name[0] := "Dampened"
			!artic_visual_name[1] := "Half Open"
			!artic_visual_name[2] := ""
			!artic_visual_name[3] := ""			
		
		{Snare}
			!artic_visual_name[4] := "Center L/R"
			!artic_visual_name[5] := "Center L"
			!artic_visual_name[6] := "Center R"
			!artic_visual_name[7] := "Halfway L/R"
			!artic_visual_name[8] := "Halfway L"
			!artic_visual_name[9] := "Halfway R"
			!artic_visual_name[10] := "Rimshot"
			!artic_visual_name[11] := "Sidestick"
			!artic_visual_name[12] := "Kang"
			!artic_visual_name[13] := "Shot"
			!artic_visual_name[14] := "Muted"
			!artic_visual_name[15] := ""
			!artic_visual_name[16] := ""
			!artic_visual_name[17] := ""
			!artic_visual_name[18] := ""
			!artic_visual_name[19] := ""
		
		{Hihat}
			!artic_visual_name[20] := ""
			!artic_visual_name[21] := ""
			!artic_visual_name[22] := ""
			!artic_visual_name[23] := "Closed Tip L/R"
			!artic_visual_name[24] := ""
			!artic_visual_name[25] := ""
			!artic_visual_name[26] := "Closed Shank L/R"
			!artic_visual_name[27] := ""
			!artic_visual_name[28] := ""
			!artic_visual_name[29] := "Closed Pedal"
			!artic_visual_name[30] := "Open Pedal"
			!artic_visual_name[31] := "Open Control"
			!artic_visual_name[32] := ""
			!artic_visual_name[33] := "Open Half"
			!artic_visual_name[34] := ""
			!artic_visual_name[35] := "Open Full"
			!artic_visual_name[36] := ""
			!artic_visual_name[37] := ""
			!artic_visual_name[38] := ""
			!artic_visual_name[39] := ""

		{Tom 1}
			!artic_visual_name[40] := "Center L/R"
			!artic_visual_name[41] := ""
			!artic_visual_name[42] := ""
			!artic_visual_name[43] := ""
			!artic_visual_name[44] := ""
			!artic_visual_name[45] := ""			
			!artic_visual_name[46] := ""			
			
		{Tom 2}
			!artic_visual_name[47] := "Center L/R"
			!artic_visual_name[48] := ""
			!artic_visual_name[49] := ""
			!artic_visual_name[50] := ""
			!artic_visual_name[51] := ""
			!artic_visual_name[52] := ""	
			!artic_visual_name[53] := ""	
			
		{Tom 3}
			!artic_visual_name[54] := "Center L/R"
			!artic_visual_name[55] := ""
			!artic_visual_name[56] := ""
			!artic_visual_name[57] := ""
			!artic_visual_name[58] := ""
			!artic_visual_name[59] := ""			
			!artic_visual_name[60] := ""			
			
		{Tom 4}
			!artic_visual_name[61] := "Center L/R"
			!artic_visual_name[62] := "Center L"
			!artic_visual_name[63] := "Center R"
			!artic_visual_name[64] := "Rimshot"
			!artic_visual_name[65] := "Rim ONLY"
			!artic_visual_name[66] := "Brush TAP"			
			!artic_visual_name[67] := "Brush DIG"			

		{Tom 5}
			!artic_visual_name[68] := "Center L/R"
			!artic_visual_name[69] := "Center L"
			!artic_visual_name[70] := "Center R"
			!artic_visual_name[71] := "Rimshot"
			!artic_visual_name[72] := "Rim ONLY"
			!artic_visual_name[73] := "Brush TAP"  	
			!artic_visual_name[74] := "Brush DIG"  	
			
		{Cymbal 1}
			!artic_visual_name[75] := "Tip"
			!artic_visual_name[76] := "Edge"
			!artic_visual_name[77] := "Bell"
			!artic_visual_name[78] := "Choke"
			!artic_visual_name[79] := "Brush"
			
		{Cymbal 2}
			!artic_visual_name[80] := "Tip"
			!artic_visual_name[81] := "Edge"
			!artic_visual_name[82] := ""
			!artic_visual_name[83] := ""
			!artic_visual_name[84] := ""
			
		{Cymbal 3}
			!artic_visual_name[85] := "Bell"
			!artic_visual_name[86] := "Tip"
			!artic_visual_name[87] := ""
			!artic_visual_name[88] := ""
			!artic_visual_name[89] := ""
			!artic_visual_name[90] := ""
			
		{Cymbal 4}
			!artic_visual_name[91] := "Edge"
			!artic_visual_name[92] := "Tip"
			!artic_visual_name[93] := "Bell"
			!artic_visual_name[94] := "Choke"
			
		{Cymbal 5}
			!artic_visual_name[95] := "Edge"
			!artic_visual_name[96] := "Tip"
			!artic_visual_name[97] := "Bell"
			!artic_visual_name[98] := "Choke"
			
		{Cymbal 6}
			!artic_visual_name[99] := "Edge"
			!artic_visual_name[100] := "Tip"
			!artic_visual_name[101] := "Bell"
			!artic_visual_name[102] := "Choke"
			
		{Cymbal 7}
			!artic_visual_name[103] := "Edge"
			!artic_visual_name[104] := "Tip"
			!artic_visual_name[105] := "Bell"
			!artic_visual_name[106] := "Choke"
			
		{constants that are to be set per kit}
		{Perc A - }
			!artic_visual_name[107] := "Hit 1"
			!artic_visual_name[108] := "Hit 2"
			!artic_visual_name[109] := ""
			!artic_visual_name[110] := ""
		
		{Perc B - }
			!artic_visual_name[111] := "Hit 1"
			!artic_visual_name[112] := "Hit 2"
			!artic_visual_name[113] := ""
			!artic_visual_name[114] := ""
			
		{Perc C - }
			!artic_visual_name[115] := "Hit 1"	
			!artic_visual_name[116] := "Hit 2"
			!artic_visual_name[117] := ""

		{Perc D - }	
			!artic_visual_name[118] := "Hit 1"
			!artic_visual_name[119] := ""
			!artic_visual_name[120] := ""
		{Perc 5 - Chopper}
			!artic_visual_name[121] := "Hit 1"
			!artic_visual_name[122] := "Hit 2"

		declare !PERC_A_ARTIC_NAMES[8]
				!PERC_A_ARTIC_NAMES[0] := "LO CONGA"
				!PERC_A_ARTIC_NAMES[1] := "Hi CONGA"
				!PERC_A_ARTIC_NAMES[2] := "LO BONGO"
				!PERC_A_ARTIC_NAMES[3] := "Hi BONGO"
				!PERC_A_ARTIC_NAMES[4] := "COWBELL 1"
				!PERC_A_ARTIC_NAMES[5] := "COWBELL 2"
				!PERC_A_ARTIC_NAMES[6] := "COWBELL 3"
				!PERC_A_ARTIC_NAMES[7] := "COWBELL 4"
		declare !PERC_B_ARTIC_NAMES[8]
				!PERC_B_ARTIC_NAMES[0] := "WOODBLOCK 1"
				!PERC_B_ARTIC_NAMES[1] := "WOODBLOCK 2"
				!PERC_B_ARTIC_NAMES[2] := "SINGLE SNAPS"
				!PERC_B_ARTIC_NAMES[3] := "MULTI SNAPS"
				!PERC_B_ARTIC_NAMES[4] := "TRIANGLE 1"
				!PERC_B_ARTIC_NAMES[5] := "TRIANGLE 2"
				!PERC_B_ARTIC_NAMES[6] := "TAMBOURINE 1"
				!PERC_B_ARTIC_NAMES[7] := "TAMBOURINE 2"
		declare !PERC_C_ARTIC_NAMES[8]
				!PERC_C_ARTIC_NAMES[0] := "WOODBLOCK 3"
				!PERC_C_ARTIC_NAMES[1] := "WOODBLOCK 4"
				!PERC_C_ARTIC_NAMES[2] := "SINGLE CLAPS"
				!PERC_C_ARTIC_NAMES[3] := "MULTI CLAPS"
				!PERC_C_ARTIC_NAMES[4] := "SHAKER 1"
				!PERC_C_ARTIC_NAMES[5] := "SHAKER 2"
				!PERC_C_ARTIC_NAMES[6] := "TAMBOURINE 3"
				!PERC_C_ARTIC_NAMES[7] := "TAMBOURINE 4"
		declare !PERC_D_ARTIC_NAMES[4]
				!PERC_D_ARTIC_NAMES[0] := "CABASA"
				!PERC_D_ARTIC_NAMES[1] := "STICKS"
				!PERC_D_ARTIC_NAMES[2] := "FINGER CYMBAL"
				!PERC_D_ARTIC_NAMES[3] := "SHAKER 3"
		declare !PERC_E_ARTIC_NAMES[8]
				!PERC_E_ARTIC_NAMES[0] := "AGOGO 1"
				!PERC_E_ARTIC_NAMES[1] := "AGOGO 2"
				!PERC_E_ARTIC_NAMES[2] := "TRIANGLE 3"
				!PERC_E_ARTIC_NAMES[3] := "TRIANGLE 4"
				!PERC_E_ARTIC_NAMES[4] := "PANDEIRO 1"
				!PERC_E_ARTIC_NAMES[5] := "PANDEIRO 2"
				!PERC_E_ARTIC_NAMES[6] := "SHAKER 4"
				!PERC_E_ARTIC_NAMES[7] := "SHAKER 5"	


	{/constants that are to be set per kit}

	{Declarations}
	declare ui_menu $current_mapping_preset_mnu
	declare ui_menu $instruments_mnu
	declare ui_menu $articulations_mnu
	declare ui_slider $active_key_sld (0, 127)
	declare ui_button $prev_preset_btn
	declare ui_button $next_preset_btn
	declare ui_button $save_preset_btn
	declare ui_button $delete_preset_btn
	declare ui_button $sel_by_midi_btn
	declare $midi_select_flag
	declare ui_button $active_btn_key_up
	declare ui_button $active_btn_key_dn
	declare ui_text_edit @current_preset_name
	{/Declarations}

	make_instr_persistent($current_mapping_preset_mnu)
	make_instr_persistent($instruments_mnu)
	make_instr_persistent($articulations_mnu)
	make_instr_persistent($active_key_sld)

	{ui_ids}
	declare %mapping_id[14]
	%mapping_id[0] := get_ui_id($current_mapping_preset_mnu)
	%mapping_id[1] := get_ui_id($instruments_mnu)
	%mapping_id[2] := get_ui_id($articulations_mnu)
	%mapping_id[3] := get_ui_id($active_key_sld)
	%mapping_id[4] := get_ui_id($prev_preset_btn)
	%mapping_id[5] := get_ui_id($next_preset_btn)
	%mapping_id[6] := get_ui_id($save_preset_btn)
	%mapping_id[7] := get_ui_id($delete_preset_btn)
	%mapping_id[8] := get_ui_id($sel_by_midi_btn)
	%mapping_id[9] := get_ui_id($active_btn_key_up)
	%mapping_id[10] := get_ui_id($active_btn_key_dn)
	%mapping_id[11] := get_ui_id(@current_preset_name)
	{/ui_ids}
	
	{Help Text}
	set_control_par_str(%mapping_id[0],$CONTROL_PAR_HELP,"Mapping Preset: Use this control to select one of the Mapping Presets. You can also click on the name of the preset to type in a new one.")
	set_control_par_str(%mapping_id[1],$CONTROL_PAR_HELP,"Instrument: Here you can see or edit the Instrument assigned to the Note displayed in the keyboard below.")
	set_control_par_str(%mapping_id[2],$CONTROL_PAR_HELP,"Articulation: Here you can see or edit the Articulation assigned to the Note displayed in the keyboard below.")
	set_control_par_str(%mapping_id[3],$CONTROL_PAR_HELP,"Note: Use this control to select the note you would like to work on. When you select a new note, you can see the Instrument & Articulation menus showing the sound currently mapped to that note.")
	set_control_par_str(%mapping_id[4],$CONTROL_PAR_HELP,"Previous Preset: Use this control to skip to the previous Mapping Preset.")
	set_control_par_str(%mapping_id[5],$CONTROL_PAR_HELP,"Next Preset: Use this control to skip to the next Mapping Preset.")
	set_control_par_str(%mapping_id[6],$CONTROL_PAR_HELP,"Save Preset: Click here to save any changes made to the current Mapping Preset. If it was a Factory Preset, a copy will be created in the user area. If it was a User Preset, and no name changes have been made, the preset will be overwritten.")
	set_control_par_str(%mapping_id[7],$CONTROL_PAR_HELP,"Delete Preset: Click here to delete the current Mapping Preset.")
	set_control_par_str(%mapping_id[8],$CONTROL_PAR_HELP,"Select by MIDI: Activate this control to enable selection of the Note through MIDI input. Use your MIDI keyboard to select the note to work on.")
	set_control_par_str(%mapping_id[9],$CONTROL_PAR_HELP,"Note: Use this control to select the note you would like to work on. When you select a new note, you can see the Instrument & Articulation menus showing the sound currently mapped to that note.")
	set_control_par_str(%mapping_id[10],$CONTROL_PAR_HELP,"Note: Use this control to select the note you would like to work on. When you select a new note, you can see the Instrument & Articulation menus showing the sound currently mapped to that note.")
	set_control_par_str(%mapping_id[11],$CONTROL_PAR_HELP,"Mapping Preset: Use this control to select one of the Mapping Presets. You can also click on the name of the preset to type in a new one.")
	{/Help Text}
	
	{Mouse Behaviour}
	set_control_par(%mapping_id[3], $CONTROL_PAR_MOUSE_BEHAVIOUR, -50)
	{/Mouse Behaviour}
	
	{Font IDs}
	set_control_par(%mapping_id[1], $CONTROL_PAR_FONT_TYPE, $FONT_2_ID)
	set_control_par(%mapping_id[2], $CONTROL_PAR_FONT_TYPE, $FONT_2_ID)
	set_control_par(%mapping_id[11], $CONTROL_PAR_FONT_TYPE, $FONT_2_ID)
	{/Font IDs}
	
	{Text Position & Alignment}
	set_control_par(%mapping_id[1], $CONTROL_PAR_TEXTPOS_Y, 8)
	set_control_par(%mapping_id[2], $CONTROL_PAR_TEXTPOS_Y, 8)
	{/Text Position & Alignment}
	
	{Position}
	set_control_par(%mapping_id[0],$CONTROL_PAR_POS_X,18)
	set_control_par(%mapping_id[0],$CONTROL_PAR_POS_Y,93)
	
	set_control_par(%mapping_id[1],$CONTROL_PAR_POS_X,114)
	set_control_par(%mapping_id[1],$CONTROL_PAR_POS_Y,163)
	
	set_control_par(%mapping_id[2],$CONTROL_PAR_POS_X,114)
	set_control_par(%mapping_id[2],$CONTROL_PAR_POS_Y,211)
	
	set_control_par(%mapping_id[3],$CONTROL_PAR_POS_X,55)
	set_control_par(%mapping_id[3],$CONTROL_PAR_POS_Y,278)
	
	set_control_par(%mapping_id[4],$CONTROL_PAR_POS_X,128)
	set_control_par(%mapping_id[4],$CONTROL_PAR_POS_Y,93)
	
	set_control_par(%mapping_id[5],$CONTROL_PAR_POS_X,144)
	set_control_par(%mapping_id[5],$CONTROL_PAR_POS_Y,93)

	set_control_par(%mapping_id[6],$CONTROL_PAR_POS_X,182)
	set_control_par(%mapping_id[6],$CONTROL_PAR_POS_Y,93)
	
	set_control_par(%mapping_id[7],$CONTROL_PAR_POS_X,161)
	set_control_par(%mapping_id[7],$CONTROL_PAR_POS_Y,93)
	
	set_control_par(%mapping_id[8],$CONTROL_PAR_POS_X,41)
	set_control_par(%mapping_id[8],$CONTROL_PAR_POS_Y,315)
	
	set_control_par(%mapping_id[9],$CONTROL_PAR_POS_X,52)
	set_control_par(%mapping_id[9],$CONTROL_PAR_POS_Y,265)
	
	set_control_par(%mapping_id[10],$CONTROL_PAR_POS_X,52)
	set_control_par(%mapping_id[10],$CONTROL_PAR_POS_Y,290)
	
	set_control_par(%mapping_id[11],$CONTROL_PAR_POS_X,23)
	set_control_par(%mapping_id[11],$CONTROL_PAR_POS_Y,97)
	{/Position}
	
	{Size}		
	set_control_par(%mapping_id[0],$CONTROL_PAR_WIDTH,90)

	set_control_par(%mapping_id[1],$CONTROL_PAR_WIDTH,179)
	
	set_control_par(%mapping_id[2],$CONTROL_PAR_WIDTH,179)
	
	set_control_par(%mapping_id[4],$CONTROL_PAR_WIDTH,17)
	set_control_par(%mapping_id[4],$CONTROL_PAR_HEIGHT,21)
	
	set_control_par(%mapping_id[5],$CONTROL_PAR_WIDTH,17)
	set_control_par(%mapping_id[5],$CONTROL_PAR_HEIGHT,21)

	set_control_par(%mapping_id[6],$CONTROL_PAR_WIDTH,21)
	set_control_par(%mapping_id[6],$CONTROL_PAR_HEIGHT,21)
	
	set_control_par(%mapping_id[7],$CONTROL_PAR_WIDTH,21)
	set_control_par(%mapping_id[7],$CONTROL_PAR_HEIGHT,21)
	
	set_control_par(%mapping_id[8],$CONTROL_PAR_WIDTH,73)
	set_control_par(%mapping_id[8],$CONTROL_PAR_HEIGHT,30)

	set_control_par(%mapping_id[9],$CONTROL_PAR_WIDTH,50)
	set_control_par(%mapping_id[9],$CONTROL_PAR_HEIGHT,13)
	
	set_control_par(%mapping_id[10],$CONTROL_PAR_WIDTH,50)
	set_control_par(%mapping_id[10],$CONTROL_PAR_HEIGHT,13)
	
	set_control_par(%mapping_id[11],$CONTROL_PAR_WIDTH,85)
	set_control_par(%mapping_id[11],$CONTROL_PAR_HEIGHT,13)
	{/Size}
	
	{Pictures}
	set_control_par_str(%mapping_id[0],$CONTROL_PAR_PICTURE,"settings-midi-preset-menu")
	set_control_par_str(%mapping_id[1],$CONTROL_PAR_PICTURE,"settings-menu"){settings-menu}
	set_control_par_str(%mapping_id[2],$CONTROL_PAR_PICTURE,"settings-menu")
	set_control_par_str(%mapping_id[3],$CONTROL_PAR_PICTURE,"NID_options_slider_C-2-to-G8")
	set_control_par_str(%mapping_id[4],$CONTROL_PAR_PICTURE,"settings-midi-preset-prev-btn")
	set_control_par_str(%mapping_id[5],$CONTROL_PAR_PICTURE,"settings-midi-preset-next-btn")
	set_control_par_str(%mapping_id[6],$CONTROL_PAR_PICTURE,"settings-midi-preset-save-btn")
	set_control_par_str(%mapping_id[7],$CONTROL_PAR_PICTURE,"settings-midi-preset-delete-btn")
	set_control_par_str(%mapping_id[8],$CONTROL_PAR_PICTURE,"v1_2_NID_options_btn_select_by_midi")
	set_control_par_str(%mapping_id[9],$CONTROL_PAR_PICTURE,"settings-up-btn")
	set_control_par_str(%mapping_id[10],$CONTROL_PAR_PICTURE,"settings-down-btn")
	{/Pictures}
	
	{Text}
	set_control_par_str(%mapping_id[4],$CONTROL_PAR_TEXT,"")
	set_control_par_str(%mapping_id[5],$CONTROL_PAR_TEXT,"")
	set_control_par_str(%mapping_id[6],$CONTROL_PAR_TEXT,"")
	set_control_par_str(%mapping_id[7],$CONTROL_PAR_TEXT,"")
	set_control_par_str(%mapping_id[8],$CONTROL_PAR_TEXT,"")
	set_control_par_str(%mapping_id[9],$CONTROL_PAR_TEXT,"")
	set_control_par_str(%mapping_id[10],$CONTROL_PAR_TEXT,"")
	{/Text}
	
	{Other}
	set_control_par(%mapping_id[00], $CONTROL_PAR_TEXTPOS_Y, 20)
	set_control_par(%mapping_id[03], $CONTROL_PAR_HIDE,16)
	set_control_par(%mapping_id[08], $CONTROL_PAR_HIDE, 16)
	set_control_par(%mapping_id[09], $CONTROL_PAR_HIDE,16)
	set_control_par(%mapping_id[10], $CONTROL_PAR_HIDE,16)
	{/Other}		
	
	{Persistency}
	make_persistent($current_mapping_preset_mnu)
	make_persistent($sel_by_midi_btn)
	make_persistent($midi_select_flag)
	read_persistent_var($midi_select_flag)
	{/Persistency}
	
	{Menu Initializations}
	{$current_mapping_preset_mnu}
	add_menu_item($current_mapping_preset_mnu, "Default", 0)
	add_menu_item($current_mapping_preset_mnu, "GM", 1)
	add_menu_item($current_mapping_preset_mnu, "V-Drums TD-12/20", 2)
	add_menu_item($current_mapping_preset_mnu, "V-Drums TD-3/6/8", 3)
	add_menu_item($current_mapping_preset_mnu, "DrumIt Five", 4)
	add_menu_item($current_mapping_preset_mnu, "EZDrummer", 5)
	add_menu_item($current_mapping_preset_mnu, "Superior Drummer", 6)
	add_menu_item($current_mapping_preset_mnu, "BFD", 7)
	add_menu_item($current_mapping_preset_mnu, "iMap", 8)
	add_menu_item($current_mapping_preset_mnu, "Addictive Drums", 9)
	add_menu_item($current_mapping_preset_mnu, "Studio Drummer", 10)
	add_menu_item($current_mapping_preset_mnu, "---------", 11)
	
	$count_1 := $NUM_FACTORY_PRESETS + 1
	while ($count_1 < $NUM_FACTORY_PRESETS + $MAX_NUM_USER_PRESETS + 1)
		add_menu_item($current_mapping_preset_mnu, $count_1, $count_1)
		inc($count_1)
	end while
	
	read_persistent_var(%DL_num_user_presets)
	read_persistent_var(%DL_user_mapping_data)
	
	$load_num_user_presets_id	:= load_array(%DL_num_user_presets, 1)
	$load_user_mapping_data_id	:= load_array(%DL_user_mapping_data, 1)
	$load_user_mapping_names_id	:= load_array(!DL_user_mapping_names, 1)
	
	read_persistent_var($current_mapping_preset_mnu)
		
	$count_1 := 0
	if (%DL_num_user_presets[0] > 0)
		while ($count_1 < %DL_num_user_presets[0])
			set_menu_item_str(%mapping_id[0], $count_1 + $NUM_FACTORY_PRESETS + 1, !DL_user_mapping_names[$count_1])
			set_menu_item_visibility(%mapping_id[0], $count_1 + $NUM_FACTORY_PRESETS + 1, 1)
			inc($count_1)
		end while
	else
		if ($current_mapping_preset_mnu > $NUM_FACTORY_PRESETS - 1)
			$current_mapping_preset_mnu := $NUM_FACTORY_PRESETS - 1
		end if
		set_menu_item_visibility(%mapping_id[0], 11, 0)
	end if
	
	while ($count_1 < $MAX_NUM_USER_PRESETS)
		set_menu_item_visibility(%mapping_id[0], $count_1 + $NUM_FACTORY_PRESETS + 1, 0)
		inc($count_1)
	end while
	
	if ($current_mapping_preset_mnu < $NUM_FACTORY_PRESETS)
		set_control_par_str(%mapping_id[7], $CONTROL_PAR_PICTURE, "settings-midi-preset-delete-btn-disabled"){NID_options_btn_  preset_delete_inactive}
	else
		set_control_par_str(%mapping_id[7], $CONTROL_PAR_PICTURE, "settings-midi-preset-delete-btn")
	end if
	
	@current_preset_name := get_menu_item_str(%mapping_id[0], $current_mapping_preset_mnu)
	{/$current_mapping_preset_mnu}
	
	{Initial Mapping}
	$active_key_sld := 36
	{%mode_velocity_key[$active_key_sld]}
	
	{make_persistent(%current_mapping_data)}
	{read_persistent_var(%current_mapping_data)}
	make_instr_persistent(%current_mapping_data)

	$count_1 := 0
	while ($count_1 < 128)
		if (%current_mapping_data[$count_1] > -1)
			%inverse_mapping_data[%current_mapping_data[$count_1]] := $count_1
		end if
		inc($count_1)
	end while

	{make_instr_persistent(%inverse_mapping_data)}
	
	pgs_create_key(MAPPING, 128)
	pgs_create_key(CUR_MAPPING, 128)
	
	pgs_set_key_val(COMMAND, 0, -1)
	$count_1 := 0
	while ($count_1 < 128)
		pgs_set_key_val(MAPPING, 	 $count_1, %inverse_mapping_data[$count_1])
		pgs_set_key_val(CUR_MAPPING, $count_1, %current_mapping_data[$count_1])
		inc($count_1)
	end while
	pgs_set_key_val(COMMAND, 0, 6)
	{/Initial Mapping}
	
	{$instruments_mnu}				
	$count_1 := 0
	while ($count_1 < 20)
		if (%NUM_DIR_MICS[$count_1] > -1)
			add_menu_item($instruments_mnu, !INSTRUMENT_NAMES[$count_1]  & " ", $count_1)
		end if
		inc($count_1)
	end while
	
	add_menu_item($instruments_mnu, "(None) ", -1)

	if (%current_mapping_data[$active_key_sld] > -1 and %KEY_USED[%current_mapping_data[$active_key_sld]] = 1)
		$instruments_mnu := %which_key_to_which_inst[%current_mapping_data[$active_key_sld]]
		set_control_par_str(%mapping_id[1], $CONTROL_PAR_PICTURE, !INSTRUMENT_PICS[$instruments_mnu])
		select ($instruments_mnu)
			case $KICK_ID
				set_menu_item_str(%mapping_id[1],%actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_KICK, 0) + 1))
			case $SNARE_ID
				set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_SNARE, 0) + 1))
			case $HH_ID
				set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_HIHAT, 0) + 1))
			case $TOM1_ID
				set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_TOM1, 0) + 1))
			case $TOM2_ID
				set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_TOM2, 0) + 1))
			case $TOM3_ID
				set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_TOM3, 0) + 1))
			case $CYMB1_ID
				set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_CYMB1, 0) + 1))
			case $CYMB2_ID
				set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_CYMB2, 0) + 1))
			case $CYMB3_ID
				set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_CYMB3, 0) + 1))
			case $PERC1_ID
				set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_PERC1, 0) + 1))
			case $PERC2_ID
				set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_PERC2, 0) + 1))
			case $PERC3_ID
				set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_PERC3, 0) + 1))
			case $PERC4_ID
				set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_PERC4, 0) + 1))
			case $PERC5_ID
				set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_PERC5, 0) + 1))
		end select
	else
		$instruments_mnu := -1
		set_control_par_str(%mapping_id[1],$CONTROL_PAR_PICTURE,"settings-menu")
	end if
	{/$instruments_mnu}
	
	{$articulations_mnu}
	$count_1 := 0
	while ($count_1 < 20)
		add_menu_item($articulations_mnu, $count_1, $count_1)
		inc($count_1)
	end while
	
	$count_1 := 0
	if ($instruments_mnu = -1)
		set_menu_item_str(%mapping_id[2], $count_1, "(None)" & @ART_MENU_ALIGNMENT_HELPER)
		set_menu_item_value(%mapping_id[2], $count_1, -1)
		set_menu_item_visibility(%mapping_id[2], $count_1, 1)
		$articulations_mnu := -1
		inc($count_1)
	else
		$count_2 := %AC_INSTRUMENT_OFFSET[%which_key_to_which_inst[%current_mapping_data[$active_key_sld]]]
		while ($count_2 < %AC_INSTRUMENT_OFFSET[%which_key_to_which_inst[%current_mapping_data[$active_key_sld]] + 1])
			if (%KEY_USED[$count_2] > 0)
				set_menu_item_str(%mapping_id[2], $count_1, !ARTICULATION_NAMES[$count_2] & @ART_MENU_ALIGNMENT_HELPER)
				set_menu_item_value(%mapping_id[2], $count_1, $count_2)
				set_menu_item_visibility(%mapping_id[2], $count_1, 1)
				inc($count_1)
			end if
			inc($count_2)
		end while
		$articulations_mnu := %current_mapping_data[$active_key_sld]
		select ($instruments_mnu)
			case $PERC1_ID
				set_menu_item_str(%mapping_id[2],0, !PERC_A_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC1, 0) * 2])
				set_menu_item_str(%mapping_id[2],1, !PERC_A_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC1, 0) * 2 + 1])
			case $PERC2_ID
				set_menu_item_str(%mapping_id[2],0, !PERC_B_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC2, 0) * 2])
				set_menu_item_str(%mapping_id[2],1, !PERC_B_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC2, 0) * 2 + 1])
			case $PERC3_ID
				set_menu_item_str(%mapping_id[2],0, !PERC_C_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC3, 0) * 2])
				set_menu_item_str(%mapping_id[2],1, !PERC_C_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC3, 0) * 2 + 1])
			case $PERC4_ID
				set_menu_item_str(%mapping_id[2],0, !PERC_D_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC4, 0)])
			case $PERC5_ID
				set_menu_item_str(%mapping_id[2],0, !PERC_B_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC5, 0) * 2])
				set_menu_item_str(%mapping_id[2],1, !PERC_B_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC5, 0) * 2 + 1])
		end select
	end if

	make_instr_persistent($instruments_mnu)
	make_instr_persistent($articulations_mnu)
	
	while ($count_1 < 20)
		set_menu_item_visibility(%mapping_id[2], $count_1, 0)
		inc($count_1)
	end while		
	{/$articulations_mnu}
	{/Menu Initializations}
	
	{Default Values}
	set_control_par(%mapping_id[3], $CONTROL_PAR_DEFAULT_VALUE, 36)
	
	{/Control Group Mapping}

{Control Group "GUI Keyboard"1_}
	declare const $NUM_kb_NOTES		:= 36
	declare const $ANIM_FRAME_RATE	:= 2000
	declare const $MUTE				:= -1000000
	declare const $LEFT				:= 1
	declare const $RIGHT			:= 0
	declare const $KB_X_POS			:= 29
	declare const $KB_Y_POS			:= 236
	declare $direction
	declare $kb_count_1
	declare $kb_count_2
	declare $kb_count_3
	declare $kb_index
	declare $limit_down_flag
	declare $limit_up_flag

	pgs_create_key(SETTINS_FLAG, 1)
		
	declare ui_switch $octave_UP
    set_control_par_str (get_ui_id($octave_UP),$CONTROL_PAR_TEXT,"")
    set_control_par_str (get_ui_id($octave_UP),$CONTROL_PAR_PICTURE,"settings-keyboard-arrow-right")
        set_control_par (get_ui_id($octave_UP),$CONTROL_PAR_TEXT_ALIGNMENT,1)
        set_control_par (get_ui_id($octave_UP),$CONTROL_PAR_POS_X,528 + $KB_X_POS)
        set_control_par (get_ui_id($octave_UP),$CONTROL_PAR_POS_Y,32 + $KB_Y_POS)
        set_control_par (get_ui_id($octave_UP),$CONTROL_PAR_WIDTH,39)
        set_control_par (get_ui_id($octave_UP),$CONTROL_PAR_HEIGHT,100)

    declare ui_switch $octave_DOWN
    set_control_par_str (get_ui_id($octave_DOWN),$CONTROL_PAR_TEXT,"")
    set_control_par_str (get_ui_id($octave_DOWN),$CONTROL_PAR_PICTURE,"settings-keyboard-arrow-left")
        set_control_par (get_ui_id($octave_DOWN),$CONTROL_PAR_TEXT_ALIGNMENT,1)
        set_control_par (get_ui_id($octave_DOWN),$CONTROL_PAR_POS_X,9 + $KB_X_POS)
        set_control_par (get_ui_id($octave_DOWN),$CONTROL_PAR_POS_Y,32 + $KB_Y_POS)
        set_control_par (get_ui_id($octave_DOWN),$CONTROL_PAR_WIDTH,39)
        set_control_par (get_ui_id($octave_DOWN),$CONTROL_PAR_HEIGHT,100)

	declare polyphonic $note_index
	declare polyphonic $note_index_2
    declare polyphonic $anim_counter_1
    declare polyphonic $anim_counter_2
    declare polyphonic $break_while := 0

    declare $blip_id
    declare $note_counter

	declare !keys[12]
	!keys[0] := "C"
	!keys[1] := "C#"
	!keys[2] := "D"
	!keys[3] := "D#"
	!keys[4] := "E"
	!keys[5] := "F"
	!keys[6] := "F#"
	!keys[7] := "G"
	!keys[8] := "G#"
	!keys[9] := "A"
	!keys[10] := "A#"
	!keys[11] := "B"
	
	declare ui_switch $C_1
	declare ui_switch $D_1
	declare ui_switch $E_1
	declare ui_switch $F_1
	declare ui_switch $G_1
	declare ui_switch $A_1
	declare ui_switch $B_1
	declare ui_switch $C_2
	declare ui_switch $D_2
	declare ui_switch $E_2
	declare ui_switch $F_2
	declare ui_switch $G_2
	declare ui_switch $A_2
	declare ui_switch $B_2
	declare ui_switch $C_3
	declare ui_switch $D_3
	declare ui_switch $E_3
	declare ui_switch $F_3
	declare ui_switch $G_3
	declare ui_switch $A_3
	declare ui_switch $B_3
	declare ui_switch $Cshrp_1
	declare ui_switch $Dshrp_1
	declare ui_switch $Fshrp_1
	declare ui_switch $Gshrp_1
	declare ui_switch $Ashrp_1
	declare ui_switch $Cshrp_2
	declare ui_switch $Dshrp_2
	declare ui_switch $Fshrp_2
	declare ui_switch $Gshrp_2
	declare ui_switch $Ashrp_2
	declare ui_switch $Cshrp_3
	declare ui_switch $Dshrp_3
	declare ui_switch $Fshrp_3
	declare ui_switch $Gshrp_3
	declare ui_switch $Ashrp_3
	
	declare %kb_id[$NUM_kb_NOTES]
			%kb_id[00] := get_ui_id($C_1)
			%kb_id[01] := get_ui_id($D_1)
			%kb_id[02] := get_ui_id($E_1)
			%kb_id[03] := get_ui_id($F_1)
			%kb_id[04] := get_ui_id($G_1)
			%kb_id[05] := get_ui_id($A_1)
			%kb_id[06] := get_ui_id($B_1)
			%kb_id[07] := get_ui_id($C_2)
			%kb_id[08] := get_ui_id($D_2)
			%kb_id[09] := get_ui_id($E_2)
			%kb_id[10] := get_ui_id($F_2)
			%kb_id[11] := get_ui_id($G_2)
			%kb_id[12] := get_ui_id($A_2)
			%kb_id[13] := get_ui_id($B_2)
			%kb_id[14] := get_ui_id($C_3)
			%kb_id[15] := get_ui_id($D_3)
			%kb_id[16] := get_ui_id($E_3)
			%kb_id[17] := get_ui_id($F_3)
			%kb_id[18] := get_ui_id($G_3)
			%kb_id[19] := get_ui_id($A_3)
			%kb_id[20] := get_ui_id($B_3)
			%kb_id[21] := get_ui_id($Cshrp_1)
			%kb_id[22] := get_ui_id($Dshrp_1)
			%kb_id[23] := get_ui_id($Fshrp_1)
			%kb_id[24] := get_ui_id($Gshrp_1)
			%kb_id[25] := get_ui_id($Ashrp_1)
			%kb_id[26] := get_ui_id($Cshrp_2)
			%kb_id[27] := get_ui_id($Dshrp_2)
			%kb_id[28] := get_ui_id($Fshrp_2)
			%kb_id[29] := get_ui_id($Gshrp_2)
			%kb_id[30] := get_ui_id($Ashrp_2)
			%kb_id[31] := get_ui_id($Cshrp_3)
			%kb_id[32] := get_ui_id($Dshrp_3)
			%kb_id[33] := get_ui_id($Fshrp_3)
			%kb_id[34] := get_ui_id($Gshrp_3)
			%kb_id[35] := get_ui_id($Ashrp_3)
	
	declare !kb_pics[$NUM_kb_NOTES]
	$kb_count_1 := 0
	while ($kb_count_1 < $NUM_kb_NOTES)
		if ($kb_count_1 < 21)
			if ($kb_count_1 = 0 or $kb_count_1 = 3 or $kb_count_1 = 7 or $kb_count_1 = 10 or ...
				 $kb_count_1 = 14 or $kb_count_1 = 17)
				!kb_pics[$kb_count_1] := "keyboard-CF-btn"		
			end if
			if ($kb_count_1 = 1 or $kb_count_1 = 8 or $kb_count_1 = 15)
				!kb_pics[$kb_count_1] := "keyboard-D-btn"		
			end if
			if ($kb_count_1 = 2 or $kb_count_1 = 6 or $kb_count_1 = 9 or $kb_count_1 = 13 or ...
				 $kb_count_1 = 16 or $kb_count_1 = 20)
				!kb_pics[$kb_count_1] := "keyboard-EB-btn"		
			end if
			if ($kb_count_1 = 4 or $kb_count_1 = 11 or $kb_count_1 = 18)
				!kb_pics[$kb_count_1] := "keyboard-G-btn"		
			end if
			if ($kb_count_1 = 5 or $kb_count_1 = 12 or $kb_count_1 = 19)
				!kb_pics[$kb_count_1] := "keyboard-A-btn"		
			end if
		else
			!kb_pics[$kb_count_1] := "keyboard-black-btn"
		end if
		inc($kb_count_1)
	end while

    declare !kb_txt[$NUM_kb_NOTES]
	declare !kb_help[$NUM_kb_NOTES]
	
	$kb_count_1 := 0
	while ($kb_count_1 < 36)
		!kb_help[$kb_count_1] := "Click on a note to change the instrument or articulation"
		 !kb_txt[$kb_count_1] := ""
		inc($kb_count_1)
	end while

	declare %kb_CONTROL_PAR[$NUM_kb_NOTES * 07] := (...
			   {X}  {Y}  {W}  {H}  {DfVl} {Hde}  {AUTO}...
	{00-C1}	   45,  32,  25,  100,  1,     0,     1,...
	{01-D1}	   68,  32,  25,  100,  1,     0,     1,...
	{02-E1}	   91,  32,  25,  100,  1,     0,     1,...
	{03-F1}   114,  32,  25,  100,  1,     0,     1,...
	{04-G1}   137,  32,  25,  100,  1,     0,     1,...
	{05-A1}   160,  32,  25,  100,  1,     0,     1,...
	{06-B1}   183,  32,  25,  100,  1,     0,     1,...
	{07-C2}   206,  32,  25,  100,  1,     0,     1,...
	{08-D2}   229,  32,  25,  100,  1,     0,     1,...
	{09-E2}   252,  32,  25,  100,  1,     0,     1,...
	{10-F2}   275,  32,  25,  100,  1,     0,     1,...
	{11-G2}   298,  32,  25,  100,  1,     0,     1,...
	{12-A2}   321,  32,  25,  100,  1,     0,     1,...
	{13-B2}   344,  32,  25,  100,  1,     0,     1,...
	{14-C3}   367,  32,  25,  100,  1,     0,     1,...
	{15-D3}   390,  32,  25,  100,  1,     0,     1,...
	{16-E3}   413,  32,  25,  100,  1,     0,     1,...
	{17-F3}   436,  32,  25,  100,  1,     0,     1,...
	{18-G3}   459,  32,  25,  100,  1,     0,     1,...
	{19-A3}   482,  32,  25,  100,  1,     0,     1,...
	{20-B3}   505,  32,  25,  100,  1,     0,     1,...
	{21-C#1}   59,  32,  15,   57,  0,     0,     1,...
	{22-D#1}   88,  32,  15,   57,  0,     0,     1,...
	{23-F#1}  128,  32,  15,   57,  0,     0,     1,...
	{24-G#1}  154,  32,  15,   57,  0,     0,     1,...
	{25-A#1}  180,  32,  15,   57,  0,     0,     1,...
	{26-C#2}  220,  32,  15,   57,  0,     0,     1,...
	{27-D#2}  249,  32,  15,   57,  0,     0,     1,...
	{28-F#2}  289,  32,  15,   57,  0,     0,     1,...
	{29-G#2}  315,  32,  15,   57,  0,     0,     1,...
	{30-A#2}  341,  32,  15,   57,  0,     0,     1,...
	{31-C#3}  381,  32,  15,   57,  0,     0,     1,...
	{32-D#3}  410,  32,  15,   57,  0,     0,     1,...
	{33-F#3}  450,  32,  15,   57,  0,     0,     1,...
	{34-G#3}  476,  32,  15,   57,  0,     0,     1,...
	{35-A#3}  502,  32,  15,   57,  0,     0,     1)

	declare %kb_GUI_remap[36] := (...  
								{C  C#   D  D#   E   F  F#   G  G#   A  A#   B}...
								 0, 21,  1, 22,  2,  3, 23,  4, 24,  5, 25,  6,...
								 7, 26,  8, 27,  9, 10, 28, 11, 29, 12, 30, 13,...
								14, 31, 15, 32, 16, 17, 33, 18, 34, 19, 35, 20)

	declare !oct_lbl[11]
			!oct_lbl[00] := "-2"
			!oct_lbl[01] := "-1"
			!oct_lbl[02] := "0"
			!oct_lbl[03] := "1"
			!oct_lbl[04] := "2"
			!oct_lbl[05] := "3"
			!oct_lbl[06] := "4"
			!oct_lbl[07] := "5"
			!oct_lbl[08] := "6"
			!oct_lbl[09] := "7"
			!oct_lbl[10] := "8"

	declare !folded_oct_lbl[09]
			!folded_oct_lbl[00] := ""
			!folded_oct_lbl[01] := "1"
			!folded_oct_lbl[02] := "2"
			!folded_oct_lbl[03] := "3"
			!folded_oct_lbl[04] := "4"
			!folded_oct_lbl[05] := "5"
			!folded_oct_lbl[06] := "6"
			!folded_oct_lbl[07] := "7"
			!folded_oct_lbl[08] := "8"


	$kb_count_1 := 0
	while ($kb_count_1 < $NUM_kb_NOTES)
	set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_PICTURE,        !kb_pics[$kb_count_1])
	set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_HELP,           !kb_help[$kb_count_1])
	set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
		set_control_par(%kb_id[$kb_count_1],$CONTROL_PAR_FONT_TYPE, 	  $FONT_2_ID)
		set_control_par(%kb_id[$kb_count_1],$CONTROL_PAR_POS_X,           %kb_CONTROL_PAR[00 + ($kb_count_1 * 07)] + $KB_X_POS)
		set_control_par(%kb_id[$kb_count_1],$CONTROL_PAR_POS_Y,           %kb_CONTROL_PAR[01 + ($kb_count_1 * 07)] + $KB_Y_POS)
		set_control_par(%kb_id[$kb_count_1],$CONTROL_PAR_WIDTH,           %kb_CONTROL_PAR[02 + ($kb_count_1 * 07)])
		set_control_par(%kb_id[$kb_count_1],$CONTROL_PAR_HEIGHT,          %kb_CONTROL_PAR[03 + ($kb_count_1 * 07)])
		set_control_par(%kb_id[$kb_count_1],$CONTROL_PAR_DEFAULT_VALUE,   %kb_CONTROL_PAR[04 + ($kb_count_1 * 07)])
		set_control_par(%kb_id[$kb_count_1],$CONTROL_PAR_HIDE,            %kb_CONTROL_PAR[05 + ($kb_count_1 * 07)])
		set_control_par(%kb_id[$kb_count_1],$CONTROL_PAR_ALLOW_AUTOMATION,%kb_CONTROL_PAR[06 + ($kb_count_1 * 07)])
		set_control_par(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT_ALIGNMENT,  4)
		set_control_par(%kb_id[$kb_count_1],$CONTROL_PAR_TEXTPOS_Y,      77)
	inc($kb_count_1)
	end while

	declare ui_label $C_Octave_lbl_1(1,1)
	declare ui_label $C_Octave_lbl_2(1,1)
	declare ui_label $C_Octave_lbl_3(1,1)

	declare %oct_lbl_id[3]
	%oct_lbl_id[0] := get_ui_id($C_Octave_lbl_1)
	%oct_lbl_id[1] := get_ui_id($C_Octave_lbl_2)
	%oct_lbl_id[2] := get_ui_id($C_Octave_lbl_3)


	$a := 0
	while ($a < num_elements(%oct_lbl_id) )
		set_control_par_str(%oct_lbl_id[$a], $CONTROL_PAR_PICTURE, "settings-octaves")
		set_control_par_str(%oct_lbl_id[$a], $CONTROL_PAR_TEXT, "")
			set_control_par(%oct_lbl_id[$a], $CONTROL_PAR_POS_X, 50 + ($a * 161) + $KB_X_POS)
			set_control_par(%oct_lbl_id[$a], $CONTROL_PAR_POS_Y, 135 + $KB_Y_POS)
		inc($a)
	end while

	declare %white_keys[7] := (0, 2, 4, 5, 7, 9, 11)

	declare $octave_value := 2
	make_persistent($octave_value)
	read_persistent_var($octave_value)

	select ($octave_value)
		case 0
			$kb_count_1 := 0
			while ($kb_count_1 < $NUM_kb_NOTES)
			set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
				if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
					{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 0])}
					set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 0)
				end if
			inc($kb_count_1)
			end while
		case 1
			$kb_count_1 := 0
			while ($kb_count_1 < $NUM_kb_NOTES)
			set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
				if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
					{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 1])}
					set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 1)
				end if
			inc($kb_count_1)
			end while
		case 2
			$kb_count_1 := 0
			while ($kb_count_1 < $NUM_kb_NOTES)
			set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
				if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
					{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 2])}
					set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 2)
				end if
			inc($kb_count_1)
			end while
		case 3
			$kb_count_1 := 0
			while ($kb_count_1 < $NUM_kb_NOTES)
			set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
				if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
					{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 3])}
					set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 3)
				end if
			inc($kb_count_1)
			end while
		case 4
			$kb_count_1 := 0
			while ($kb_count_1 < $NUM_kb_NOTES)
			set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
				if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
					{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 4])}
					set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 4)
				end if
			inc($kb_count_1)
			end while
		case 5
			$kb_count_1 := 0
			while ($kb_count_1 < $NUM_kb_NOTES)
			set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
				if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
					{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 5])}
					set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 5)
				end if
			inc($kb_count_1)
			end while
		case 6
			$kb_count_1 := 0
			while ($kb_count_1 < $NUM_kb_NOTES)
			set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
				if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
					{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 6])}
					set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 6)
				end if
			inc($kb_count_1)
			end while
		case 7
			$kb_count_1 := 0
			while ($kb_count_1 < $NUM_kb_NOTES)
			set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
				if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
					{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 7])}
					set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 7)
				end if
			inc($kb_count_1)
			end while
		case 8
			$kb_count_1 := 0
			while ($kb_count_1 < $NUM_kb_NOTES)
			set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
				if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
					{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 8])}
					set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 8)
				end if
			inc($kb_count_1)
			end while
	end select
	{/Control Group "GUI Keyboard"}

{Control Group "PURGE SUSTEM"}
	declare ui_button $load_ALL
	declare ui_button $purge_UNUSED

	{make_persistent($load_ALL)
	make_persistent($purge_UNUSED)}
	{read_persistent_var($load_ALL)
	read_persistent_var($purge_UNUSED)}

	make_instr_persistent($load_ALL)
	make_instr_persistent($purge_UNUSED)
	
	pgs_create_key(PURGE_MODE, 1)
	pgs_set_key_val(PURGE_MODE, 0, $purge_UNUSED)	

	set_control_par_str(get_ui_id($load_ALL),$CONTROL_PAR_PICTURE,"settings-memory-btn")
	set_control_par_str(get_ui_id($purge_UNUSED),$CONTROL_PAR_PICTURE,"settings-memory-btn")
	set_control_par_str(get_ui_id($load_ALL),$CONTROL_PAR_TEXT,"")
	set_control_par_str(get_ui_id($purge_UNUSED),$CONTROL_PAR_TEXT,"")
	set_control_par(get_ui_id($load_ALL),$CONTROL_PAR_POS_X,82)
	set_control_par(get_ui_id($load_ALL),$CONTROL_PAR_POS_Y,457)	
	set_control_par(get_ui_id($load_ALL),$CONTROL_PAR_WIDTH,19)
	set_control_par(get_ui_id($load_ALL),$CONTROL_PAR_HEIGHT,19)
	set_control_par(get_ui_id($purge_UNUSED),$CONTROL_PAR_POS_X,340)
	set_control_par(get_ui_id($purge_UNUSED),$CONTROL_PAR_POS_Y,457)
	set_control_par(get_ui_id($purge_UNUSED),$CONTROL_PAR_WIDTH,19)
	set_control_par(get_ui_id($purge_UNUSED),$CONTROL_PAR_HEIGHT,19)
	{set_control_par(get_ui_id($load_ALL),$CONTROL_PAR_HIDE,16)	
	set_control_par(get_ui_id($purge_UNUSED),$CONTROL_PAR_HIDE,16)	}

{SOUND PRESET SYSTEM & CATEGORY MENU1_}
	{CATEGORY MENU}

		declare const $NUM_CATEGORIES		:= 7
		declare const $CAT_X_OFFSET			:= 100
		declare const $NUM_PRESET_CONTROLS	:= 11

		declare $arr_counter
		declare $arr_count_1
		declare $arr_count_2
		declare $arr_count_3
		declare $preset_helper
		declare $num_userpresets_id
		declare @empty_preset_text
		
		@empty_preset_text := "<Choose Preset...>"
		
		declare $safe_flag_1 := 1
		declare $safe_flag_2 := 1
		declare $safe_flag_3 := 1

		declare !category_names[$NUM_CATEGORIES]
				!category_names[0] := "SMOOTH                "
				!category_names[1] := "TIGHT"
				!category_names[2] := "FAT"
				!category_names[3] := "DIRTY"
				!category_names[4] := "SPECIAL"
				!category_names[5] := "RAW"
				!category_names[6] := "USER"

		declare ui_menu  $category_mnu
		declare ui_label $bank_name_lbl(1,1)

		declare %category_controls_id[02]
		%category_controls_id[00] := get_ui_id($category_mnu)
		%category_controls_id[01] := get_ui_id($bank_name_lbl)

		set_control_par_str(%category_controls_id[00],$CONTROL_PAR_PICTURE,"header-presetbank-btn")
			set_control_par(%category_controls_id[00],$CONTROL_PAR_TEXTPOS_Y,25)
			set_control_par(%category_controls_id[00],$CONTROL_PAR_FONT_TYPE,$FONT_1_ID)
			set_control_par(%category_controls_id[00],$CONTROL_PAR_WIDTH,20)
			set_control_par(%category_controls_id[00],$CONTROL_PAR_HEIGHT,28)
			move_control_px($category_mnu, 13, 12)

		set_control_par_str(%category_controls_id[01],$CONTROL_PAR_PICTURE,"header-presetbank-label"){header-presetbank-label}
		set_control_par_str(%category_controls_id[01],$CONTROL_PAR_TEXT,"")
			set_control_par(%category_controls_id[01],$CONTROL_PAR_POS_X,16)
			set_control_par(%category_controls_id[01],$CONTROL_PAR_POS_Y,14)
			set_control_par(%category_controls_id[01],$CONTROL_PAR_WIDTH,167)
			set_control_par(%category_controls_id[01],$CONTROL_PAR_HEIGHT,24)	

		$arr_count_1 := 0
		while($arr_count_1 < $NUM_CATEGORIES)
			add_menu_item($category_mnu,!category_names[$arr_count_1],$arr_count_1)
			inc($arr_count_1)
		end while

	{SOUND PRESET MENU}
		declare const $NUM_SOUND_CATEGORIES	:= 7 	{1-6 = FACTORY, 7 = USER}
		declare const $FACTORY_PRESET_CAT_1	:= 0
		declare const $FACTORY_PRESET_CAT_2	:= 1
		declare const $FACTORY_PRESET_CAT_3	:= 2
		declare const $FACTORY_PRESET_CAT_4	:= 3
		declare const $FACTORY_PRESET_CAT_5	:= 4
		declare const $FACTORY_PRESET_CAT_6	:= 5
		declare const $USER_PRESET_CAT		:= 6

		declare @user_sound_preset_name

		declare $Preset_Category
		make_persistent($Preset_Category)
		read_persistent_var($Preset_Category)

		declare $fact_menu_1_index
		declare $fact_menu_2_index
		declare $fact_menu_3_index
		declare $fact_menu_4_index
		declare $fact_menu_5_index
		declare $fact_menu_6_index
		declare $user_menu_index

		declare $sound_preset_load_id_1
		declare $sound_preset_load_id_2
		declare $sound_preset_load_id_3
		declare $sound_preset_load_id_4

		declare ui_menu   $user_sound_preset_menu_NEW
		declare $user_dummy_menu_id
		declare ui_menu   $fact_sound_preset_menu_1
		declare ui_menu   $fact_sound_preset_menu_2
		declare ui_menu   $fact_sound_preset_menu_3
		declare ui_menu   $fact_sound_preset_menu_4
		declare ui_menu   $fact_sound_preset_menu_5
		declare ui_menu   $fact_sound_preset_menu_6
		declare ui_menu   $user_sound_preset_menu
		declare ui_button $sound_preset_prev
		declare ui_button $sound_preset_next
		declare ui_button $sound_preset_save
		declare ui_button $sound_preset_delete
		
		declare %sound_preset_controls[$NUM_PRESET_CONTROLS]
		%sound_preset_controls[00] := get_ui_id($fact_sound_preset_menu_1)
		%sound_preset_controls[01] := get_ui_id($fact_sound_preset_menu_2)
		%sound_preset_controls[02] := get_ui_id($fact_sound_preset_menu_3)
		%sound_preset_controls[03] := get_ui_id($fact_sound_preset_menu_4)
		%sound_preset_controls[04] := get_ui_id($fact_sound_preset_menu_5)
		%sound_preset_controls[05] := get_ui_id($fact_sound_preset_menu_6)
		%sound_preset_controls[06] := get_ui_id($user_sound_preset_menu)
		%sound_preset_controls[07] := get_ui_id($sound_preset_prev)
		%sound_preset_controls[08] := get_ui_id($sound_preset_next)
		%sound_preset_controls[09] := get_ui_id($sound_preset_save)
		%sound_preset_controls[10] := get_ui_id($sound_preset_delete)
		$user_dummy_menu_id := get_ui_id($user_sound_preset_menu_NEW)
		
		$a := 0
		while ($a < 7)
			set_control_par_str(%sound_preset_controls[$a],$CONTROL_PAR_PICTURE,"header-preset-btn")
				set_control_par(%sound_preset_controls[$a],$CONTROL_PAR_POS_X,13)
				set_control_par(%sound_preset_controls[$a],$CONTROL_PAR_POS_Y,41)
				set_control_par(%sound_preset_controls[$a],$CONTROL_PAR_TEXTPOS_Y,5)
				set_control_par(%sound_preset_controls[$a],$CONTROL_PAR_FONT_TYPE,$FONT_1_ID)
				set_control_par(%sound_preset_controls[$a],$CONTROL_PAR_WIDTH,91)
				set_control_par(%sound_preset_controls[$a],$CONTROL_PAR_HEIGHT,24)
			inc($a)
		end while

		{dummy menu used for switching when no User Presets are present}
		set_control_par_str($user_dummy_menu_id,$CONTROL_PAR_PICTURE,"header-preset-btn-NO_PRESETS")
			set_control_par($user_dummy_menu_id,$CONTROL_PAR_POS_X,13)
			set_control_par($user_dummy_menu_id,$CONTROL_PAR_POS_Y,41)
			set_control_par($user_dummy_menu_id,$CONTROL_PAR_TEXTPOS_Y,5)
			set_control_par($user_dummy_menu_id,$CONTROL_PAR_FONT_TYPE,$FONT_1_ID)
			set_control_par($user_dummy_menu_id,$CONTROL_PAR_WIDTH,91)
			set_control_par($user_dummy_menu_id,$CONTROL_PAR_HEIGHT,24)
			set_control_par($user_dummy_menu_id,$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)

		$a := 7
		while ($a < 9)
			set_control_par_str(%sound_preset_controls[$a],$CONTROL_PAR_TEXT,"")
				set_control_par(%sound_preset_controls[$a],$CONTROL_PAR_POS_Y,41)
				set_control_par(%sound_preset_controls[$a],$CONTROL_PAR_WIDTH,18)
				set_control_par(%sound_preset_controls[$a],$CONTROL_PAR_HEIGHT,24)
			inc($a)
		end while
		set_control_par_str(%sound_preset_controls[07],$CONTROL_PAR_PICTURE,"header-preset-left-btn")
			set_control_par(%sound_preset_controls[07],$CONTROL_PAR_POS_X,128)
		set_control_par_str(%sound_preset_controls[08],$CONTROL_PAR_PICTURE,"header-preset-right-btn")
			set_control_par(%sound_preset_controls[08],$CONTROL_PAR_POS_X,144)
		
		$a := 9
		while ($a < 11)
			set_control_par_str(%sound_preset_controls[$a],$CONTROL_PAR_TEXT,"")
				set_control_par(%sound_preset_controls[$a],$CONTROL_PAR_POS_Y,41)
				set_control_par(%sound_preset_controls[$a],$CONTROL_PAR_WIDTH,21)
				set_control_par(%sound_preset_controls[$a],$CONTROL_PAR_HEIGHT,24)
			inc($a)
		end while
		set_control_par_str(%sound_preset_controls[09],$CONTROL_PAR_PICTURE,"header-preset-save-btn-disabled")
			set_control_par(%sound_preset_controls[09],$CONTROL_PAR_POS_X,182)
		set_control_par_str(%sound_preset_controls[10],$CONTROL_PAR_PICTURE,"header-preset-delete-btn-disabled"){NID_header_btn_delete}
			set_control_par(%sound_preset_controls[10],$CONTROL_PAR_POS_X,161)
		
		set_control_help($fact_sound_preset_menu_1,"Sound Preset Menu: Selects and loads settings for the whole instrument.")
		set_control_help($fact_sound_preset_menu_2,"Sound Preset Menu: Selects and loads settings for the whole instrument.")
		set_control_help($fact_sound_preset_menu_3,"Sound Preset Menu: Selects and loads settings for the whole instrument.")
		set_control_help($fact_sound_preset_menu_4,"Sound Preset Menu: Selects and loads settings for the whole instrument.")
		set_control_help($fact_sound_preset_menu_5,"Sound Preset Menu: Selects and loads settings for the whole instrument.")
		set_control_help($fact_sound_preset_menu_6,"Sound Preset Menu: Selects and loads settings for the whole instrument.")
		set_control_help($user_sound_preset_menu,"Sound Preset Menu: Selects and loads settings for the whole instrument.")
		set_control_help($user_sound_preset_menu_NEW,"Sound Preset Menu: Selects and loads settings for the whole instrument.")
		set_control_help($sound_preset_prev,"Previous Pattern Preset: Selects and loads settings for the whole array from the preset that is located before this one in the array preset menu.")
		set_control_help($sound_preset_next,"Next Pattern Preset: Selects and loads settings for the whole array from the preset that is located after this one in the array preset menu.")
		set_control_help($sound_preset_save,"Save Pattern Preset: Factory presets cannot be overwritten. If you save a factory preset it will be under the USER menu.")
		set_control_help($sound_preset_delete,"Delete Pattern Preset: Deletes the currently selected array preset. You cannot delete factory presets.")
		
		{xxx Factory Presets, xxx User Presets}
		declare const $TEMP_NUM_FACT_SOUND_PRESETS := 60
		declare const $NUM_PRESETS_PER_CAT		:= 10
		declare const $MAX_SOUND_FACT_PRESETS	:= 6 * $NUM_PRESETS_PER_CAT
		declare const $NUM_FACT_SOUND_PRESETS_1	:= $MAX_SOUND_FACT_PRESETS / 6
		declare const $NUM_FACT_SOUND_PRESETS_2	:= $MAX_SOUND_FACT_PRESETS / 6
		declare const $NUM_FACT_SOUND_PRESETS_3	:= $MAX_SOUND_FACT_PRESETS / 6
		declare const $NUM_FACT_SOUND_PRESETS_4	:= $MAX_SOUND_FACT_PRESETS / 6
		declare const $NUM_FACT_SOUND_PRESETS_5	:= $MAX_SOUND_FACT_PRESETS / 6
		declare const $NUM_FACT_SOUND_PRESETS_6	:= $MAX_SOUND_FACT_PRESETS / 6
		declare const $NUM_USER_SOUND_PRESETS	:= 70
		
		declare !fact_sound_preset_1_names[10]
		!fact_sound_preset_1_names[0] := "Smack That"
		!fact_sound_preset_1_names[1] := "Round and Tight"
		!fact_sound_preset_1_names[2] := "Huge Metallic"
		!fact_sound_preset_1_names[3] := "Dark Dry Room"
		!fact_sound_preset_1_names[4] := "RnB Ballad"
		!fact_sound_preset_1_names[5] := "Trap"
		!fact_sound_preset_1_names[6] := "Squish"
		!fact_sound_preset_1_names[7] := "Clean Power"
		!fact_sound_preset_1_names[8] := "Stereo Beauty"
		!fact_sound_preset_1_names[9] := "INIT"

		declare !fact_sound_preset_2_names[10]
		!fact_sound_preset_2_names[0] := "Dry Snap"
		!fact_sound_preset_2_names[1] := "Wood Chamber"
		!fact_sound_preset_2_names[2] := "Vintage Tape"
		!fact_sound_preset_2_names[3] := "SubClap"
		!fact_sound_preset_2_names[4] := "Power Ribbon"
		!fact_sound_preset_2_names[5] := "Diamond"
		!fact_sound_preset_2_names[6] := "Scud"
		!fact_sound_preset_2_names[7] := "Peppers"
		!fact_sound_preset_2_names[8] := "MD"
		!fact_sound_preset_2_names[9] := "Classic Break"

		declare !fact_sound_preset_3_names[10]
		!fact_sound_preset_3_names[0] := "Big Bright Room"
		!fact_sound_preset_3_names[1] := "Short Funk"
		!fact_sound_preset_3_names[2] := "Wet Dirty Pop"
		!fact_sound_preset_3_names[3] := "Salsa"
		!fact_sound_preset_3_names[4] := "Praise"
		!fact_sound_preset_3_names[5] := "Natural"
		!fact_sound_preset_3_names[6] := "Red Tape"
		!fact_sound_preset_3_names[7] := "Cleyed"
		!fact_sound_preset_3_names[8] := "Filthy"
		!fact_sound_preset_3_names[9] := "Mara"

		declare !fact_sound_preset_4_names[10]
		!fact_sound_preset_4_names[0] := "Hybrid"
		!fact_sound_preset_4_names[1] := "Shed"
		!fact_sound_preset_4_names[2] := "Rough"
		!fact_sound_preset_4_names[3] := "Rude Comp"
		!fact_sound_preset_4_names[4] := "Nasty"
		!fact_sound_preset_4_names[5] := "Char"
		!fact_sound_preset_4_names[6] := "Dusty"
		!fact_sound_preset_4_names[7] := "Blapp"
		!fact_sound_preset_4_names[8] := "Droyd"
		!fact_sound_preset_4_names[9] := "53rd Ave"

		declare !fact_sound_preset_5_names[10]
		!fact_sound_preset_5_names[0] := "Tape Drive"
		!fact_sound_preset_5_names[1] := "Early Days"
		!fact_sound_preset_5_names[2] := "Krack"
		!fact_sound_preset_5_names[3] := "Electro"
		!fact_sound_preset_5_names[4] := "SP"
		!fact_sound_preset_5_names[5] := "Vinyl"
		!fact_sound_preset_5_names[6] := "Robotic Break"
		!fact_sound_preset_5_names[7] := "Reduction"
		!fact_sound_preset_5_names[8] := "Tribal"
		!fact_sound_preset_5_names[9] := "Destroyer"

		declare !fact_sound_preset_6_names[10]
		!fact_sound_preset_6_names[0] := "Agressive Break"
		!fact_sound_preset_6_names[1] := "Electro Boom"
		!fact_sound_preset_6_names[2] := "Dead Dry"
		!fact_sound_preset_6_names[3] := "Plate Flex"
		!fact_sound_preset_6_names[4] := "So Far"
		!fact_sound_preset_6_names[5] := "Shadow"
		!fact_sound_preset_6_names[6] := "Room Sat"
		!fact_sound_preset_6_names[7] := "Trash Gate"
		!fact_sound_preset_6_names[8] := "Hiss"
		!fact_sound_preset_6_names[9] := "Brighter"

		declare %user_num_snd_Presets[1]
		declare %user_snd_preset_Ac_Group_PURGE [$NUM_USER_SOUND_PRESETS * $AC_NUM_GROUPS]
		declare %user_snd_preset_El_Group_PURGE [$NUM_USER_SOUND_PRESETS * $EL_NUM_GROUPS]
		declare !user_sound_preset_names[$NUM_USER_SOUND_PRESETS]
		
		read_persistent_var(%user_num_snd_Presets)
		read_persistent_var(%user_snd_preset_Ac_Group_PURGE)
		read_persistent_var(%user_snd_preset_El_Group_PURGE)
		
		%load_check_id[00] := load_array(%user_num_snd_Presets, 1)
		%load_check_id[01] := load_array(%user_snd_preset_Ac_Group_PURGE, 1)
		%load_check_id[02] := load_array(%user_snd_preset_El_Group_PURGE, 1)
		%load_check_id[03] := load_array(!user_sound_preset_names,1)

		
		declare $sound_preset_flag := 0
		make_persistent($sound_preset_flag)
		read_persistent_var($sound_preset_flag)
		
		make_persistent($category_mnu)
		read_persistent_var($category_mnu)
		set_control_par(%category_controls_id[01],$CONTROL_PAR_PICTURE_STATE,$category_mnu)
		make_persistent($fact_sound_preset_menu_1)
		read_persistent_var($fact_sound_preset_menu_1)
		make_persistent($fact_sound_preset_menu_2)
		read_persistent_var($fact_sound_preset_menu_2)
		make_persistent($fact_sound_preset_menu_3)
		read_persistent_var($fact_sound_preset_menu_3)
		make_persistent($fact_sound_preset_menu_4)
		read_persistent_var($fact_sound_preset_menu_4)
		make_persistent($fact_sound_preset_menu_5)
		read_persistent_var($fact_sound_preset_menu_5)
		make_persistent($fact_sound_preset_menu_6)
		read_persistent_var($fact_sound_preset_menu_6)
		make_persistent($user_sound_preset_menu)
		read_persistent_var($user_sound_preset_menu)
		make_persistent($user_sound_preset_menu_NEW)
		read_persistent_var($user_sound_preset_menu_NEW)

		{populate menu}
		$arr_count_1 := 0
		while($arr_count_1 < $NUM_FACT_SOUND_PRESETS_1)
			add_menu_item($fact_sound_preset_menu_1,!fact_sound_preset_1_names[$arr_count_1],$arr_count_1)
			inc($arr_count_1)
		end while
		while($arr_count_1 < $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_1)
			add_menu_item($fact_sound_preset_menu_2,!fact_sound_preset_2_names[$arr_count_1 - $NUM_FACT_SOUND_PRESETS_1],$arr_count_1)
			inc($arr_count_1)
		end while
		while($arr_count_1 < $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_1)
			add_menu_item($fact_sound_preset_menu_3,!fact_sound_preset_3_names[$arr_count_1 - $NUM_FACT_SOUND_PRESETS_2 - $NUM_FACT_SOUND_PRESETS_1],$arr_count_1)
			inc($arr_count_1)
		end while
		while($arr_count_1 < $NUM_FACT_SOUND_PRESETS_4 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_1)
			add_menu_item($fact_sound_preset_menu_4,!fact_sound_preset_4_names[$arr_count_1 - $NUM_FACT_SOUND_PRESETS_3 - $NUM_FACT_SOUND_PRESETS_2 - $NUM_FACT_SOUND_PRESETS_1],$arr_count_1)
			inc($arr_count_1)
		end while
		while($arr_count_1 < $NUM_FACT_SOUND_PRESETS_5 + $NUM_FACT_SOUND_PRESETS_4 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_1)
			add_menu_item($fact_sound_preset_menu_5,!fact_sound_preset_5_names[$arr_count_1 - $NUM_FACT_SOUND_PRESETS_4 - $NUM_FACT_SOUND_PRESETS_3 - $NUM_FACT_SOUND_PRESETS_2 - $NUM_FACT_SOUND_PRESETS_1],$arr_count_1)
			inc($arr_count_1)
		end while
		while($arr_count_1 < $NUM_FACT_SOUND_PRESETS_6 + $NUM_FACT_SOUND_PRESETS_5 + $NUM_FACT_SOUND_PRESETS_4 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_1)
			add_menu_item($fact_sound_preset_menu_6,!fact_sound_preset_6_names[$arr_count_1 - $NUM_FACT_SOUND_PRESETS_5 - $NUM_FACT_SOUND_PRESETS_4 - $NUM_FACT_SOUND_PRESETS_3 - $NUM_FACT_SOUND_PRESETS_2 - $NUM_FACT_SOUND_PRESETS_1],$arr_count_1)
			inc($arr_count_1)
		end while
		
		$arr_count_1 := $MAX_SOUND_FACT_PRESETS
		while($arr_count_1 < $MAX_SOUND_FACT_PRESETS + $NUM_USER_SOUND_PRESETS)
			add_menu_item($user_sound_preset_menu,!user_sound_preset_names[$arr_count_1 - $MAX_SOUND_FACT_PRESETS],$arr_count_1)
			add_menu_item($user_sound_preset_menu_NEW,!user_sound_preset_names[$arr_count_1 - $MAX_SOUND_FACT_PRESETS],$arr_count_1)
			inc($arr_count_1)
		end while

		$arr_count_2 := 0
		while($arr_count_2 < $NUM_USER_SOUND_PRESETS)
			if ($arr_count_2 < %user_num_snd_Presets[0])
				set_menu_item_visibility(%sound_preset_controls[06], $arr_count_2, 1)
				set_menu_item_visibility($user_dummy_menu_id, $arr_count_2, 1)
			else
				set_menu_item_visibility(%sound_preset_controls[06], $arr_count_2, 0)
				set_menu_item_visibility($user_dummy_menu_id, $arr_count_2, 0)
			end if
			inc($arr_count_2)
		end while

		if (%user_num_snd_Presets[0] = 0)
			set_control_par(%sound_preset_controls[06],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			set_control_par($user_dummy_menu_id,$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
		else
			set_control_par(%sound_preset_controls[06],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
			set_control_par($user_dummy_menu_id,$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		end if
		
		declare $last_sound_preset
		make_persistent($last_sound_preset)
		read_persistent_var($last_sound_preset)

		declare $last_bank_1
		declare $last_bank_2
		declare $last_bank_3
		declare $last_bank_4
		declare $last_bank_5
		declare $last_bank_6
		declare $last_user_bank

		make_persistent($last_bank_1)
		make_persistent($last_bank_2)
		make_persistent($last_bank_3)
		make_persistent($last_bank_4)
		make_persistent($last_bank_5)
		make_persistent($last_bank_6)
		make_persistent($last_user_bank)

		declare $active_preset
		make_persistent($active_preset)
		read_persistent_var($active_preset)
		declare $preset_change_flag

	{HARDCODED SOUND PRESETS}
		declare %fact_snd_preset_Ac_Group_PURGE[$TEMP_NUM_FACT_SOUND_PRESETS * $AC_NUM_GROUPS] := (...
				{01 Smooth}...
				{PRESET 1}...
				0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,1,1,1,1,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,1,1,1,1,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,1,1,1,1,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,...
				{PRESET 2}...
				0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,...
				{PRESET 3}...
				0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,...
				{PRESET 4}...
				0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,...
				{PRESET 5}...
				0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,1,0,1,1,1,1,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,1,0,1,1,1,1,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,1,0,1,1,1,1,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,...
				{PRESET 6}...
				0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,...
				{PRESET 7}...
				0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,...
				{PRESET 8}...
				0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,...
				{PRESET 9}...
				0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,...
				{PRESET 10}...
				0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,...
				{02 Tight}...
				{PRESET 1}...
				0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,...
				{PRESET 2}...
				0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,...
				{PRESET 3}...
				0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,...
				{PRESET 4}...
				0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,...
				{PRESET 5}...
				0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,...
				{PRESET 6}...
				0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,...
				{PRESET 7}...
				0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,...
				{PRESET 8}...
				0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,0,0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,0,0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,0,0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,...
				{PRESET 9}...
				0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,...
				{PRESET 10}...
				0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,...
				{03 Fat}...
				{PRESET 1}...
				1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,...
				{PRESET 2}...
				0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,...
				{PRESET 3}...
				0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,...
				{PRESET 4}...
				0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,...
				{PRESET 5}...
				0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,...
				{PRESET 6}...
				0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,...
				{PRESET 7}...
				0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,...
				{PRESET 8}...
				0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,...
				{PRESET 9}...
				0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,...
				{PRESET 10}...
				0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,...
				{04 Dirty}...
				{PRESET 1}...
				0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,0,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,0,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,0,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0,...
				{PRESET 2}...
				0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,...
				{PRESET 3}...
				0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,...
				{PRESET 4}...
				0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,...
				{PRESET 5}...
				0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,...
				{PRESET 6}...
				0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,1,1,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,1,1,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,1,1,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,...
				{PRESET 7}...
				0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,1,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,1,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,1,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,...
				{PRESET 8}...
				0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,...
				{PRESET 9}...
				0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,...
				{PRESET 10}...
				0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,...
				{05 Special}...
				{PRESET 1}...
				0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,...
				{PRESET 2}...
				0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,...
				{PRESET 3}...
				0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,1,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,1,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,1,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,...
				{PRESET 4}...
				0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,...
				{PRESET 5}...
				0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,...
				{PRESET 6}...
				0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,...
				{PRESET 7}...
				0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,...
				{PRESET 8}...
				0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,...
				{PRESET 9}...
				0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,...
				{PRESET 10}...
				0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,...
				{06 Raw}...
				{PRESET 1}...
				0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,...
				{PRESET 2}...
				0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,...
				{PRESET 3}...
				0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,...
				{PRESET 4}...
				0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,...
				{PRESET 5}...
				0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,...
				{PRESET 6}...
				0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,...
				{PRESET 7}...
				0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,...
				{PRESET 8}...
				0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,...
				{PRESET 9}...
				1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,...
				{PRESET 10}...
				0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0)

		declare %fact_snd_preset_El_Group_PURGE[$TEMP_NUM_FACT_SOUND_PRESETS * $EL_NUM_GROUPS] := (...
				{01 Smooth}...
				{PRESET 1}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 2}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 3}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 4}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 5}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 6}...
				0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 7}...
				0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,...
				{PRESET 8}...
				0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 9}...
				0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,...
				{PRESET 10}...
				0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{02 Tight}...
				{PRESET 1}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 2}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 3}...
				0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 4}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 5}...
				0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 6}...
				0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 7}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,...
				{PRESET 8}...
				0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,...
				{PRESET 9}...
				0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,...
				{PRESET 10}...
				0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,...
				{03 Fat}...
				{PRESET 1}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 2}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,...
				{PRESET 3}...
				0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,...
				{PRESET 4}...
				1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,...
				{PRESET 5}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,...
				{PRESET 6}...
				0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,...
				{PRESET 7}...
				0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 8}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,...
				{PRESET 9}...
				0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 10}...
				0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,...
				{04 Dirty}...
				{PRESET 1}...
				1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,...
				{PRESET 2}...
				0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,...
				{PRESET 3}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 4}...
				0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,...
				{PRESET 5}...
				0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,...
				{PRESET 6}...
				0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,...
				{PRESET 7}...
				0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,...
				{PRESET 8}...
				0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,...
				{PRESET 9}...
				0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,...
				{PRESET 10}...
				0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,...
				{05 Special}...
				{PRESET 1}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 2}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,...
				{PRESET 3}...
				0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,...
				{PRESET 4}...
				0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,...
				{PRESET 5}...
				0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,...
				{PRESET 6}...
				0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,...
				{PRESET 7}...
				0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,...
				{PRESET 8}...
				1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 9}...
				0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,...
				{PRESET 10}...
				0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,...
				{06 Raw}...
				{PRESET 1}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 2}...
				1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,...
				{PRESET 3}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,...
				{PRESET 4}...
				0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 5}...
				0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 6}...
				1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,...
				{PRESET 7}...
				0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 8}...
				0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 9}...
				0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,...
				{PRESET 10}...
				0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0)

{set_listener($NI_SIGNAL_TIMER_MS,100)}
$init_flag := 0
set_key_pressed_support(1)
end on
{/init}

{FUNCTIONS}
	function calc_velocity_curve
		{	variables passed: 	$mode_velocity
								$active_key_sld
			variables written:	%table[]
			counters used: 		$count_1}

		select ($mode_velocity)
			case 0 	{LIN}
				$CShow := 0
			case 1 	{EXP+}
				$CShow := $EXP_SHAPE
			case 2 	{EXP-}
				$CShow := -$EXP_SHAPE
			case 3 	{FIX}
				$count_1 := 0
				while ($count_1 <128)
					%table[$active_key_sld * 128 + $count_1] := $max_velocity_sld
					inc($count_1)
				end while
				exit
		end select
		
		$curve := $CShow
		$knob_helper := ($curve*(-1) + 1000)
		$count_1 := 0
		$helper := 1000
		$curve_hight := 0
		while($count_1 < 128)
			$helper := ($helper * $knob_helper)/1000
			%curve_deriv[$count_1] := $helper
			$curve_hight := $curve_hight + %curve_deriv[$count_1]
			inc($count_1)
		end while
		$count_1 := 2
		%curve_table_helper[0] := 0
		%curve_table_helper[1] := 0
		while ($count_1 <128)
			%curve_table_helper[$count_1] := ((%curve_table_helper[$count_1-1]+%curve_deriv[$count_1]))
			inc($count_1)
		end while
		$count_1 := 0
		while ($count_1 <128)
			%curve_form[$count_1] := ((%curve_table_helper[$count_1]*128)/(($curve_hight)/100))
			inc($count_1)
		end while
		$count_1 := 0
		while ($count_1 <128)
			%curve_form[$count_1] := (%curve_form[$count_1]*12700)/%curve_form[127]
			inc($count_1)
		end while

		if (get_control_par(%velocity_id[$mode_velocity + 2],$CONTROL_PAR_KEY_ALT) = 1)
			$count_1 := 0
			while ($count_1 < 128)
				$count_2 := 0
				while ($count_2 < 128)
					%table[$active_key_sld * 128 + $count_2] := $min_velocity_sld + (((%curve_form[$count_2])*($max_velocity_sld-$min_velocity_sld))/12700)
					%mode_velocity_key[$count_1] := $mode_velocity
					inc($count_2)
				end while
				inc($count_1)
			end while
		else
			$count_2 := 0
			while ($count_2 < 128)
				%table[$active_key_sld * 128 + $count_2] := $min_velocity_sld + (((%curve_form[$count_2])*($max_velocity_sld-$min_velocity_sld))/12700)
				inc($count_2)
			end while
		end if
	end function

	function change_min_vel_per_key
		if ($min_velocity_sld > $max_velocity_sld)
			$min_velocity_sld := $max_velocity_sld
		end if
		
		select ($mode_velocity)
			case 0 to 2
				$count_1 := 0
				while ($count_1 <128)
					%table[$active_key_sld * 128 + $count_1] := $min_velocity_sld + ((%curve_form[$count_1]*($max_velocity_sld-$min_velocity_sld))/12700)
					inc($count_1)
				end while				
		end select
	end function

	function change_min_vel_ALL_keys
		if ($min_velocity_sld > $max_velocity_sld)
			$min_velocity_sld := $max_velocity_sld
		end if
		
		select ($mode_velocity)
			case 0 to 2
				$count_1 := 0
				while ($count_1 < 128)
					$count_2 := 0
					while ($count_2 <128)
						%table[$count_1 * 128 + $count_2] := $min_velocity_sld + ((%curve_form[$count_2]*($max_velocity_sld-$min_velocity_sld))/12700)
						inc($count_2)
					end while				
					inc($count_1)
				end while
		end select
	end function

	function change_max_vel_per_key
		if ($max_velocity_sld < $min_velocity_sld)
			$max_velocity_sld := $min_velocity_sld
		end if
		
		select ($mode_velocity)
			case 0 to 2
				$count_1 := 0
				while ($count_1 <128)
					%table[$active_key_sld * 128 + $count_1] := $min_velocity_sld + ((%curve_form[$count_1]*($max_velocity_sld-$min_velocity_sld))/12700)
					inc($count_1)
				end while				
			case 3
				$count_1 := 0
				while ($count_1 <128)
					%table[$active_key_sld * 128 + $count_1] := $max_velocity_sld
					inc($count_1)
				end while
		end select
	end function

	function change_max_vel_ALL_keys
		if ($max_velocity_sld < $min_velocity_sld)
			$max_velocity_sld := $min_velocity_sld
		end if
		
		select ($mode_velocity)
			case 0 to 2
				$count_1 := 0
				while ($count_1 < 128)
					$count_2 := 0
					while ($count_2 < 128)
						%table[$count_1 * 128 + $count_2] := $min_velocity_sld + ((%curve_form[$count_2]*($max_velocity_sld-$min_velocity_sld))/12700)
						inc($count_2)
					end while
					inc($count_1)
				end while
			case 3
				$count_1 := 0
				while ($count_1 < 128)
					$count_2 := 0
					while ($count_2 <128)
						%table[$count_1 * 128 + $count_2] := $max_velocity_sld
						inc($count_2)
					end while
					inc($count_1)
				end while
		end select
	end function

	function key_coloring
		$count_1 := 0
		while ($count_1 < 128)
			if (%current_mapping_data[$count_1] > -1 and %KEY_USED[%current_mapping_data[$count_1]] # 0)
				select (%which_key_to_which_inst[%current_mapping_data[$count_1]])
					case $KICK_ID
						set_key_color($count_1, $KEY_COLOR_RED)
					case $SNARE_ID
						set_key_color($count_1, $KEY_COLOR_WARM_YELLOW)
					case $HH_ID
						set_key_color($count_1, $KEY_COLOR_CYAN)
					case $TOM1_ID to $TOM4_ID
						set_key_color($count_1, $KEY_COLOR_ORANGE)
					case $CYMB1_ID to $CYMB7_ID
						set_key_color($count_1, $KEY_COLOR_MINT)
					case $PERC1_ID to $PERC5_ID
						set_key_color($count_1, $KEY_COLOR_ORANGE)
				end select
				$instruments_mnu := %which_key_to_which_inst[%current_mapping_data[$count_1]]
				
				set_key_name($count_1, !inst_visual_names[$instruments_mnu] & " " & !artic_visual_name[%FACTORY_MAPPING[$current_mapping_preset_mnu * 128 + $count_1]])
				message("")
			else
				set_key_color($count_1, $KEY_COLOR_INACTIVE)
				set_key_name($count_1, "")
			end if
			inc($count_1)
		end while

		$count_1 := $MIDI_PTTRN_LOW
		while ($count_1 < $MIDI_PTTRN_HIGH)
			if (pgs_get_key_val(LOADED_MIDI, $count_1 - 12) = 1)
				set_key_color($count_1, $KEY_COLOR_RED)
			else
				set_key_color($count_1, $KEY_COLOR_PLUM)
			end if
			inc($count_1)
		end while

	end function

	function update_mapping_editor_gui
		if (%current_mapping_data[$active_key_sld] > -1 and %KEY_USED[%current_mapping_data[$active_key_sld]] = 1)
			$instruments_mnu := %which_key_to_which_inst[%current_mapping_data[$active_key_sld]]
			set_control_par_str(%mapping_id[1], $CONTROL_PAR_PICTURE, !INSTRUMENT_PICS[$instruments_mnu])
			select ($instruments_mnu)
				case $KICK_ID
					set_menu_item_str(%mapping_id[1],%actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_KICK, 0) + 1))
				case $SNARE_ID
					set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_SNARE, 0) + 1))
				case $HH_ID
					set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_HIHAT, 0) + 1))
				case $TOM1_ID
					set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_TOM1, 0) + 1))
				case $TOM2_ID
					set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_TOM2, 0) + 1))
				case $TOM3_ID
					set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_TOM3, 0) + 1))
				case $CYMB1_ID
					set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_CYMB1, 0) + 1))
				case $CYMB2_ID
					set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_CYMB2, 0) + 1))
				case $CYMB3_ID
					set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_CYMB3, 0) + 1))
				case $PERC1_ID
					set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_PERC1, 0) + 1))
				case $PERC2_ID
					set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_PERC2, 0) + 1))
				case $PERC3_ID
					set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_PERC3, 0) + 1))
				case $PERC4_ID
					set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_PERC4, 0) + 1))
				case $PERC5_ID
					set_menu_item_str(%mapping_id[1], %actual_inst_index[$instruments_mnu], !INSTRUMENT_NAMES[$instruments_mnu] & "  " & (pgs_get_key_val(ACTIVE_PERC5, 0) + 1))
			end select
		else
			$instruments_mnu := -1
			set_control_par_str(%mapping_id[1],$CONTROL_PAR_PICTURE,"settings-menu")
		end if
		
		$count_1 := 0
		if ($instruments_mnu = -1)
			set_menu_item_str(%mapping_id[2], $count_1, "(None)" & @ART_MENU_ALIGNMENT_HELPER)
			set_menu_item_value(%mapping_id[2], $count_1, -1)
			set_menu_item_visibility(%mapping_id[2], $count_1, 1)
			$articulations_mnu := -1
			inc($count_1)
		else
			$count_2 := %AC_INSTRUMENT_OFFSET[%which_key_to_which_inst[%current_mapping_data[$active_key_sld]]]
			while ($count_2 < %AC_INSTRUMENT_OFFSET[%which_key_to_which_inst[%current_mapping_data[$active_key_sld]] + 1])
				if (%KEY_USED[$count_2] > 0)
					set_menu_item_str(%mapping_id[2], $count_1, !ARTICULATION_NAMES[$count_2] & @ART_MENU_ALIGNMENT_HELPER)
					set_menu_item_value(%mapping_id[2], $count_1, $count_2)
					set_menu_item_visibility(%mapping_id[2], $count_1, 1)
					inc($count_1)
				end if
				inc($count_2)
			end while
			$articulations_mnu := %current_mapping_data[$active_key_sld]
			select ($instruments_mnu)
				case $PERC1_ID
					set_menu_item_str(%mapping_id[2],0, !PERC_A_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC1, 0) * 2])
					set_menu_item_str(%mapping_id[2],1, !PERC_A_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC1, 0) * 2 + 1])
				case $PERC2_ID
					set_menu_item_str(%mapping_id[2],0, !PERC_B_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC2, 0) * 2])
					set_menu_item_str(%mapping_id[2],1, !PERC_B_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC2, 0) * 2 + 1])
				case $PERC3_ID
					set_menu_item_str(%mapping_id[2],0, !PERC_C_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC3, 0) * 2])
					set_menu_item_str(%mapping_id[2],1, !PERC_C_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC3, 0) * 2 + 1])
				case $PERC4_ID
					set_menu_item_str(%mapping_id[2],0, !PERC_D_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC4, 0)])
				case $PERC5_ID
					set_menu_item_str(%mapping_id[2],0, !PERC_B_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC5, 0) * 2])
					set_menu_item_str(%mapping_id[2],1, !PERC_B_ARTIC_NAMES[pgs_get_key_val(ACTIVE_PERC5, 0) * 2 + 1])
			end select
		end if
		
		while ($count_1 < 20)
			set_menu_item_visibility(%mapping_id[2], $count_1, 0)
			inc($count_1)
		end while

		{update curves per key}
		$count_1 := 2
		while ($count_1 < 6)
			set_control_par(%velocity_id[$count_1],$CONTROL_PAR_VALUE ,0)
			inc($count_1)
		end while
		select (%mode_velocity_key[$active_key_sld])
			case 0
				set_control_par(%velocity_id[2],$CONTROL_PAR_VALUE ,1) 	{LIN}
			case 1
				set_control_par(%velocity_id[3],$CONTROL_PAR_VALUE ,1) 	{EXP+}
			case 2
				set_control_par(%velocity_id[4],$CONTROL_PAR_VALUE ,1) 	{EXP-}
			case 3
				set_control_par(%velocity_id[5],$CONTROL_PAR_VALUE ,1) 	{FIX}
		end select

		{update Velocity Range per Key}
		set_control_par(%velocity_id[0],$CONTROL_PAR_VALUE,%min_velocity_key[$active_key_sld])
		set_control_par(%velocity_id[1],$CONTROL_PAR_VALUE,%max_velocity_key[$active_key_sld])

		{set_control_par(%kb_id[$active_key_sld mod 36],$CONTROL_PAR_VALUE,1)}
	end function

	function update_mapping_preset_mn
		$count_1 := 0
		if (%DL_num_user_presets[0] > 0)
			set_menu_item_visibility(%mapping_id[0], $NUM_FACTORY_PRESETS, 1)
			while ($count_1 < %DL_num_user_presets[0])
				set_menu_item_str(%mapping_id[0], $count_1 + $NUM_FACTORY_PRESETS + 1, !DL_user_mapping_names[$count_1])
				set_menu_item_visibility(%mapping_id[0], $count_1 + $NUM_FACTORY_PRESETS + 1, 1)
				inc($count_1)
			end while
		else
			if ($current_mapping_preset_mnu > $NUM_FACTORY_PRESETS - 1)
				$current_mapping_preset_mnu := $NUM_FACTORY_PRESETS - 1
			end if
			set_menu_item_visibility(%mapping_id[0], $NUM_FACTORY_PRESETS, 0)
		end if
		
		while ($count_1 < $MAX_NUM_USER_PRESETS)
			set_menu_item_visibility(%mapping_id[0], $count_1 + $NUM_FACTORY_PRESETS + 1, 0)
			inc($count_1)
		end while
		
		@current_preset_name := get_menu_item_str(%mapping_id[0], $current_mapping_preset_mnu)
	end function

	function recall_data
		$count_1 := 0
		while ($count_1 < 128)
			%inverse_mapping_data[$count_1] := -1
			inc($count_1)
		end while

		if ($current_mapping_preset_mnu > $NUM_FACTORY_PRESETS)
			$count_1 := 0
			while ($count_1 < 128)
				%current_mapping_data[$count_1] := %DL_user_mapping_data[($current_mapping_preset_mnu - $NUM_FACTORY_PRESETS - 1) * 128 + $count_1]
				if (%DL_user_mapping_data[($current_mapping_preset_mnu - $NUM_FACTORY_PRESETS - 1) * 128 + $count_1] > -1)
					%inverse_mapping_data[%DL_user_mapping_data[($current_mapping_preset_mnu - $NUM_FACTORY_PRESETS - 1) * 128 + $count_1]] := $count_1
				end if
				inc($count_1)
			end while
		else
			$count_1 := 0
			while ($count_1 < 128)
				%current_mapping_data[$count_1] := %FACTORY_MAPPING[$current_mapping_preset_mnu * 128 + $count_1]
				if (%FACTORY_MAPPING[$current_mapping_preset_mnu * 128 + $count_1] > -1)
					%inverse_mapping_data[%FACTORY_MAPPING[$current_mapping_preset_mnu * 128 + $count_1]] := $count_1
				end if
				inc($count_1)
			end while
		end if
		
		pgs_set_key_val(COMMAND, 0, -1)
		$count_1 := 0
		while ($count_1 < 128)
			pgs_set_key_val(MAPPING, $count_1, %inverse_mapping_data[$count_1])
			inc($count_1)
		end while
		pgs_set_key_val(COMMAND, 0, 6)
		
		if ($current_mapping_preset_mnu < $NUM_FACTORY_PRESETS)
			set_control_par_str(%mapping_id[7], $CONTROL_PAR_PICTURE, "settings-midi-preset-delete-btn-disabled")
		else
			set_control_par_str(%mapping_id[7], $CONTROL_PAR_PICTURE, "settings-midi-preset-delete-btn")
		end if

		call key_coloring
	end function

	function store_data
		$count_1 := 0
		while ($count_1 < 128)
			%DL_user_mapping_data[128 * ($current_mapping_preset_mnu - $NUM_FACTORY_PRESETS - 1) + $count_1] := %current_mapping_data[$count_1]
			inc($count_1)
		end while
	end function

{Velocity Callbacks}
	on ui_control ($linear_velocity_btn)
		if ($linear_velocity_btn = 0)
			$linear_velocity_btn := 1
		else
			$mode_velocity := 0
			%mode_velocity_key[$active_key_sld] := $mode_velocity
			$exp_1_velocity_btn := 0
			$exp_2_velocity_btn := 0
			$fix_velocity_btn := 0
			call calc_velocity_curve
		end if
	end on

	on ui_control ($exp_1_velocity_btn)
		if ($exp_1_velocity_btn = 0)
			$exp_1_velocity_btn := 1
		else
			$mode_velocity := 1
			%mode_velocity_key[$active_key_sld] := $mode_velocity
			$linear_velocity_btn := 0
			$exp_2_velocity_btn := 0
			$fix_velocity_btn := 0
			call calc_velocity_curve
		end if
	end on

	on ui_control ($exp_2_velocity_btn)
		if ($exp_2_velocity_btn = 0)
			$exp_2_velocity_btn := 1
		else
			$mode_velocity := 2
			%mode_velocity_key[$active_key_sld] := $mode_velocity
			$linear_velocity_btn := 0
			$exp_1_velocity_btn := 0
			$fix_velocity_btn := 0
			call calc_velocity_curve
		end if
	end on

	on ui_control ($fix_velocity_btn)
		if ($fix_velocity_btn = 0)
			$fix_velocity_btn := 1
		else
			$mode_velocity := 3
			%mode_velocity_key[$active_key_sld] := $mode_velocity
			$linear_velocity_btn := 0
			$exp_1_velocity_btn := 0
			$exp_2_velocity_btn := 0
			call calc_velocity_curve
		end if
	end on

	on ui_control ($min_velocity_sld)
		if (get_control_par(get_ui_id($min_velocity_sld),$CONTROL_PAR_KEY_ALT) = 1)
			$key_count := 0
			while ($key_count < 128)
				%min_velocity_key[$key_count] := $min_velocity_sld
				inc($key_count)
			end while
			call change_min_vel_ALL_keys
		else
			%min_velocity_key[$active_key_sld] := $min_velocity_sld
			call change_min_vel_per_key
		end if
	end on

	on ui_control ($max_velocity_sld)
		if (get_control_par(get_ui_id($max_velocity_sld),$CONTROL_PAR_KEY_ALT) = 1)
			$key_count := 0
			while ($key_count < 128)
				%max_velocity_key[$key_count] := $max_velocity_sld
				inc($key_count)
			end while
			call change_max_vel_ALL_keys
		else
			%max_velocity_key[$active_key_sld] := $max_velocity_sld
			call change_max_vel_per_key
		end if
	end on
	on ui_control ($min_vel_up_btn)
		if (get_control_par(get_ui_id($min_vel_up_btn),$CONTROL_PAR_KEY_ALT) = 1)
			if ($min_velocity_sld < 127)
				inc($min_velocity_sld)
				$key_count := 0
				while ($key_count < 128)
					%min_velocity_key[$key_count] := $min_velocity_sld
					inc($key_count)
				end while
				call change_min_vel_ALL_keys
			end if
		else
			if ($min_velocity_sld < 127)
				inc($min_velocity_sld)
				%min_velocity_key[$active_key_sld] := $min_velocity_sld
				call change_min_vel_per_key
			end if
		end if
		$min_vel_up_btn := 0
	end on

	on ui_control ($min_vel_dn_btn)
		if (get_control_par(get_ui_id($min_vel_dn_btn),$CONTROL_PAR_KEY_ALT) = 1)
			if ($min_velocity_sld > 1)
				dec($min_velocity_sld)
				$key_count := 0
				while ($key_count < 128)
					%min_velocity_key[$key_count] := $min_velocity_sld
					inc($key_count)
				end while
				call change_min_vel_ALL_keys
			end if
		else
			if ($min_velocity_sld > 1)
				dec($min_velocity_sld)
				%min_velocity_key[$active_key_sld] := $min_velocity_sld
				call change_min_vel_per_key
			end if
		end if
		$min_vel_dn_btn := 0
	end on

	on ui_control ($max_vel_up_btn)
		if (get_control_par(get_ui_id($max_vel_up_btn),$CONTROL_PAR_KEY_ALT) = 1)
			if ($max_velocity_sld < 127)
				inc($max_velocity_sld)
				$key_count := 0
				while ($key_count < 128)
					%max_velocity_key[$key_count] := $max_velocity_sld
					inc($key_count)
				end while
				call change_max_vel_ALL_keys
			end if
		else
			if ($max_velocity_sld < 127)
				inc($max_velocity_sld)
				%max_velocity_key[$active_key_sld] := $max_velocity_sld
				call change_max_vel_per_key
			end if
		end if
		$max_vel_up_btn := 0
	end on

	on ui_control ($max_vel_dn_btn)
		if (get_control_par(get_ui_id($max_vel_dn_btn),$CONTROL_PAR_KEY_ALT) = 1)
			if ($max_velocity_sld > 1)
				dec($max_velocity_sld)
				$key_count := 0
				while ($key_count < 128)
					%max_velocity_key[$key_count] := $max_velocity_sld
					inc($key_count)
				end while
				call change_max_vel_ALL_keys
			end if
		else
			if ($max_velocity_sld > 1)
				dec($max_velocity_sld)
				%max_velocity_key[$active_key_sld] := $max_velocity_sld
				call change_max_vel_per_key
			end if
		end if
		$max_vel_dn_btn := 0
	end on
	{/Velocity Callbacks}

{Mapping Callbacks}
	on ui_control (@current_preset_name)
		
		$text_change_flag := 1
	end on

	on ui_control ($current_mapping_preset_mnu)
		if ($current_mapping_preset_mnu = $NUM_FACTORY_PRESETS)
			$current_mapping_preset_mnu := $NUM_FACTORY_PRESETS - 1
		end if

		@current_preset_name := get_menu_item_str(%mapping_id[0], $current_mapping_preset_mnu)
		call recall_data	
		call update_mapping_editor_gui
		$text_change_flag := 0
	end on

	on ui_control ($prev_preset_btn)
		$prev_preset_btn := 0

		if ($current_mapping_preset_mnu = 0)
			if (%DL_num_user_presets[0] = 0)
				$current_mapping_preset_mnu := $NUM_FACTORY_PRESETS - 1
			else
				$current_mapping_preset_mnu := $NUM_FACTORY_PRESETS + %DL_num_user_presets[0]
			end if
		else
			if ($current_mapping_preset_mnu = $NUM_FACTORY_PRESETS + 1)
				dec($current_mapping_preset_mnu)
			end if
			dec($current_mapping_preset_mnu)
		end if

		@current_preset_name := get_menu_item_str(%mapping_id[0], $current_mapping_preset_mnu)
		call recall_data
		call update_mapping_editor_gui
		$text_change_flag := 0
	end on

	on ui_control ($next_preset_btn)
		$next_preset_btn := 0

		if (($current_mapping_preset_mnu = $NUM_FACTORY_PRESETS - 1 and %DL_num_user_presets[0] = 0) or ($current_mapping_preset_mnu = $NUM_FACTORY_PRESETS + %DL_num_user_presets[0]))
			$current_mapping_preset_mnu := 0
		else
			if ($current_mapping_preset_mnu = $NUM_FACTORY_PRESETS - 1)
				inc($current_mapping_preset_mnu)
			end if
			inc($current_mapping_preset_mnu)
		end if

		@current_preset_name := get_menu_item_str(%mapping_id[0], $current_mapping_preset_mnu)
		call recall_data
		call update_mapping_editor_gui
		$text_change_flag := 0
	end on

	on ui_control ($save_preset_btn)
		if ($text_change_flag = 1 or $current_mapping_preset_mnu < $NUM_FACTORY_PRESETS)
			if (%DL_num_user_presets[0] = $MAX_NUM_USER_PRESETS)
				message("Out of preset slots!!")
				wait(500000)
				message("")
				exit
			else
				$current_mapping_preset_mnu := %DL_num_user_presets[0] + $NUM_FACTORY_PRESETS + 1
				!DL_user_mapping_names[$current_mapping_preset_mnu - $NUM_FACTORY_PRESETS - 1] := @current_preset_name
				inc(%DL_num_user_presets[0])
				call store_data
				call update_mapping_preset_mn
				$save_user_mapping_names_id := save_array(!DL_user_mapping_names, 1)
				$save_user_mapping_data_id := save_array(%DL_user_mapping_data, 1)
				$save_num_user_presets_id := save_array(%DL_num_user_presets, 1)
			end if
		else
			call store_data
			$save_user_mapping_data_id := save_array(%DL_user_mapping_data, 1)
		end if
		
		while ($save_user_mapping_names_id # -1 or $save_user_mapping_data_id # -1 or $save_num_user_presets_id # -1)
			wait(1000)
		end while
		
		set_control_par_str(%mapping_id[7], $CONTROL_PAR_PICTURE, "settings-midi-preset-delete-btn")
		
		$save_preset_btn := 0
		$text_change_flag := 0
	end on

	on ui_control ($delete_preset_btn)
		if ($current_mapping_preset_mnu < $NUM_FACTORY_PRESETS)
			exit
		end if

		if ($current_mapping_preset_mnu = $NUM_FACTORY_PRESETS + $MAX_NUM_USER_PRESETS)
			!DL_user_mapping_names[$MAX_NUM_USER_PRESETS - 1] := ""
			$count_2 := 0
			while ($count_2 < 128)
				%DL_user_mapping_data[128 * ($MAX_NUM_USER_PRESETS - 1) + $count_2] := -1
				inc($count_2)
			end while
		else
			$count_1 := $current_mapping_preset_mnu - $NUM_FACTORY_PRESETS - 1
			while ($count_1 < %DL_num_user_presets[0])
				!DL_user_mapping_names[$count_1] := !DL_user_mapping_names[$count_1 + 1]
				$count_2 := 0
				while ($count_2 < 128)
					%DL_user_mapping_data[128 * $count_1 + $count_2] := %DL_user_mapping_data[128 * ($count_1 + 1) + $count_2]
					inc($count_2)
				end while
				inc($count_1)
			end while
		end if
		
		if ($current_mapping_preset_mnu = %DL_num_user_presets[0] + $NUM_FACTORY_PRESETS)
			dec($current_mapping_preset_mnu)
		end if
		
		dec(%DL_num_user_presets[0])
			
		$save_user_mapping_names_id := save_array(!DL_user_mapping_names, 1)
		$save_user_mapping_data_id := save_array(%DL_user_mapping_data, 1)
		$save_num_user_presets_id := save_array(%DL_num_user_presets, 1)
		
		while ($save_user_mapping_names_id # -1 or $save_user_mapping_data_id # -1 or $save_num_user_presets_id # -1)
			wait(1000)
		end while
		
		call update_mapping_preset_mn
		call recall_data
		call update_mapping_editor_gui
		
		$delete_preset_btn := 0
		$text_change_flag := 0
	end on

	on ui_control ($instruments_mnu)
		if ($instruments_mnu > -1)
			set_control_par_str(%mapping_id[1], $CONTROL_PAR_PICTURE, !INSTRUMENT_PICS[$instruments_mnu])
		else
			set_control_par_str(%mapping_id[1],$CONTROL_PAR_PICTURE,"settings-menu")
		end if
		$count_1 := 0
		if ($instruments_mnu = -1)
			set_menu_item_str(%mapping_id[2], $count_1, "(None)" & @ART_MENU_ALIGNMENT_HELPER)
			set_menu_item_value(%mapping_id[2], $count_1, -1)
			set_menu_item_visibility(%mapping_id[2], $count_1, 1)
			$articulations_mnu := -1
			inc($count_1)
		else
			$count_2 := %AC_INSTRUMENT_OFFSET[$instruments_mnu]
			while ($count_2 < %AC_INSTRUMENT_OFFSET[$instruments_mnu + 1])
				if (%KEY_USED[$count_2] > 0)
					set_menu_item_str(%mapping_id[2], $count_1, !ARTICULATION_NAMES[$count_2] & @ART_MENU_ALIGNMENT_HELPER)
					set_menu_item_value(%mapping_id[2], $count_1, $count_2)
					set_menu_item_visibility(%mapping_id[2], $count_1, 1)
					inc($count_1)
				end if
				inc($count_2)
			end while
			$articulations_mnu := %AC_INSTRUMENT_OFFSET[$instruments_mnu]
		end if
		
		while ($count_1 < 20)
			set_menu_item_visibility(%mapping_id[2], $count_1, 0)
			inc($count_1)
		end while

		if ($articulations_mnu = -1)
			$count_1 := 0
			while ($count_1 < 128)
				if (%current_mapping_data[$count_1] = %current_mapping_data[$active_key_sld])
					%inverse_mapping_data[%current_mapping_data[$active_key_sld]] := $count_1
					$count_1 := 128
				end if
				inc($count_1)
			end while
		else
			%inverse_mapping_data[$articulations_mnu] := $active_key_sld
		end if
		%current_mapping_data[$active_key_sld] := $articulations_mnu
		
		if ($articulations_mnu # -1)
			pgs_set_key_val(COMMAND, 0, -1)
			pgs_set_key_val(MAPPING, $articulations_mnu, $active_key_sld)
			pgs_set_key_val(COMMAND, 0, 6)
		end if
		
		{KEY COLORING}
		call key_coloring
	end on

	on ui_control ($articulations_mnu)

		if ($articulations_mnu = -1)
			$count_1 := 0
			while ($count_1 < 128)
				if (%current_mapping_data[$count_1] = %current_mapping_data[$active_key_sld])
					%inverse_mapping_data[%current_mapping_data[$active_key_sld]] := $count_1
					$count_1 := 128
				end if
				inc($count_1)
			end while
		else
			%inverse_mapping_data[$articulations_mnu] := $active_key_sld
		end if
		%current_mapping_data[$active_key_sld] := $articulations_mnu
		pgs_set_key_val(COMMAND, 0, -1)
		pgs_set_key_val(MAPPING, $articulations_mnu, $active_key_sld)
		pgs_set_key_val(COMMAND, 0, 6)
		
		call key_coloring
	end on

	on ui_control ($active_key_sld)
		$last_callback_id := $NI_CALLBACK_ID
		wait($KNOB_ADJUSTMENT_TOLERANCE)
		
		if ($NI_CALLBACK_ID # $last_callback_id)
			exit
		end if

		call update_mapping_editor_gui
	end on

	on ui_control ($active_btn_key_up)
		if ($active_key_sld < 127)
			inc($active_key_sld)
			call update_mapping_editor_gui
		end if
	end on

	on ui_control ($active_btn_key_dn)
		if ($active_key_sld > 0)
			dec($active_key_sld)
			call update_mapping_editor_gui
		end if
	end on
	{/Mapping Callbacks}

{Groove Callbacks}
	on ui_control ($play)
		$playing_flag := 0
		$key_counter := $play
		pgs_set_key_val(COMMAND, 0, -1)
		pgs_set_key_val(GROOVE_ACTION, 0, $play)
		pgs_set_key_val(GROOVE_ACTION, 1, 0)
		pgs_set_key_val(GROOVE_ACTION, 2, 0)
		pgs_set_key_val(GROOVE_ACTION, 3, 0)
		pgs_set_key_val(COMMAND, 0, 2)
	end on

	on ui_control ($prev_groove)
		pgs_set_key_val(COMMAND, 0, -1)
		pgs_set_key_val(GROOVE_ACTION, 0, -1)
		pgs_set_key_val(GROOVE_ACTION, 1, 1)
		pgs_set_key_val(GROOVE_ACTION, 2, 0)
		pgs_set_key_val(COMMAND, 0, 2)
		$prev_groove := 0
	end on

	on ui_control ($next_groove)
		pgs_set_key_val(COMMAND, 0, -1)
		pgs_set_key_val(GROOVE_ACTION, 0, -1)
		pgs_set_key_val(GROOVE_ACTION, 1, 0)
		pgs_set_key_val(GROOVE_ACTION, 2, 1)
		pgs_set_key_val(GROOVE_ACTION, 3, 0)
		pgs_set_key_val(COMMAND, 0, 2)
		$next_groove := 0
	end on
	{/Groove Callbacks}

{GUI Keyboard Functions}
	function label_octaves
		select ($octave_value)
			case 0
				$kb_count_1 := 0
				while ($kb_count_1 < $NUM_kb_NOTES)
				set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
					if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
						{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 0])}
						set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 0)
					end if
				inc($kb_count_1)
				end while
			case 1
				$kb_count_1 := 0
				while ($kb_count_1 < $NUM_kb_NOTES)
				set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
					if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
						{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 1])}
						set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 1)
					end if
				inc($kb_count_1)
				end while
			case 2
				$kb_count_1 := 0
				while ($kb_count_1 < $NUM_kb_NOTES)
				set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
					if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
						{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 2])}
						set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 2)
					end if
				inc($kb_count_1)
				end while
			case 3
				$kb_count_1 := 0
				while ($kb_count_1 < $NUM_kb_NOTES)
				set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
					if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
						{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 3])}
						set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 3)
					end if
				inc($kb_count_1)
				end while
			case 4
				$kb_count_1 := 0
				while ($kb_count_1 < $NUM_kb_NOTES)
				set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
					if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
						{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 4])}
						set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 4)
					end if
				inc($kb_count_1)
				end while
			case 5
				$kb_count_1 := 0
				while ($kb_count_1 < $NUM_kb_NOTES)
				set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
					if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
						{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 5])}
						set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 5)
					end if
				inc($kb_count_1)
				end while
			case 6
				$kb_count_1 := 0
				while ($kb_count_1 < $NUM_kb_NOTES)
				set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
					if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
						{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 6])}
						set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 6)
					end if
				inc($kb_count_1)
				end while
			case 7
				$kb_count_1 := 0
				while ($kb_count_1 < $NUM_kb_NOTES)
				set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
					if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
						{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 7])}
						set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 7)
					end if
				inc($kb_count_1)
				end while
			case 8
				$kb_count_1 := 0
				while ($kb_count_1 < $NUM_kb_NOTES)
				set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT,           "")
					if ($kb_count_1 = 0 or $kb_count_1 = 7 or $kb_count_1 = 14)
						{set_control_par_str(%kb_id[$kb_count_1],$CONTROL_PAR_TEXT, !oct_lbl[($kb_count_1/7) + 8])}
						set_control_par(%oct_lbl_id[($kb_count_1/7)],$CONTROL_PAR_PICTURE_STATE, $kb_count_1 / 7 + 8)
					end if
				inc($kb_count_1)
				end while
		end select
	end function

	function scroll_down_right
		if ($NI_CALLBACK_TYPE = $NI_CB_TYPE_UI_CONTROL)
			{Last octave #notes FOLD}
			$note_counter := 0
			while ($note_counter < 5)
				$blip_id := play_note($note_counter,1,0,1)
				{change_vol($blip_id,$MUTE,0)}
				set_event_par($blip_id,$EVENT_PAR_3,$note_counter + 31)
				inc($note_counter)
			end while
			{First 2 Octaves #notes MOVE right}
			$note_counter := 5
			while ($note_counter < 15)
				$blip_id := play_note($note_counter,1,0,1)
				{change_vol($blip_id,$MUTE,0)}
				set_event_par($blip_id,$EVENT_PAR_3,$note_counter + 16)
				inc($note_counter)
			end while
			{last octave white notes FOLD }
			$note_counter := 15
			while ($note_counter < 22)
				$blip_id := play_note($note_counter,1,0,1)
				{change_vol($blip_id,$MUTE,0)}
				set_event_par($blip_id,$EVENT_PAR_3,$note_counter - 1)
				inc($note_counter)
			end while
			{First 2 Octaves notes MOVE right}
			$note_counter := 22
			while ($note_counter < 36)
				$blip_id := play_note($note_counter,1,0,1)
				{change_vol($blip_id,$MUTE,0)}
				set_event_par($blip_id,$EVENT_PAR_3,$note_counter - 22)
				inc($note_counter)
			end while
			{pgs_set_key_val(COMMAND,0,-1)
			pgs_set_key_val(SETTINS_FLAG, 0, 0)}
		end if
	end function

	function scroll_up_left
		if ($NI_CALLBACK_TYPE = $NI_CB_TYPE_UI_CONTROL)
			{FIRST octave #notes FOLD}
			$note_counter := 0
			while ($note_counter < 5)
				$blip_id := play_note($note_counter,1,0,1)
				{change_vol($blip_id,$MUTE,0)}
				set_event_par($blip_id,$EVENT_PAR_3,$note_counter + 21)
				inc($note_counter)
			end while
			{LAST 2 Octaves #notes MOVE LEFT}
			$note_counter := 5
			while ($note_counter < 15)
				$blip_id := play_note($note_counter,1,0,1)
				{change_vol($blip_id,$MUTE,0)}
				set_event_par($blip_id,$EVENT_PAR_3,$note_counter + 21)
				inc($note_counter)
			end while
			{FIRST octave white notes FOLD }
			$note_counter := 15
			while ($note_counter < 22)
				$blip_id := play_note($note_counter,1,0,1)
				{change_vol($blip_id,$MUTE,0)}
				set_event_par($blip_id,$EVENT_PAR_3,$note_counter - 15)
				inc($note_counter)
			end while
			{LAST 2 Octaves notes MOVE RIGHT}
			$note_counter := 22
			while ($note_counter < 36)
				$blip_id := play_note($note_counter,1,0,1)
				{change_vol($blip_id,$MUTE,0)}
				set_event_par($blip_id,$EVENT_PAR_3,$note_counter - 15)
				inc($note_counter)
			end while
			{pgs_set_key_val(COMMAND,0,-1)
			pgs_set_key_val(SETTINS_FLAG, 0, 0)}
		end if
	end function

	function clear_GUI_keyboard
		$kb_count_3 := 0
		while ($kb_count_3 < $NUM_kb_NOTES)
			set_control_par(%kb_id[$kb_count_3],$CONTROL_PAR_VALUE,0)
			inc($kb_count_3)
		end while
	end function
	{/GUI Keyboard Functions}

{GUI Keyboard Callbacks}
	on ui_control ($octave_DOWN) 	{{Keyboard RIGHT Octave DOWN}
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 1)
		if ($limit_up_flag = 1)
			$limit_up_flag := 0
		end if
		
		dec($octave_value)
		
		if ($octave_value < 0)
			$octave_value := 0
			$limit_down_flag := 1
		end if
		
		$direction := $RIGHT
		$octave_DOWN := 0

		$kb_index := $kb_index + 12
		call clear_GUI_keyboard
		if ($kb_index < 36)
			set_control_par(%kb_id[%kb_GUI_remap[$kb_index]],$CONTROL_PAR_VALUE,1)
		end if

		call scroll_down_right
	end on

	on ui_control ($octave_UP) 	{Keyboard LEFT Octave UP}
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 1)
		if ($limit_down_flag = 1)
			$limit_down_flag := 0
		end if
		
		inc($octave_value)
		
		if ($octave_value > 8)
			$octave_value := 8
			$limit_up_flag := 1
		end if
		
		$direction := $LEFT
		$octave_UP := 0

		$kb_index := ($kb_index - 12) mod 36
		call clear_GUI_keyboard
		if ($kb_index > 0)
			set_control_par(%kb_id[%kb_GUI_remap[$kb_index]],$CONTROL_PAR_VALUE,1)
		end if

		call scroll_up_left
	end on
	
	on ui_control ($C_1)
	$active_key_sld := $octave_value * 12 + 0
	call update_mapping_editor_gui
	call clear_GUI_keyboard
	play_note(%current_mapping_data[$active_key_sld],100,0,-1)
	$C_1 := 1
	pgs_set_key_val(COMMAND,0,-1)
	pgs_set_key_val(SETTINS_FLAG, 0, 0)
 	end on
	on ui_control ($D_1)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 2
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$D_1 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($E_1)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 4
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$E_1 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($F_1)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 5
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$F_1 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($G_1)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 7
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$G_1 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($A_1)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 9
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$A_1 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($B_1)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 11
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$B_1 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($C_2)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 12
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$C_2 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($D_2)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 14
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$D_2 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($E_2)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 16
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$E_2 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($F_2)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 17
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$F_2 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($G_2)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 19
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$G_2 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($A_2)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 21
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$A_2 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($B_2)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 23
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$B_2 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($C_3)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 24
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$C_3 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($D_3)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 26
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$D_3 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($E_3)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 28
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$E_3 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($F_3)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 29
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$F_3 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($G_3)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 31
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$G_3 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($A_3)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 33
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$A_3 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($B_3)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 35
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$B_3 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Cshrp_1)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 1
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Cshrp_1 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Dshrp_1)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 3
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Dshrp_1 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Fshrp_1)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 6
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Fshrp_1 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Gshrp_1)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 8
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Gshrp_1 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Ashrp_1)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 10
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Ashrp_1 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Cshrp_2)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 13
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Cshrp_2 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Dshrp_2)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 15
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Dshrp_2 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Fshrp_2)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 18
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Fshrp_2 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Gshrp_2)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 20
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Gshrp_2 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Ashrp_2)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 22
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Ashrp_2 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Cshrp_3)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 25
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Cshrp_3 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Dshrp_3)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 27
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Dshrp_3 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Fshrp_3)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 30
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Fshrp_3 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Gshrp_3)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 32
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Gshrp_3 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	on ui_control ($Ashrp_3)
		call clear_GUI_keyboard
		$active_key_sld := $octave_value * 12 + 34
		call update_mapping_editor_gui
		play_note(%current_mapping_data[$active_key_sld],100,0,-1)
		$Ashrp_3 := 1
		pgs_set_key_val(COMMAND,0,-1)
		pgs_set_key_val(SETTINS_FLAG, 0, 0)
	end on
	{/GUI Keyboard Callbacks}

{PURGE System Callbacks}
	on ui_control ($load_ALL)
		$load_ALL := 1
		$purge_UNUSED := 0
		pgs_set_key_val(PURGE_MODE, 0, $purge_UNUSED)
 
		$group_count := 0
		while ($group_count < $GROUP_NUM)
			purge_group($group_count, 1)
			inc($group_count)
		end while
		message("Load ALL: " & $load_ALL & " | Purge Unsused: " & $purge_UNUSED & " | " &   pgs_get_key_val(PURGE_MODE, 0))
	end on

	on ui_control ($purge_UNUSED)
		$load_ALL := 0
		$purge_UNUSED := 1
		pgs_set_key_val(PURGE_MODE, 0, $purge_UNUSED)
		$group_count := 0
	    while ($group_count < $AC_NUM_GROUPS)
	        purge_group($group_count, %Ac_Group_PURGE_State[$group_count])
	        inc($group_count)
	    end while
    	$group_count := 0
        while ($group_count < $EL_NUM_GROUPS)
            purge_group($group_count + $AC_NUM_GROUPS, %El_Group_PURGE_State[$group_count])
            inc($group_count)
        end while
        message("Load ALL: " & $load_ALL & " | Purge Unsused: " & $purge_UNUSED & " | " &   pgs_get_key_val(PURGE_MODE, 0))
	end on

{SOUND PRESETS - CALLBACKS / FUNCTIONS}
	function update_sound_preset_menu
		{hide all}
		$arr_count_1 := 0
		while ($arr_count_1 < 7)
			set_control_par(%sound_preset_controls[$arr_count_1], $CONTROL_PAR_HIDE, $HIDE_WHOLE_CONTROL)
			set_control_par($user_dummy_menu_id, $CONTROL_PAR_HIDE, $HIDE_WHOLE_CONTROL)
			inc($arr_count_1)
		end while
		{show selected}
		if ($Preset_Category < 6)
			set_control_par(%sound_preset_controls[$Preset_Category], $CONTROL_PAR_HIDE, $HIDE_PART_NOTHING)	
			set_control_par($user_dummy_menu_id,$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
		else
			if (%user_num_snd_Presets[0] = 0)
				set_control_par(%sound_preset_controls[$Preset_Category],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
				set_control_par($user_dummy_menu_id,$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
			else
				set_control_par(%sound_preset_controls[$Preset_Category],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
				set_control_par($user_dummy_menu_id,$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
			end if
		end if
	end function

	{Sound Preset MENU Callback}
		on ui_control ($fact_sound_preset_menu_1)
			$last_sound_preset := $fact_sound_preset_menu_1
			$last_bank_1 := $fact_sound_preset_menu_1
			pgs_set_key_val(COMMAND, 0, -1)
			pgs_set_key_val(PRESET_DATA, 0, 1)
			pgs_set_key_val(PRESET_DATA, 1, 0)
			pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_1)
			pgs_set_key_val(PRESET_DATA, 4, 0)
			pgs_set_key_val(COMMAND, 0, 1)

			message(pgs_get_key_val(PURGE_MODE, 0))

			if (pgs_key_exists(PURGE_MODE))	
				if (pgs_get_key_val(PURGE_MODE, 0) = 1)	
	    			$group_count := 0
	    		    while ($group_count < $AC_NUM_GROUPS)
	    		        purge_group($group_count, %fact_snd_preset_Ac_Group_PURGE[$last_sound_preset * $AC_NUM_GROUPS + $group_count])
	    		        %Ac_Group_PURGE_State[$group_count] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $group_count)
	    		        inc($group_count)
	    		    end while
			    	$group_count := 0
			        while ($group_count < $EL_NUM_GROUPS)
			            purge_group($group_count + $AC_NUM_GROUPS, %fact_snd_preset_El_Group_PURGE[$last_sound_preset * $EL_NUM_GROUPS + $group_count])
			            %El_Group_PURGE_State[$group_count] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $group_count)
			            inc($group_count)
			        end while
	    		end if
	    	end if
		end on
		on ui_control ($fact_sound_preset_menu_2)
			$last_sound_preset := $fact_sound_preset_menu_2
			$last_bank_2 := $fact_sound_preset_menu_2
			pgs_set_key_val(COMMAND, 0, -1)
			pgs_set_key_val(PRESET_DATA, 0, 1)
			pgs_set_key_val(PRESET_DATA, 1, 0)
			pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_2)
			pgs_set_key_val(PRESET_DATA, 4, 0)
			pgs_set_key_val(COMMAND, 0, 1)
			
			if (pgs_key_exists(PURGE_MODE))	
				if (pgs_get_key_val(PURGE_MODE, 0) = 1)	
	    			$group_count := 0
	    		    while ($group_count < $AC_NUM_GROUPS)
	    		        purge_group($group_count, %fact_snd_preset_Ac_Group_PURGE[$last_sound_preset * $AC_NUM_GROUPS + $group_count])
	    		        %Ac_Group_PURGE_State[$group_count] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $group_count)
	    		        inc($group_count)
	    		    end while
			    	$group_count := 0
			        while ($group_count < $EL_NUM_GROUPS)
			            purge_group($group_count + $AC_NUM_GROUPS, %fact_snd_preset_El_Group_PURGE[$last_sound_preset * $EL_NUM_GROUPS + $group_count])
			            %El_Group_PURGE_State[$group_count] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $group_count)
			            inc($group_count)
			        end while
	    		end if
	    	end if
		end on
		on ui_control ($fact_sound_preset_menu_3)
			$last_sound_preset := $fact_sound_preset_menu_3
			$last_bank_3 := $fact_sound_preset_menu_3
			pgs_set_key_val(COMMAND, 0, -1)
			pgs_set_key_val(PRESET_DATA, 0, 1)
			pgs_set_key_val(PRESET_DATA, 1, 0)
			pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_3)
			pgs_set_key_val(PRESET_DATA, 4, 0)
			pgs_set_key_val(COMMAND, 0, 1)

			if (pgs_key_exists(PURGE_MODE))	
				if (pgs_get_key_val(PURGE_MODE, 0) = 1)	
	    			$group_count := 0
	    		    while ($group_count < $AC_NUM_GROUPS)
	    		        purge_group($group_count, %fact_snd_preset_Ac_Group_PURGE[$last_sound_preset * $AC_NUM_GROUPS + $group_count])
	    		        %Ac_Group_PURGE_State[$group_count] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $group_count)
	    		        inc($group_count)
	    		    end while
			    	$group_count := 0
			        while ($group_count < $EL_NUM_GROUPS)
			            purge_group($group_count + $AC_NUM_GROUPS, %fact_snd_preset_El_Group_PURGE[$last_sound_preset * $EL_NUM_GROUPS + $group_count])
			            %El_Group_PURGE_State[$group_count] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $group_count)
			            inc($group_count)
			        end while
	    		end if
	    	end if
		end on
		on ui_control ($fact_sound_preset_menu_4)
			$last_sound_preset := $fact_sound_preset_menu_4
			$last_bank_4 := $fact_sound_preset_menu_4
			pgs_set_key_val(COMMAND, 0, -1)
			pgs_set_key_val(PRESET_DATA, 0, 1)
			pgs_set_key_val(PRESET_DATA, 1, 0)
			pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_4)
			pgs_set_key_val(PRESET_DATA, 4, 0)
			pgs_set_key_val(COMMAND, 0, 1)

			if (pgs_key_exists(PURGE_MODE))	
				if (pgs_get_key_val(PURGE_MODE, 0) = 1)	
	    			$group_count := 0
	    		    while ($group_count < $AC_NUM_GROUPS)
	    		        purge_group($group_count, %fact_snd_preset_Ac_Group_PURGE[$last_sound_preset * $AC_NUM_GROUPS + $group_count])
	    		        %Ac_Group_PURGE_State[$group_count] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $group_count)
	    		        inc($group_count)
	    		    end while
			    	$group_count := 0
			        while ($group_count < $EL_NUM_GROUPS)
			            purge_group($group_count + $AC_NUM_GROUPS, %fact_snd_preset_El_Group_PURGE[$last_sound_preset * $EL_NUM_GROUPS + $group_count])
			            %El_Group_PURGE_State[$group_count] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $group_count)
			            inc($group_count)
			        end while
	    		end if
	    	end if
		end on
		on ui_control ($fact_sound_preset_menu_5)
			$last_sound_preset := $fact_sound_preset_menu_5
			$last_bank_5 := $fact_sound_preset_menu_5
			pgs_set_key_val(COMMAND, 0, -1)
			pgs_set_key_val(PRESET_DATA, 0, 1)
			pgs_set_key_val(PRESET_DATA, 1, 0)
			pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_5)
			pgs_set_key_val(PRESET_DATA, 4, 0)
			pgs_set_key_val(COMMAND, 0, 1)

			if (pgs_key_exists(PURGE_MODE))	
				if (pgs_get_key_val(PURGE_MODE, 0) = 1)	
	    			$group_count := 0
	    		    while ($group_count < $AC_NUM_GROUPS)
	    		        purge_group($group_count, %fact_snd_preset_Ac_Group_PURGE[$last_sound_preset * $AC_NUM_GROUPS + $group_count])
	    		        %Ac_Group_PURGE_State[$group_count] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $group_count)
	    		        inc($group_count)
	    		    end while
			    	$group_count := 0
			        while ($group_count < $EL_NUM_GROUPS)
			            purge_group($group_count + $AC_NUM_GROUPS, %fact_snd_preset_El_Group_PURGE[$last_sound_preset * $EL_NUM_GROUPS + $group_count])
			            %El_Group_PURGE_State[$group_count] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $group_count)
			            inc($group_count)
			        end while
	    		end if
	    	end if
		end on
		on ui_control ($fact_sound_preset_menu_6)
			$last_sound_preset := $fact_sound_preset_menu_6
			$last_bank_6 := $fact_sound_preset_menu_6
			pgs_set_key_val(COMMAND, 0, -1)
			pgs_set_key_val(PRESET_DATA, 0, 1)
			pgs_set_key_val(PRESET_DATA, 1, 0)
			pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_6)
			pgs_set_key_val(PRESET_DATA, 4, 0)
			pgs_set_key_val(COMMAND, 0, 1)

			if (pgs_key_exists(PURGE_MODE))	
				if (pgs_get_key_val(PURGE_MODE, 0) = 1)	
	    			$group_count := 0
	    		    while ($group_count < $AC_NUM_GROUPS)
	    		        purge_group($group_count, %fact_snd_preset_Ac_Group_PURGE[$last_sound_preset * $AC_NUM_GROUPS + $group_count])
	    		        %Ac_Group_PURGE_State[$group_count] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $group_count)
	    		        inc($group_count)
	    		    end while
			    	$group_count := 0
			        while ($group_count < $EL_NUM_GROUPS)
			            purge_group($group_count + $AC_NUM_GROUPS, %fact_snd_preset_El_Group_PURGE[$last_sound_preset * $EL_NUM_GROUPS + $group_count])
			            %El_Group_PURGE_State[$group_count] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $group_count)
			            inc($group_count)
			        end while
	    		end if
	    	end if
		end on
		on ui_control ($user_sound_preset_menu)
			$last_sound_preset := $user_sound_preset_menu
			$last_user_bank := $user_sound_preset_menu
			$user_sound_preset_menu_NEW := $user_sound_preset_menu
			pgs_set_key_val(COMMAND, 0, -1)
			pgs_set_key_val(PRESET_DATA, 0, 1)
			pgs_set_key_val(PRESET_DATA, 1, 0)
			pgs_set_key_val(PRESET_DATA, 2, $user_sound_preset_menu)
			pgs_set_key_val(PRESET_DATA, 4, 0)
			pgs_set_key_val(COMMAND, 0, 1)

			if (pgs_key_exists(PURGE_MODE))	
				if (pgs_get_key_val(PURGE_MODE, 0) = 1)	
	    			$group_count := 0
	    		    while ($group_count < $AC_NUM_GROUPS)
	    		        purge_group($group_count, %user_snd_preset_Ac_Group_PURGE[($last_sound_preset - $MAX_SOUND_FACT_PRESETS) * $AC_NUM_GROUPS + $group_count])
	    		        %Ac_Group_PURGE_State[$group_count] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $group_count)
	    		        inc($group_count)
	    		    end while
			    	$group_count := 0
			        while ($group_count < $EL_NUM_GROUPS)
			            purge_group($group_count + $AC_NUM_GROUPS, %user_snd_preset_El_Group_PURGE[($last_sound_preset - $MAX_SOUND_FACT_PRESETS) * $EL_NUM_GROUPS + $group_count])
			            %El_Group_PURGE_State[$group_count] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $group_count)
			            inc($group_count)
			        end while
	    		end if
	    	end if
		end on
		on ui_control ($user_sound_preset_menu_NEW)
			$last_sound_preset := $user_sound_preset_menu_NEW
			$last_user_bank := $user_sound_preset_menu_NEW
			$user_sound_preset_menu := $user_sound_preset_menu_NEW
			pgs_set_key_val(COMMAND, 0, -1)
			pgs_set_key_val(PRESET_DATA, 0, 1)
			pgs_set_key_val(PRESET_DATA, 1, 0)
			pgs_set_key_val(PRESET_DATA, 2, $user_sound_preset_menu_NEW)
			pgs_set_key_val(PRESET_DATA, 4, 0)
			pgs_set_key_val(COMMAND, 0, 1)

			if (pgs_key_exists(PURGE_MODE))	
				if (pgs_get_key_val(PURGE_MODE, 0) = 1)	
	    			$group_count := 0
	    		    while ($group_count < $AC_NUM_GROUPS)
	    		        purge_group($group_count, %user_snd_preset_Ac_Group_PURGE[($last_sound_preset - $MAX_SOUND_FACT_PRESETS) * $AC_NUM_GROUPS + $group_count])
	    		        %Ac_Group_PURGE_State[$group_count] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $group_count)
	    		        inc($group_count)
	    		    end while
			    	$group_count := 0
			        while ($group_count < $EL_NUM_GROUPS)
			            purge_group($group_count + $AC_NUM_GROUPS, %user_snd_preset_El_Group_PURGE[($last_sound_preset - $MAX_SOUND_FACT_PRESETS) * $EL_NUM_GROUPS + $group_count])
			            %El_Group_PURGE_State[$group_count] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $group_count)
			            inc($group_count)
			        end while
	    		end if
	    	end if
		end on
		
		on ui_control ($sound_preset_next)
			if($safe_flag_3 = 1)
				$safe_flag_3 := 0

				select ($Preset_Category)

					case $FACTORY_PRESET_CAT_1
						$sound_preset_next := 0
						if ($fact_sound_preset_menu_1 + 1 <= $NUM_FACT_SOUND_PRESETS_1 - 1)
						    inc ($fact_sound_preset_menu_1)
						else
						    $fact_sound_preset_menu_1 := 0
						end if
						$last_sound_preset := $fact_sound_preset_menu_1
						pgs_set_key_val(COMMAND, 0, -1)
							pgs_set_key_val(PRESET_DATA, 0, 1)
							pgs_set_key_val(PRESET_DATA, 1, 0)
							pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_1)
							pgs_set_key_val(PRESET_DATA, 4, 0)
						pgs_set_key_val(COMMAND, 0, 1)
					case $FACTORY_PRESET_CAT_2
						$sound_preset_next := 0
						if ($fact_sound_preset_menu_2 + 1 <= $NUM_FACT_SOUND_PRESETS_2 - 1 + $NUM_FACT_SOUND_PRESETS_1)
						    inc ($fact_sound_preset_menu_2)
						else
						    $fact_sound_preset_menu_2 := $NUM_FACT_SOUND_PRESETS_1
						end if
						$last_sound_preset := $fact_sound_preset_menu_2
						pgs_set_key_val(COMMAND, 0, -1)
							pgs_set_key_val(PRESET_DATA, 0, 1)
							pgs_set_key_val(PRESET_DATA, 1, 0)
							pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_2)
							pgs_set_key_val(PRESET_DATA, 4, 0)
						pgs_set_key_val(COMMAND, 0, 1)
					case $FACTORY_PRESET_CAT_3
						$sound_preset_next := 0
						if ($fact_sound_preset_menu_3 + 1 <= $NUM_FACT_SOUND_PRESETS_3 - 1 + $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2)
						    inc ($fact_sound_preset_menu_3)
						else
						    $fact_sound_preset_menu_3 := $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2
						end if
						$last_sound_preset := $fact_sound_preset_menu_3
						pgs_set_key_val(COMMAND, 0, -1)
							pgs_set_key_val(PRESET_DATA, 0, 1)
							pgs_set_key_val(PRESET_DATA, 1, 0)
							pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_3)
							pgs_set_key_val(PRESET_DATA, 4, 0)
						pgs_set_key_val(COMMAND, 0, 1)
					case $FACTORY_PRESET_CAT_4
						$sound_preset_next := 0
						if ($fact_sound_preset_menu_4 + 1 <= $NUM_FACT_SOUND_PRESETS_4 - 1 + $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3)
						    inc ($fact_sound_preset_menu_4)
						else
						    $fact_sound_preset_menu_4 := $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3
						end if
						$last_sound_preset := $fact_sound_preset_menu_4
						pgs_set_key_val(COMMAND, 0, -1)
							pgs_set_key_val(PRESET_DATA, 0, 1)
							pgs_set_key_val(PRESET_DATA, 1, 0)
							pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_4)
							pgs_set_key_val(PRESET_DATA, 4, 0)
						pgs_set_key_val(COMMAND, 0, 1)
					case $FACTORY_PRESET_CAT_5
						$sound_preset_next := 0
						if ($fact_sound_preset_menu_5 + 1 <= $NUM_FACT_SOUND_PRESETS_5 - 1 + $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4)
						    inc ($fact_sound_preset_menu_5)
						else
						    $fact_sound_preset_menu_5 := $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4
						end if
						$last_sound_preset := $fact_sound_preset_menu_5
						pgs_set_key_val(COMMAND, 0, -1)
							pgs_set_key_val(PRESET_DATA, 0, 1)
							pgs_set_key_val(PRESET_DATA, 1, 0)
							pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_5)
							pgs_set_key_val(PRESET_DATA, 4, 0)
						pgs_set_key_val(COMMAND, 0, 1)
					case $FACTORY_PRESET_CAT_6
						$sound_preset_next := 0
						if ($fact_sound_preset_menu_6 + 1 <= $NUM_FACT_SOUND_PRESETS_6 - 1 + $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4 + $NUM_FACT_SOUND_PRESETS_5)
						    inc ($fact_sound_preset_menu_6)
						else
						    $fact_sound_preset_menu_6 := $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4 + $NUM_FACT_SOUND_PRESETS_5
						end if
						$last_sound_preset := $fact_sound_preset_menu_6
						pgs_set_key_val(COMMAND, 0, -1)
							pgs_set_key_val(PRESET_DATA, 0, 1)
							pgs_set_key_val(PRESET_DATA, 1, 0)
							pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_6)
							pgs_set_key_val(PRESET_DATA, 4, 0)
						pgs_set_key_val(COMMAND, 0, 1)
					case $USER_PRESET_CAT
						$sound_preset_next := 0
						if ($user_sound_preset_menu + 1 <= %user_num_snd_Presets[0] - 1 + $MAX_SOUND_FACT_PRESETS)
						    inc ($user_sound_preset_menu)
						    $user_sound_preset_menu_NEW := $user_sound_preset_menu
						else
						    $user_sound_preset_menu := $MAX_SOUND_FACT_PRESETS
						    $user_sound_preset_menu_NEW := $MAX_SOUND_FACT_PRESETS
						end if
						$last_sound_preset := $user_sound_preset_menu
						pgs_set_key_val(COMMAND, 0, -1)
						pgs_set_key_val(PRESET_DATA, 0, 1)
						pgs_set_key_val(PRESET_DATA, 1, 0)
						pgs_set_key_val(PRESET_DATA, 2, $user_sound_preset_menu)
						pgs_set_key_val(PRESET_DATA, 4, 0)
						pgs_set_key_val(COMMAND, 0, 1)
				end select

				$preset_change_flag := 0
				$safe_flag_3 := 1
			end if
			if ($Preset_Category < 6)
				if (pgs_key_exists(PURGE_MODE))	
					if (pgs_get_key_val(PURGE_MODE, 0) = 1)	
		    			$group_count := 0
		    		    while ($group_count < $AC_NUM_GROUPS)
		    		        purge_group($group_count, %fact_snd_preset_Ac_Group_PURGE[$last_sound_preset * $AC_NUM_GROUPS + $group_count])
		    		        %Ac_Group_PURGE_State[$group_count] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $group_count)
		    		        inc($group_count)
		    		    end while
				    	$group_count := 0
				        while ($group_count < $EL_NUM_GROUPS)
				            purge_group($group_count + $AC_NUM_GROUPS, %fact_snd_preset_El_Group_PURGE[$last_sound_preset * $EL_NUM_GROUPS + $group_count])
				            %El_Group_PURGE_State[$group_count] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $group_count)
				            inc($group_count)
				        end while
		    		end if
		    	end if
			else
				if (pgs_key_exists(PURGE_MODE))	
					if (pgs_get_key_val(PURGE_MODE, 0) = 1)	
		    			$group_count := 0
		    		    while ($group_count < $AC_NUM_GROUPS)
		    		        purge_group($group_count, %user_snd_preset_Ac_Group_PURGE[($last_sound_preset - $MAX_SOUND_FACT_PRESETS) * $AC_NUM_GROUPS + $group_count])
		    		        %Ac_Group_PURGE_State[$group_count] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $group_count)
		    		        inc($group_count)
		    		    end while
				    	$group_count := 0
				        while ($group_count < $EL_NUM_GROUPS)
				            purge_group($group_count + $AC_NUM_GROUPS, %user_snd_preset_El_Group_PURGE[($last_sound_preset - $MAX_SOUND_FACT_PRESETS) * $EL_NUM_GROUPS + $group_count])
				            %El_Group_PURGE_State[$group_count] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $group_count)
				            inc($group_count)
				        end while
		    		end if
		    	end if			
			end if
		end on

		on ui_control ($sound_preset_prev)
			if($safe_flag_3 = 1)
				$safe_flag_3 := 0
				
				select ($Preset_Category)

					case $FACTORY_PRESET_CAT_1
						$sound_preset_prev := 0
						if ($fact_sound_preset_menu_1 - 1 >= 0)
						    dec ($fact_sound_preset_menu_1)
						else
							$fact_sound_preset_menu_1 := $NUM_FACT_SOUND_PRESETS_1 - 1
						end if
						$last_sound_preset := $fact_sound_preset_menu_1
						pgs_set_key_val(COMMAND, 0, -1)
							pgs_set_key_val(PRESET_DATA, 0, 1)
							pgs_set_key_val(PRESET_DATA, 1, 0)
							pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_1)
							pgs_set_key_val(PRESET_DATA, 4, 0)
						pgs_set_key_val(COMMAND, 0, 1)
					case $FACTORY_PRESET_CAT_2
						$sound_preset_prev := 0
						if ($fact_sound_preset_menu_2 - 1 >= $NUM_FACT_SOUND_PRESETS_1)
						    dec ($fact_sound_preset_menu_2)
						else
							$fact_sound_preset_menu_2 := $NUM_FACT_SOUND_PRESETS_2 - 1 + $NUM_FACT_SOUND_PRESETS_1
						end if
						$last_sound_preset := $fact_sound_preset_menu_2
						pgs_set_key_val(COMMAND, 0, -1)
							pgs_set_key_val(PRESET_DATA, 0, 1)
							pgs_set_key_val(PRESET_DATA, 1, 0)
							pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_2)
							pgs_set_key_val(PRESET_DATA, 4, 0)
						pgs_set_key_val(COMMAND, 0, 1)
					case $FACTORY_PRESET_CAT_3
						$sound_preset_prev := 0
						if ($fact_sound_preset_menu_3 - 1 >= $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2)
						    dec ($fact_sound_preset_menu_3)
						else
							$fact_sound_preset_menu_3 := $NUM_FACT_SOUND_PRESETS_3 - 1 + $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2
						end if
						$last_sound_preset := $fact_sound_preset_menu_3
						pgs_set_key_val(COMMAND, 0, -1)
							pgs_set_key_val(PRESET_DATA, 0, 1)
							pgs_set_key_val(PRESET_DATA, 1, 0)
							pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_3)
							pgs_set_key_val(PRESET_DATA, 4, 0)
						pgs_set_key_val(COMMAND, 0, 1)
					case $FACTORY_PRESET_CAT_4
						$sound_preset_prev := 0
						if ($fact_sound_preset_menu_4 - 1 >= $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3)
						    dec ($fact_sound_preset_menu_4)
						else
							$fact_sound_preset_menu_4 := $NUM_FACT_SOUND_PRESETS_4 - 1 + $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3
						end if
						$last_sound_preset := $fact_sound_preset_menu_4
						pgs_set_key_val(COMMAND, 0, -1)
							pgs_set_key_val(PRESET_DATA, 0, 1)
							pgs_set_key_val(PRESET_DATA, 1, 0)
							pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_4)
							pgs_set_key_val(PRESET_DATA, 4, 0)
						pgs_set_key_val(COMMAND, 0, 1)
					case $FACTORY_PRESET_CAT_5
						$sound_preset_prev := 0
						if ($fact_sound_preset_menu_5 - 1 >= $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4)
						    dec ($fact_sound_preset_menu_5)
						else
							$fact_sound_preset_menu_5 := $NUM_FACT_SOUND_PRESETS_5 - 1 + $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4
						end if
						$last_sound_preset := $fact_sound_preset_menu_5
						pgs_set_key_val(COMMAND, 0, -1)
							pgs_set_key_val(PRESET_DATA, 0, 1)
							pgs_set_key_val(PRESET_DATA, 1, 0)
							pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_5)
							pgs_set_key_val(PRESET_DATA, 4, 0)
						pgs_set_key_val(COMMAND, 0, 1)
					case $FACTORY_PRESET_CAT_6
						$sound_preset_prev := 0
						if ($fact_sound_preset_menu_6 - 1 >= $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4 + $NUM_FACT_SOUND_PRESETS_5)
						    dec ($fact_sound_preset_menu_6)
						else
							$fact_sound_preset_menu_6 := $NUM_FACT_SOUND_PRESETS_6 - 1 + $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4 + $NUM_FACT_SOUND_PRESETS_5
						end if
						$last_sound_preset := $fact_sound_preset_menu_6
						pgs_set_key_val(COMMAND, 0, -1)
							pgs_set_key_val(PRESET_DATA, 0, 1)
							pgs_set_key_val(PRESET_DATA, 1, 0)
							pgs_set_key_val(PRESET_DATA, 2, $fact_sound_preset_menu_6)
							pgs_set_key_val(PRESET_DATA, 4, 0)
						pgs_set_key_val(COMMAND, 0, 1)
					case $USER_PRESET_CAT
						$sound_preset_prev := 0
						if ($user_sound_preset_menu - 1 >= $MAX_SOUND_FACT_PRESETS)
						    dec ($user_sound_preset_menu)
						    $user_sound_preset_menu_NEW := $user_sound_preset_menu
						else
							$user_sound_preset_menu := %user_num_snd_Presets[0] - 1 + $MAX_SOUND_FACT_PRESETS
							$user_sound_preset_menu_NEW := $user_sound_preset_menu
						end if
						$last_sound_preset := $user_sound_preset_menu
						pgs_set_key_val(COMMAND, 0, -1)
						pgs_set_key_val(PRESET_DATA, 0, 1)
						pgs_set_key_val(PRESET_DATA, 1, 0)
						pgs_set_key_val(PRESET_DATA, 2, $user_sound_preset_menu)
						pgs_set_key_val(PRESET_DATA, 4, 0)
						pgs_set_key_val(COMMAND, 0, 1)
				end select

				$preset_change_flag := 0
				$safe_flag_3 := 1
			end if
			
			if ($Preset_Category < 6)
				if (pgs_key_exists(PURGE_MODE))	
					if (pgs_get_key_val(PURGE_MODE, 0) = 1)	
		    			$group_count := 0
		    		    while ($group_count < $AC_NUM_GROUPS)
		    		        purge_group($group_count, %fact_snd_preset_Ac_Group_PURGE[$last_sound_preset * $AC_NUM_GROUPS + $group_count])
		    		        %Ac_Group_PURGE_State[$group_count] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $group_count)
		    		        inc($group_count)
		    		    end while
				    	$group_count := 0
				        while ($group_count < $EL_NUM_GROUPS)
				            purge_group($group_count + $AC_NUM_GROUPS, %fact_snd_preset_El_Group_PURGE[$last_sound_preset * $EL_NUM_GROUPS + $group_count])
				            %El_Group_PURGE_State[$group_count] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $group_count)
				            inc($group_count)
				        end while
		    		end if
		    	end if
			else
				if (pgs_key_exists(PURGE_MODE))	
					if (pgs_get_key_val(PURGE_MODE, 0) = 1)	
		    			$group_count := 0
		    		    while ($group_count < $AC_NUM_GROUPS)
		    		        purge_group($group_count, %user_snd_preset_Ac_Group_PURGE[($last_sound_preset - $MAX_SOUND_FACT_PRESETS) * $AC_NUM_GROUPS + $group_count])
		    		        %Ac_Group_PURGE_State[$group_count] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $group_count)
		    		        inc($group_count)
		    		    end while
				    	$group_count := 0
				        while ($group_count < $EL_NUM_GROUPS)
				            purge_group($group_count + $AC_NUM_GROUPS, %user_snd_preset_El_Group_PURGE[($last_sound_preset - $MAX_SOUND_FACT_PRESETS) * $EL_NUM_GROUPS + $group_count])
				            %El_Group_PURGE_State[$group_count] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $group_count)
				            inc($group_count)
				        end while
		    		end if
		    	end if			
			end if
		end on

	{CATEGORY MENU Callback}
		on ui_control ($category_mnu)
			$Preset_Category := $category_mnu
			call update_sound_preset_menu
			pgs_set_key_val(COMMAND, 0, -1)
				pgs_set_key_val(PRESET_DATA, 0, 1)
				pgs_set_key_val(PRESET_DATA, 1, 0)
				pgs_set_key_val(PRESET_DATA, 2, $last_sound_preset)
				pgs_set_key_val(PRESET_DATA, 4, 0)
				pgs_set_key_val(PRESET_DATA, 5, $Preset_Category)
			pgs_set_key_val(COMMAND, 0, 1)
			select ($Preset_Category)
				case 0
					$last_sound_preset := $last_bank_1
				case 1
					$last_sound_preset := $last_bank_2
				case 2
					$last_sound_preset := $last_bank_3
				case 3
					$last_sound_preset := $last_bank_4
				case 4
					$last_sound_preset := $last_bank_5
				case 5
					$last_sound_preset := $last_bank_6
				case 6
					$last_sound_preset := $last_user_bank
			end select
			if ($Preset_Category < 6)
				set_control_par($user_dummy_menu_id, $CONTROL_PAR_HIDE, $HIDE_WHOLE_CONTROL)
				if (pgs_key_exists(PURGE_MODE))	
					if (pgs_get_key_val(PURGE_MODE, 0) = 1)	
		    			$group_count := 0
		    		    while ($group_count < $AC_NUM_GROUPS)
		    		        purge_group($group_count, %fact_snd_preset_Ac_Group_PURGE[$last_sound_preset * $AC_NUM_GROUPS + $group_count])
		    		        %Ac_Group_PURGE_State[$group_count] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $group_count)
		    		        inc($group_count)
		    		    end while
				    	$group_count := 0
				        while ($group_count < $EL_NUM_GROUPS)
				            purge_group($group_count + $AC_NUM_GROUPS, %fact_snd_preset_El_Group_PURGE[$last_sound_preset * $EL_NUM_GROUPS + $group_count])
				            %El_Group_PURGE_State[$group_count] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $group_count)
				            inc($group_count)
				        end while
		    		end if
		    	end if
			else
				if (pgs_key_exists(PURGE_MODE))	
					if (pgs_get_key_val(PURGE_MODE, 0) = 1)
						if (%user_num_snd_Presets[0] > 0)
		    				$group_count := 0
		    			    while ($group_count < $AC_NUM_GROUPS)
		    			        purge_group($group_count, %user_snd_preset_Ac_Group_PURGE[($last_sound_preset - $MAX_SOUND_FACT_PRESETS) * $AC_NUM_GROUPS + $group_count])
		    			        %Ac_Group_PURGE_State[$group_count] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $group_count)
		    			        inc($group_count)
		    			    end while
				    		$group_count := 0
				    	    while ($group_count < $EL_NUM_GROUPS)
				    	        purge_group($group_count + $AC_NUM_GROUPS, %user_snd_preset_El_Group_PURGE[($last_sound_preset - $MAX_SOUND_FACT_PRESETS) * $EL_NUM_GROUPS + $group_count])
				    	        %El_Group_PURGE_State[$group_count] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $group_count)
				    	        inc($group_count)
				    	    end while
						end if
		    		end if
		    	end if			
			end if
		end on

on poly_at
	if (%POLY_AT[$POLY_AT_NUM] = $AT_THRESHOLD)
		select (%FACTORY_MAPPING[$current_mapping_preset_mnu * 128 + $POLY_AT_NUM])
			case 75 to 79
				play_note($CYMB1_CHOKE, 100, 0, 100)
			case 80 to 84
				play_note($CYMB2_CHOKE, 100, 0, 100)
			case 85 to 90
				play_note($CYMB3_CHOKE, 100, 0, 100)
			case 83 to 86
				play_note($CYMB4_CHOKE, 100, 0, 100)
			case 87 to 90
				play_note($CYMB5_CHOKE, 100, 0, 100)
			case 91 to 94
				play_note($CYMB6_CHOKE, 100, 0, 100)
			case 95 to 98
				play_note($CYMB7_CHOKE, 100, 0, 100)
		end select
	end if	
end on

{on listener
	select ($NI_SIGNAL_TYPE)
		case $NI_SIGNAL_TIMER_MS
			call key_coloring
			call update_sound_preset_menu
			pgs_set_key_val(COMMAND, 0, -1)
			$count_1 := 0
			while ($count_1 < 128)
				pgs_set_key_val(MAPPING, $count_1, %inverse_mapping_data[$count_1])
				inc($count_1)
			end while
			pgs_set_key_val(COMMAND, 0, 6)
			change_listener_par($NI_SIGNAL_TIMER_MS,0)
	end select
end on}

on async_complete
	if ($NI_ASYNC_ID = $save_user_mapping_data_id)
		$save_user_mapping_data_id := -1
	end if
	if ($NI_ASYNC_ID = $save_user_mapping_names_id)
		$save_user_mapping_names_id := -1
	end if
	if ($NI_ASYNC_ID = $save_num_user_presets_id)
		$save_num_user_presets_id := -1
	end if

	if ($NI_ASYNC_ID = $load_num_user_presets_id)
		if($NI_ASYNC_EXIT_STATUS # 1)
			while($init_flag = 1)
				wait(75)
			end while
		end if
	end if
	if ($NI_ASYNC_ID = $load_user_mapping_data_id)
		if($NI_ASYNC_EXIT_STATUS # 1)
			while($init_flag = 1)
				wait(75)
			end while
		end if
	end if
	if ($NI_ASYNC_ID = $load_user_mapping_names_id)
		if($NI_ASYNC_EXIT_STATUS # 1)
			while($init_flag = 1)
				wait(75)
			end while
		end if
	end if
	if ($NI_ASYNC_ID = %load_check_id[00])
		if($NI_ASYNC_EXIT_STATUS # 1)
			%user_num_snd_Presets[0] := 0

			$arr_count_1 := 0
			while($arr_count_1 < $NUM_USER_SOUND_PRESETS)
				set_menu_item_visibility(%sound_preset_controls[06], $arr_count_1, 0)
				set_menu_item_visibility($user_dummy_menu_id, $arr_count_1, 0)
				inc($arr_count_1)
			end while
			
			set_control_par(%sound_preset_controls[06], $CONTROL_PAR_HIDE,	$HIDE_WHOLE_CONTROL)
			set_control_par($user_dummy_menu_id,		$CONTROL_PAR_HIDE,	$HIDE_PART_NOTHING)
		end if
	end if
	if ($NI_ASYNC_ID = %load_check_id[01])
		if($NI_ASYNC_EXIT_STATUS # 1)
			while($init_flag = 1)
				wait(75)
			end while
		end if
	end if
	if ($NI_ASYNC_ID = %load_check_id[02])
		if($NI_ASYNC_EXIT_STATUS # 1)
			while($init_flag = 1)
				wait(75)
			end while
		end if
	end if
	if ($NI_ASYNC_ID = %load_check_id[03])
		if($NI_ASYNC_EXIT_STATUS # 1)
			while($init_flag = 1)
				wait(75)
			end while
		end if
	end if
	if ($NI_ASYNC_ID = $sound_preset_load_id_1)
		$sound_preset_load_id_1 := -1
	end if
	if ($NI_ASYNC_ID = $sound_preset_load_id_2)
		$sound_preset_load_id_2 := -1
	end if
	if ($NI_ASYNC_ID = $sound_preset_load_id_3)
		$sound_preset_load_id_3 := -1
	end if
	if ($NI_ASYNC_ID = $sound_preset_load_id_4)
		$sound_preset_load_id_4 := -1
	end if
end on

on note
	$cur_note := $EVENT_NOTE
	{message(%current_mapping_data[$EVENT_NOTE] & " | " & $EVENT_NOTE)}
	$played_key := $EVENT_NOTE
	set_key_pressed($played_key, 1)

	{Select By MIDI Keyboard Only - NOT from the MIDI file playing}
	if($cur_note # $last_note)
		if (get_event_par($EVENT_ID, $EVENT_PAR_SOURCE) # 0 and $NI_TRANSPORT_RUNNING # 1)
			$active_key_sld := $EVENT_NOTE
			call update_mapping_editor_gui
		end if
		$last_note := $cur_note
	end if

	if (get_event_par($EVENT_ID, $EVENT_PAR_SOURCE) # 1) {from this script}
		select ($EVENT_NOTE)
			case 0 to 35
				$octave_value := 0
				call label_octaves
			case 36 to 71
				$octave_value := 3
				call label_octaves
			case 72 to 107
				$octave_value := 6
				call label_octaves
			case 108 to 127
				$octave_value := 8
				call label_octaves
		end select

		{GUI Keyboard Coloring Update}
		if ($EVENT_NOTE < 108)
			if (search(%white_keys,$EVENT_NOTE mod 12) # -1)
				{WHITE}
				$kb_index := $EVENT_NOTE mod 36
				call clear_GUI_keyboard
				if (get_event_par($EVENT_ID, $EVENT_PAR_SOURCE) # 0)
					set_control_par(%kb_id[%kb_GUI_remap[$kb_index]],$CONTROL_PAR_VALUE,1)
				end if
			else
				{BLACK}
				$kb_index := $EVENT_NOTE mod 36
				call clear_GUI_keyboard
				if (get_event_par($EVENT_ID, $EVENT_PAR_SOURCE) # 0)
					set_control_par(%kb_id[%kb_GUI_remap[$kb_index]],$CONTROL_PAR_VALUE,1)
				end if
			end if
		else
			if (search(%white_keys,$EVENT_NOTE mod 12) # -1)
				{WHITE}
				$kb_index := $EVENT_NOTE mod 36
				$kb_index := $kb_index + 12
				call clear_GUI_keyboard
				if (get_event_par($EVENT_ID, $EVENT_PAR_SOURCE) # 0)
					set_control_par(%kb_id[%kb_GUI_remap[$kb_index]],$CONTROL_PAR_VALUE,1)
				end if
			else
				{BLACK}
				$kb_index := $EVENT_NOTE mod 36
				$kb_index := $kb_index + 12
				call clear_GUI_keyboard
				if (get_event_par($EVENT_ID, $EVENT_PAR_SOURCE) # 0)
					set_control_par(%kb_id[%kb_GUI_remap[$kb_index]],$CONTROL_PAR_VALUE,1)
				end if
			end if
		end if

		if (in_range($EVENT_NOTE,$MIDI_PTTRN_LOW,$MIDI_PTTRN_HIGH) and get_event_par($EVENT_ID, $EVENT_PAR_SOURCE) = -1)
			set_event_par($EVENT_ID,$EVENT_PAR_1,$IS_KEYSWITCH)
			{message("")}
			$play := 1
			$playing_flag := 1
			pgs_set_key_val(COMMAND, 0, -1)
			pgs_set_key_val(PLAY_BUTTON, 0, $play)
			pgs_set_key_val(COMMAND, 0,  7)
			inc($key_counter)
		end if
	end if
	
	{Mapping}
	if (%current_mapping_data[$EVENT_NOTE] = -1 or %KEY_USED[%current_mapping_data[$EVENT_NOTE]] = 0)
		ignore_event($EVENT_ID)
		exit
	else
		change_note($EVENT_ID, %current_mapping_data[$EVENT_NOTE])
	end if

	{message("EVENT_NOTE: " & $EVENT_NOTE & " cur_note: " & $cur_note & " - inverse FACT cur_mapping_data[$cur_note] is " & %inverse_mapping_data[%FACTORY_MAPPING[$current_mapping_preset_mnu * 128 + $cur_note]] & "   ***   " & get_key_name(%inverse_mapping_data[%FACTORY_MAPPING[$current_mapping_preset_mnu * 128 + $cur_note]]) & " *** Note Played: " & %inverse_mapping_data[%FACTORY_MAPPING[$current_mapping_preset_mnu * 128 + $cur_note]] & ...
		" " & "Instrument: " & !INSTRUMENT_NAMES[$instruments_mnu]& " *** Articulation: " & !ARTICULATION_NAMES[%FACTORY_MAPPING[$current_mapping_preset_mnu * 128 + $cur_note]])}
	{message( get_key_name(%inverse_mapping_data[%FACTORY_MAPPING[$current_mapping_preset_mnu * 128 + $cur_note]]) & " *** Note Played: " & %inverse_mapping_data[%FACTORY_MAPPING[$current_mapping_preset_mnu * 128 + $cur_note]] & ...
			" " & "Instrument: " & !INSTRUMENT_NAMES[$instruments_mnu]& " *** Articulation: " & !ARTICULATION_NAMES[%FACTORY_MAPPING[$current_mapping_preset_mnu * 128 + $cur_note]])}
	
	{Velocity Curve & Range}
	change_velo($EVENT_ID, %table[$cur_note * 128 + $EVENT_VELOCITY])
end on

on release
	if ($limit_down_flag = 1 or $limit_up_flag = 1)
		exit
	end if

	{set_key_pressed($played_key, 0)}

	if (get_event_par($EVENT_ID,$EVENT_PAR_SOURCE) = $CURRENT_SCRIPT_SLOT)
		if ($direction = $RIGHT) {Keyboard ->RIGHT, Octave DOWN}
			{Last octave #notes FOLD}
			if (in_range($EVENT_NOTE,0,4))
				$note_index := get_event_par($EVENT_ID,$EVENT_PAR_3)
			    $break_while := 0
			    $anim_counter_1 := 0
			    while ($anim_counter_1 < 126 and $break_while = 0) 
			        inc($anim_counter_1)
			    	set_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X, %kb_CONTROL_PAR[00 + ($note_index * 07)] + $anim_counter_1 + $KB_X_POS)
		    	
			        	if (get_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X)  > 430  + $KB_X_POS) 	{if element reached right border}
			        		$break_while := 1
			        		
			        		$anim_counter_2 := %kb_CONTROL_PAR[0] - 6
			        		while ($anim_counter_2 <= %kb_CONTROL_PAR[00 + (($note_index - 10) * 07)])
			        			set_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X, $anim_counter_2 + $KB_X_POS)
			        			wait($ANIM_FRAME_RATE)
			        			inc($anim_counter_2)
			        		end while

			        	end if
					wait($ANIM_FRAME_RATE)
			    end while 
			end if
			{First 2 Octaves #notes MOVE right}
			if (in_range($EVENT_NOTE,5,14))
				$note_index := get_event_par($EVENT_ID,$EVENT_PAR_3)
			    $break_while := 0
			    $anim_counter_1 := 0
			    while ($anim_counter_1 < 126 and $break_while = 0) 
			        inc($anim_counter_1)
				    	set_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X, %kb_CONTROL_PAR[00 + ($note_index * 07)] + $anim_counter_1 + $KB_X_POS)
					wait($ANIM_FRAME_RATE)
			    end while 
			end if
			{last octave white notes FOLD }
			if (in_range($EVENT_NOTE,15,21))
				$note_index := get_event_par($EVENT_ID,$EVENT_PAR_3)
			    $break_while := 0
			    $anim_counter_1 := 0
			    while ($anim_counter_1 < 126 and $break_while = 0) 
			        inc($anim_counter_1)
				    	set_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X, %kb_CONTROL_PAR[00 + ($note_index * 07)] + $anim_counter_1 + $KB_X_POS)
			    	    	if (get_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X)  > 430 + $KB_X_POS) 	{if element reached right border}
			    	    		$break_while := 1
			    	    		$anim_counter_2 := %kb_CONTROL_PAR[0] - 6
			    	    		while ($anim_counter_2 <= %kb_CONTROL_PAR[00 + (($note_index - 14) * 07)])
			    	    			set_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X, $anim_counter_2 + $KB_X_POS)
			    	    			wait($ANIM_FRAME_RATE)
			    	    			inc($anim_counter_2)
			    	    		end while
			    	    	end if
					wait($ANIM_FRAME_RATE)
			    end while
			end if
			{First 2 Octaves notes MOVE right}
			if (in_range($EVENT_NOTE,22,35))
				$note_index := get_event_par($EVENT_ID,$EVENT_PAR_3)
			    $break_while := 0
			    $anim_counter_1 := 0
			    while ($anim_counter_1 < 126 and $break_while = 0) 
			        inc($anim_counter_1)
				    	set_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X, %kb_CONTROL_PAR[00 + ($note_index * 07)] + $anim_counter_1 + $KB_X_POS)
					wait($ANIM_FRAME_RATE)
			    end while 
			end if

			{after slide illusion reposition to original position}
			$kb_count_1 := 0
			while ($kb_count_1 < $NUM_kb_NOTES)
				set_control_par(%kb_id[$kb_count_1],$CONTROL_PAR_POS_X,           %kb_CONTROL_PAR[00 + ($kb_count_1 * 07)] + $KB_X_POS)
			inc($kb_count_1)
			end while
			
			call label_octaves
		else	
			{keyboard -> $LEFT - OCTAVE UP}
			{FIRST octave #notes FOLD}
			if (in_range($EVENT_NOTE,0,4))
				set_control_par_str(%kb_id[0],$CONTROL_PAR_TEXT, !folded_oct_lbl[$octave_value])
				$note_index := get_event_par($EVENT_ID,$EVENT_PAR_3)
			    $break_while := 0
			    $anim_counter_1 := 0
			    while ($anim_counter_1 < 126 and $break_while = 0) 
			        inc($anim_counter_1)
			    	set_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X, %kb_CONTROL_PAR[00 + ($note_index * 07)] - $anim_counter_1 + $KB_X_POS)
			   	
			        	if (get_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X) < 59 + $KB_X_POS) 	{if element reached right border}
			        		$break_while := 1
			        		$anim_counter_2 := %kb_CONTROL_PAR[00 + (20 * 07)] + 16
			        		while ($anim_counter_2 >= %kb_CONTROL_PAR[00 + (($note_index + 10) * 07)])
			        			set_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X, $anim_counter_2 + $KB_X_POS)
			        			wait($ANIM_FRAME_RATE)
			        			dec($anim_counter_2)
			        		end while

			        	end if
					wait($ANIM_FRAME_RATE)
			    end while 
			end if
			{LAST 2 Octaves #notes MOVE LEFT}
			if (in_range($EVENT_NOTE,5,14))
				$note_index := get_event_par($EVENT_ID,$EVENT_PAR_3)
			    $break_while := 0
			    $anim_counter_1 := 0
			    while ($anim_counter_1 < 126 and $break_while = 0) 
			        inc($anim_counter_1)
				    	set_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X, %kb_CONTROL_PAR[00 + ($note_index * 07)] - $anim_counter_1 + $KB_X_POS)
					wait($ANIM_FRAME_RATE)
			    end while 
			end if
			{FIRST octave white notes FOLD }
			if (in_range($EVENT_NOTE,15,21))
				$note_index := get_event_par($EVENT_ID,$EVENT_PAR_3)
			    $break_while := 0
			    $anim_counter_1 := 0
			    while ($anim_counter_1 < 126 and $break_while = 0) 
			        inc($anim_counter_1)
				    	set_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X, %kb_CONTROL_PAR[00 + ($note_index * 07)] - $anim_counter_1 + $KB_X_POS)
			    	    	if (get_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X) < 59 + $KB_X_POS) 	{if element reached right border}
			    	    		$break_while := 1
			    	    		$anim_counter_2 := %kb_CONTROL_PAR[00 + (20 * 07)] + 16
			    	    		while ($anim_counter_2 >= %kb_CONTROL_PAR[00 + (($note_index + 14) * 07)])
			    	    			set_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X, $anim_counter_2 + $KB_X_POS)
			    	    			wait($ANIM_FRAME_RATE)
			    	    			dec($anim_counter_2)
			    	    		end while
			    	    	end if
					wait($ANIM_FRAME_RATE)
			    end while
			end if
			{LAST 2 Octaves notes MOVE LEFT}
			if (in_range($EVENT_NOTE,22,35))
				$note_index := get_event_par($EVENT_ID,$EVENT_PAR_3)
			    $break_while := 0
			    $anim_counter_1 := 0
			    while ($anim_counter_1 < 126 and $break_while = 0) 
			        inc($anim_counter_1)
				    	set_control_par(%kb_id[$note_index],$CONTROL_PAR_POS_X, %kb_CONTROL_PAR[00 + ($note_index * 07)] - $anim_counter_1 + $KB_X_POS)
					wait($ANIM_FRAME_RATE)
			    end while 
			end if
			
			{after slide illusion reposition to original position}
			$kb_count_1 := 0
			while ($kb_count_1 < $NUM_kb_NOTES)
				set_control_par(%kb_id[$kb_count_1],$CONTROL_PAR_POS_X, %kb_CONTROL_PAR[00 + ($kb_count_1 * 07)] + $KB_X_POS)
			inc($kb_count_1)
			end while

			call label_octaves

		end if

	else
		set_key_pressed($played_key, 0)
	end if

	if (in_range($EVENT_NOTE,$MIDI_PTTRN_LOW,$MIDI_PTTRN_HIGH) and get_event_par($EVENT_ID, $EVENT_PAR_SOURCE) = -1)
		dec($key_counter)
	end if

	if (($NI_TRANSPORT_RUNNING = 0 and $playing_flag = 1) or ($key_counter < 1 and get_event_par($EVENT_ID,$EVENT_PAR_1) = $IS_KEYSWITCH))
		$play := 1
		pgs_set_key_val(COMMAND, 0, -1)
		pgs_set_key_val(PLAY_BUTTON, 0, $play)
		pgs_set_key_val(COMMAND, 0,  7)
	else
		$playing_flag := 0
	end if


end on

on pgs_changed
	select (pgs_get_key_val(COMMAND, 0))
		case 0
			if (pgs_key_exists(AC_LOAD_PURGE_STATE))
				$count_1 := 0
				while ($count_1 < $AC_NUM_GROUPS)
					%Ac_Group_PURGE_State[$count_1] := pgs_get_key_val(AC_LOAD_PURGE_STATE, $count_1)
					inc($count_1)
				end while
			end if
			if (pgs_key_exists(EL_LOAD_PURGE_STATE))
				$count_1 := 0
				while ($count_1 < $EL_NUM_GROUPS)
					%El_Group_PURGE_State[$count_1] := pgs_get_key_val(EL_LOAD_PURGE_STATE, $count_1)
					inc($count_1)
				end while
			end if
			
		case 1
			if (pgs_get_key_val(PRESET_DATA, 4) = 1) {update because of save |OR| delete}
				$sound_preset_load_id_1 := load_array(%user_num_snd_Presets,1)
				$sound_preset_load_id_2 := load_array(!user_sound_preset_names,1)
				$sound_preset_load_id_3 := load_array(%user_snd_preset_Ac_Group_PURGE,1)
				$sound_preset_load_id_4 := load_array(%user_snd_preset_El_Group_PURGE,1)
				
				while ($sound_preset_load_id_1 # -1 or $sound_preset_load_id_2 # -1 or $sound_preset_load_id_3 # -1 or $sound_preset_load_id_4 # -1)
					wait(10)
				end while

				if(%user_num_snd_Presets[0] = 0)
					$user_sound_preset_menu := $MAX_SOUND_FACT_PRESETS
					$user_sound_preset_menu_NEW := $user_sound_preset_menu
					set_control_par(%sound_preset_controls[06],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
					set_control_par($user_dummy_menu_id,$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
					set_menu_item_str(%sound_preset_controls[06], 0, "")
					set_menu_item_str($user_dummy_menu_id, 0, "")
					call update_sound_preset_menu
				else
					set_control_par(%sound_preset_controls[06],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
					set_control_par($user_dummy_menu_id,$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
					$arr_count_3 := 0
					while($arr_count_3 < $NUM_USER_SOUND_PRESETS)
						if ($arr_count_3 < %user_num_snd_Presets[0])
							set_menu_item_visibility(%sound_preset_controls[06], $arr_count_3, 1)
							set_menu_item_visibility($user_dummy_menu_id, $arr_count_3, 1)
							set_menu_item_str(%sound_preset_controls[06], $arr_count_3, !user_sound_preset_names[$arr_count_3])
							set_menu_item_str($user_dummy_menu_id, $arr_count_3, !user_sound_preset_names[$arr_count_3])
						else
							set_menu_item_visibility(%sound_preset_controls[06], $arr_count_3, 0)
							set_menu_item_visibility($user_dummy_menu_id, $arr_count_3, 0)
						end if
						inc($arr_count_3)
					end while
				end if
				call update_sound_preset_menu
			end if
			if (pgs_get_key_val(PRESET_DATA, 2) # -1) {*** call update menu here}
				$preset_helper := pgs_get_key_val(PRESET_DATA, 2)
				select ($preset_helper)
					case 0 to $NUM_FACT_SOUND_PRESETS_1 - 1
						$fact_sound_preset_menu_1 := $preset_helper
						$last_sound_preset := $fact_sound_preset_menu_1
						$last_bank_1 := $fact_sound_preset_menu_1
					case $NUM_FACT_SOUND_PRESETS_1 to $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 - 1
						$fact_sound_preset_menu_2 := $preset_helper
						$last_sound_preset := $fact_sound_preset_menu_2
						$last_bank_2 := $fact_sound_preset_menu_2
					case $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 to $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 - 1
						$fact_sound_preset_menu_3 := $preset_helper
						$last_sound_preset := $fact_sound_preset_menu_3
						$last_bank_3 := $fact_sound_preset_menu_3
					case $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 to $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4 - 1
						$fact_sound_preset_menu_4 := $preset_helper
						$last_sound_preset := $fact_sound_preset_menu_4
						$last_bank_4 := $fact_sound_preset_menu_4
					case $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4 to $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4 + $NUM_FACT_SOUND_PRESETS_5 - 1
						$fact_sound_preset_menu_5 := $preset_helper
						$last_sound_preset := $fact_sound_preset_menu_5
						$last_bank_5 := $fact_sound_preset_menu_5
					case $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4 + $NUM_FACT_SOUND_PRESETS_5 to $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4 + $NUM_FACT_SOUND_PRESETS_5 + $NUM_FACT_SOUND_PRESETS_6 - 1
						$fact_sound_preset_menu_6 := $preset_helper
						$last_sound_preset := $fact_sound_preset_menu_6
						$last_bank_6 := $fact_sound_preset_menu_6
					case $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4 + $NUM_FACT_SOUND_PRESETS_5 + $NUM_FACT_SOUND_PRESETS_6 to $NUM_FACT_SOUND_PRESETS_1 + $NUM_FACT_SOUND_PRESETS_2 + $NUM_FACT_SOUND_PRESETS_3 + $NUM_FACT_SOUND_PRESETS_4 + $NUM_FACT_SOUND_PRESETS_5 + $NUM_FACT_SOUND_PRESETS_6 + $NUM_USER_SOUND_PRESETS
						$user_sound_preset_menu := $preset_helper
						$last_sound_preset := $user_sound_preset_menu
						$user_sound_preset_menu_NEW := $user_sound_preset_menu
						$last_user_bank := $user_sound_preset_menu
				end select
				$Preset_Category := pgs_get_key_val(PRESET_DATA, 5)
				$category_mnu := $Preset_Category 
				set_control_par(%category_controls_id[01],$CONTROL_PAR_PICTURE_STATE,$category_mnu)
				call update_sound_preset_menu
			end if
		case 2
			call key_coloring
			if (pgs_get_key_val(GROOVE_ACTION, 0) # -1)
				$play := pgs_get_key_val(GROOVE_ACTION, 0)
				$key_counter := $play
			end if
			set_text($groove_display, pgs_get_str_key_val(GROOVE_TITLE))
		case 6
			call update_mapping_editor_gui
	end select
end on

on persistence_changed
	wait(500000)
	
	call key_coloring
	call update_sound_preset_menu
	
	$Preset_Category := pgs_get_key_val(PRESET_DATA, 5)
	$category_mnu := $Preset_Category 
	set_control_par(%category_controls_id[01],$CONTROL_PAR_PICTURE_STATE,$category_mnu)
	call update_sound_preset_menu

	pgs_set_key_val(COMMAND, 0, -1)
	$count_1 := 0
	while ($count_1 < 128)
		pgs_set_key_val(MAPPING, 	 $count_1, %inverse_mapping_data[$count_1])
		pgs_set_key_val(CUR_MAPPING, $count_1, %current_mapping_data[$count_1])
		inc($count_1)
	end while
	pgs_set_key_val(COMMAND, 0, 6)

	pgs_set_key_val(PURGE_MODE, 0, $purge_UNUSED)

	call recall_data
	call update_mapping_editor_gui
	
end on

